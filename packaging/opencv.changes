* Tue Jun 18 2013 <kevron.m.rees@intel.com>
- submitting to tizen

* Mon Jun 03 2013 tripzero <kevron_m_rees@linux.intel.com> submit/2.0/20130307.215744@cc726de
- new package for tizen

* Thu Mar 07 2013 tripzero <kevron_m_rees@linux.intel.com> 2.4.4@1cc57cf
- removed doc package
- removed doc package
- updated spec5
- updated spec4
- updated spec3
- updated spec2
- updated spec2
- updated spec
- Merge branch 'master' into 2.0alpha
- initial packaging
- Merge pull request #491 from Daniil-Osokin:cvtRGB2YUV420p
- Disable -fomit-frame-pointer for OS X Clang as it leads to crash on exception thrown
- Merge pull request #603 from taka-no-me:avoid_deps_on_missing_lib
- Merge pull request #602 from bitwangyaoyao:2.4_fixAdd
- Merge pull request #600 from taka-no-me:fix_build_warnings
- Avoid build falure in armeabi build with Android SDK
- Merge pull request #601 from apavlenko:android_tutorial_update
- Fix a bug in addWeighted x64 mode And a potential problem in remap
- removing redundant picture resize
- Merge pull request #598 from asmorkalov:lib_info_fix
- minor Android tutorial fixes
- Fix build warnings on MSVC x64 and OS X clang
- Merge pull request #595 from bitwangyaoyao:2.4_perfTest
- Merge pull request #594 from asmorkalov:android_all_build_fix
- Merge pull request #593 from apavlenko:java_tutorial_fixes
- Full package version fixed.
- Merge pull request #586 from bitwangyaoyao:2.4_FixBFMatcher
- fix a compile warning
- fix compile warnings
- Build with OpenCV.mk for all terget fixed.
- fixing issues from http://www.code.opencv.org/issues/2807
- Merge pull request #591 from jet47:gpu-sanity-tests
- Merge pull request #590 from apavlenko:java_fixes
- Merge pull request #589 from taka-no-me:2digit_pyversion
- Merge pull request #587 from bitwangyaoyao:2.4_fixHog
- Merge pull request #585 from bitwangyaoyao:2.4_SURF
- Merge pull request #525 from odeniz:2.4
- patch -> revision
- adding more version-related variables
- fixed gpu sanity tests
- Honor 2-digit python version
- updating samples to load JNI lib with correct suffix
- adding/fixing version suffix for desktop java library on all OSes
- Merge pull request #570 from taka-no-me:fix_android_cmakeconfig
- Merge pull request #572 from asmorkalov:manager_4_digit_version
- Merge pull request #584 from bitwangyaoyao:2.4_perfTest
- Merge pull request #582 from bitwangyaoyao:2.4_fixBlend
- OpenCV version swithed to 4 digit in GUI and package revision number.
- Fix ocl::HOG crash on Intel OCL
- Merge pull request #578 from jet47:nmake-ffmpeg-copy
- Merge pull request #573 from jet47:config-cross-compilation
- Merge pull request #557 from jet47:gpu-sanity
- linux warning fix
- fixed OpenCVConfig for cross-compilation:
- Fix ocl::bruteforcematcher crash on Intel OCL
- fixed ffmpeg destination folder for NMake generator
- fix bug #2787
- adjust some test cases, use original template file name in Haar
- fix the blend crash in some cases
- Revise git attributes
- Merge pull request #544 from AnnaKogan8:added-regressions-only-option
- Merge pull request #579 from bitwangyaoyao:2.4_perfTest
- Merge pull request #576 from bitwangyaoyao:2.4_customMat2
- Merge pull request #568 from bitwangyaoyao:2.4_moments
- fix build errors
- adjust matchTemplate in performance sample, as current version is too slow when template size isn't small
- Fix OpenCVConfig.cmake generated for Android platform (issue #2496)
- add interfaces enable custom oclMat device memory type
- Merge pull request #559 from jet47:gpu-hough-circles
- Merge pull request #563 from taka-no-me:perf_classify_speedups
- Merge pull request #556 from bitwangyaoyao:2.4_SURF
- Merge pull request #554 from bitwangyaoyao:2.4_impvInterFrame
- Merge pull request #553 from bitwangyaoyao:2.4_perfTest
- remove the compile warnings
- Add moments function
- fix the compile warnings
- pyrlk also take advantages of cl_image support detection
- Put the cl_image support detection in utils
- Merge pull request #565 from cuda-geek:auto-arch
- Merge pull request #564 from apavlenko:eclipse_import_fix
- add CUDA_GENERATION macro
- Merge pull request #561 from asmorkalov:android_tutorial_2_4_4_update
- fixing eclipse import errors
- Add option --with-score to summary.py to automatically classify speedups
- Merge pull request #549 from asmorkalov:android_mips_static_build_fix
- Merge pull request #552 from taka-no-me:fix_invert
- Merge pull request #555 from bitwangyaoyao:2.4_fixFft
- Fix ocl::dft the compile warning on Linux
- Android tutorial updated OpenCV version incremented; New CvCameraViewListener interface description added.
- Merge branch '2.4_fixFft' of https://github.com/bitwangyaoyao/opencv into 2.4
- fixed gpu HoughCircles test
- fixed warp tests
- fixed gpu bitwise operations with scalars
- refactored gpu perf tests and fixed sanity tests
- remove the device specific logic
- Fix ocl::dft error when program end on Linux
- Simplify the bind texture logic of interpolate frame function
- fix the mismatch of perf_test, add a performance sample for ocl module
- Feature #2833 Sepia size in Image Manipulations demo implemented.
- Fix invert under MSVC
- Added --regressions-only=X-FACTOR  option
- Static ANdroid samples build for MIPS fixed
- Merge pull request #524 from LeonidBeynenson:add_float_and_unsigned_parameters_to_cv_algorithm
- Merge pull request #547 from vpisarev:fixes_244
- replaced tabs with spaces
- attempt to make the ultimate fix for the failure in Core_Invert.small
- fixed Core_MulSpectrums failure
- Merge pull request #542 from asmorkalov:manager_2.4.4_filter
- Added multithreaded implementation for RGB to YUV420p color conversion
- Added tests for RGB to YUV420p color conversion
- Made changes to avoid warnings (Windows compilation).
- OpenCV Manager preparation to 2.4.4 release 2.4.4 constant added to Manager filter; Added additional native tests.
- Merge pull request #541 from bitwangyaoyao:2.4_fixCvtColor
- Merge pull request #540 from hgaspar:244
- Fix the ocl::cvtColor mismatch on some devices
- updated the ocl module introduction
- Added implementation for RGB to YUV420p color conversion
- Merge pull request #538 from NCBee:patch-2
- Merge pull request #537 from bitwangyaoyao:2.4_fixWarpAffine
- Merge pull request #535 from bitwangyaoyao:2.4_clean
- Merge pull request #536 from bitwangyaoyao:2.4_fixHaar
- Update doc/tutorials/core/adding_images/adding_images.rst
- remove the empty implementation when HAVE_OPENCL not defined
- fix mismatch of WarpAffine
- some cleanup
- fix the haar kernel problems on Nvidia and Intel OCL
- Remove the perf running from ocl::matchTemplate accuracy tests
- Update samples/c/smiledetect.cpp
- Update FFMPEG wrapper binaries
- Merge pull request #506 from asmorkalov:crosscompile_tutorial
- Merge pull request #531 from asmorkalov:android_mips_fix
- Merge pull request #530 from bitwangyaoyao:2.4_fixEqHist
- Merge pull request #529 from bitwangyaoyao:2.4_fixGemm
- Merge pull request #528 from bitwangyaoyao:2.4_fixPyrLK
- Merge pull request #527 from bitwangyaoyao:2.4_fixMeanShift
- Merge pull request #523 from taka-no-me:fix_2815
- Merge pull request #518 from asmorkalov:ts_refactor
- fix the warning on Linux when OpenCL 1.2 not supported
- Bug #2821 Installation of OpenCV modules breaks build on MIPS Android fixed.
- Fix ocl::equalizeHist mismatch
- Fix the compiling errors of gemm on Linux
- Merge pull request #526 from taka-no-me:fix_compatibility
- fix pyrLK's mismatch on Linux
- fix meanShift mismatch on none-double GPUs
- Repair binary compatibility of ocl module
- Update samples/c/smiledetect.cpp
- Fix binary compatibility of gpu module
- Added smile detector
- Changed error message in Algorithm::get.
- Removed urequired functions
- Merge pull request #520 from jet47:gpu-updates
- fix for OpenCV issue #2815
- Merge pull request #521 from asmorkalov:2.4.4_preparation
- Fixed documentation build
- updated gpu module API
- Merge pull request #502 from jet47:opengl-updates
- OpenCV 2.4.4 preparation
- Merge pull request #498 from asmorkalov:doc_ptr
- Merge pull request #519 from bitwangyaoyao:2.4_findOCL
- restored source compatibility
- Merge pull request #440 from AnnaKogan8:fixed-perfomance-tests
- Merge pull request #512 from jet47:core-gpu-updates
- restored binary compatibility
- cv::Ptr description extended.
- Add auto detection to Intel OCL
- Test system refactoring
- Merge pull request #508 from bitwangyaoyao:2.4_interpKernel
- optimized DeviceInfo class and ensureSizeIsEnough
- Increased time limits
- Switched to TEST_CYCLE_MULTIRUN for fast tests
- add openCLExecuteKernelInterop method
- Tutorial for ARM Linux cross compilation added.
- Merge pull request #505 from abidrahmank:2.4
- Update samples/python2/hist.py
- Merge pull request #503 from taka-no-me:fix_docs
- Merge pull request #500 from nielsgm:predict_python_wrapper_to_docs
- Merge pull request #492 from taka-no-me:fix_warnings_gcov
- Whitelist functions/structs in check_docs2 that are impossible to fix in 2.4
- Add support for enums into rst ocv domain
- Fix several inconsistent declarations identified by check_doc2 script
- updated OpenGL functionality:
- Fix warnings about missing parent for class members
- Hack to stop parsing of problematic CvStatModel::train definition
- Avoid problem of old sphinx reporting an error on lines starting from :
- Added the predict_all function wrapper for python that was missing from the documentation Copied the docstring description
- Merge pull request #499 from vpisarev:zeroelem_fix
- Merge pull request #451 from bitwangyaoyao:2.4_operator
- fixed problem reported by Thouis (Ray) Jones
- Merge pull request #469 from asmorkalov:android_manager_4number_version
- fix compiling errors on Linux more operators use oclMatExpr
- add oclMatExpr class to prevent extra allocations
- Merge pull request #301 from emchristiansen:javasample2.4
- Fix several warnings about uninitialized variables from gcov build
- converting images to PNG
- review feed-back considered
- Merge pull request #401 from Daniil-Osokin:bugfix_doc_setNumThreads
- Update FFMPEG wrapper binaries
- Merge pull request #489 from jet47:carma-obsolete
- changing layout, adding ant and eclipse sections, more pictures
- Rewrote doc for set-get number of threads functionality with support new frameworks (bug #2064)
- Fixed getNumThreads() for C=
- Merge pull request #487 from asmorkalov:manager_localref_fix
- removed obsolete CARMA toolchain and CMake variable
- Merge pull request #488 from AnnaKogan8:updated-ABI-compliance-descriptor-script
- Merge pull request #485 from jet47:gpu-new-functionality
- Updated script for ABI compliance check
- Issues in management of local reference to jni objects fixed.
- refactored OpticalFlowDual_TVL1:
- Merge pull request #486 from amroamroamro:2.4
- Merge pull request #479 from ilya-lavrenov:TestHighGUI
- add description of ddepth param of cv::boxFilter
- added perf4au app
- added gpu optical flow sample
- added Warp::reduce function
- added gpu BM optical flow implementation
- added gpu::HoughLinesP function
- added gpu::normalize function
- added mask support to gpu norm and sum
- added gpu compare with scalar
- added enqueueHostCallback method to gpu::Stream
- added dual tvl1 optical flow gpu implementation
- Merge pull request #483 from taka-no-me:cmake_tweaks
- added dual tvl1 optical flow implementation
- Detect and report parallel framework used
- Use git describe to get source control version
- Add separate status section for java
- Add OpenCL section to status report
- Detect version of clang compiler
- Merge pull request #480 from taka-no-me:ffmpeg_warnings
- Fix warnings from ffmpeg wrapper
- Merge pull request #477 from asmorkalov:android_version_info
- Merge pull request #478 from jet47:gpu-reduction-fix
- Merge pull request #468 from kirill-kornyakov:test-for-saturate-cast
- removed libstdc++ dependency
- Build info output for all android apps added.
- fix performance issue of gpu reduction
- Merge pull request #476 from apavlenko:eclipse_import_fix
- Merge pull request #470 from kirill-kornyakov:bug_2788_testing_add_method_for_column
- Merge pull request #473 from prclibo:2.4
- Merge pull request #471 from apavlenko:jar_install
- fixing eclipse import errors that can also be fixed via 'Fix Project Properties' menu
- Merge pull request #467 from asmorkalov:manager_jni_overflow
- Merge pull request #416 from asmaloney:mat-docs-cleanup
- fix issue 2788
- Reenabled second test
- Temporary disabled parallel_writers_and_readers test
- configure desktop Java install, making JNI library name correct, and making it fat when possible
- Bug #2759 android.os.DeadObjectException on OpenCV Manager connection fixed. DeleteLocalRef calls for jclass objects added.
- Added two tests to highlight bug #2788
- Bug in hardware ratings fixed.
- Native testing for OpenCV Manager enabled
- Added a test that documents that negative numbers are not clipped by cv::saturate_cast
- Merge pull request #457 from taka-no-me:fix_vars_expansion
- Adjust OpenCV version to 2.4.4
- Revert ffmpeg related changes from "thread-safe VideoWriter and VideoCapture"
- Merge pull request #465 from asmorkalov:android_camera_connect
- Merge pull request #466 from taka-no-me:fix_android_package
- Merge pull request #464 from asmaloney:missing_fclose
- Merge pull request #458 from taka-no-me:tbb_4.1u2
- Merge pull request #454 from asmorkalov:android_samples_reorganize
- Merge pull request #446 from AnnaKogan8:updated-perf-timing-script
- Fix build of package for Google Play
- Code review notes fixed.
- Issue in NativeCameraView and JavaCameraView fixed. In previous version getWidth() and getHeight() values were used instead method parameters.
- If generating a bin file (second half of conditional), make sure the file is closed (Also fix spelling in comment)
- Merge pull request #456 from vpisarev:python_ptseq_fix
- Merge pull request #428 from bitwangyaoyao:2.4_erode_dilate
- Merge pull request #402 from asmorkalov:samples_data_rase_fix
- Update tbb to version 4.1 update 2
- Merge pull request #455 from AlexeySpizhevoy:2.4
- Merge pull request #452 from asmorkalov:android_tutorial_update
- Merge pull request #450 from bitwangyaoyao:2.4_dft
- Fix CMake variables substitution in Android project files
- fixed problem with Nx2 numpy arrays in geometrical functions (#2783)
- fixed assertion failure (vector out of range) for the 'vc10,debug' build (#2775)
- Tutorial for Android synchronized with actual application framework.
- Merge pull request #442 from asmorkalov:linux_cross_compile
- Merge pull request #448 from Nerei:bp_doc_change_24
- Tutorial-1-Java -> Tutorial-1-CameraPreview Issues fix.
- Project files for Eclipse updated.
- Tutorial-5 -> Tutorial-3
- Tutorial4 sample renamed to Tutorial-2-MixedProcessing
- Tutorial-3 removed as dublicate part of tutorial-4.
- Tutorial-2 removed as dublicate of tutorial-1 and image manipulations sample.
- Tutorial 1 renamed
- Code review notes fixed; HardFP and SoftFP toolchains joined to one; RPATH skiping added.
- 15-puzzle app reverted to usage of old CvCameraViewListener implementation; super.onPause() call moved to begining of onPause method according Google recomandations.
- add +-*/ operators to oclMat
- some bugs fix in using AmdFft library
- BP doc change according to Adrian's request (OpenCV book co-author)
- Added --failed-only option and multiple input files support
- Code review issues fixed. Compatibility issues fixed.
- Merge pull request #444 from taka-no-me:fix_o0_warnings
- Fix some warnings from -O0 build
- The next attempt to fix a build error on Mac.
- Merge pull request #443 from taka-no-me:fix_cascade_test
- Try to fix Mac compilation issue.
- Merge pull request #441 from jet47:filter-speckles-8u
- Use gtest assertions in cascade test
- Carma board support fixed.
- TBB build for arm linux fixed. Processors count detected correctly.
- CUDA toolkit support added to crosscompilation toolchain.
- Compiler and linker flags for arm cross compilation fixed.
- Code review notes applied. Toolchain for arm hardfp added.
- TBB build defines for Linux added.
- Cross compilation toolchain for arm linux added.
- TBB download and build option enabled for non Android platfroms.
- Video IO perf tests guarded.
- added 8u type support to filterSpeckles function
- Merge pull request #434 from taka-no-me:fix_parallel_writer_test
- Merge pull request #438 from bitwangyaoyao:2.4_fixwarings
- remove the warnings in accuracy test
- Merge pull request #432 from bitwangyaoyao:2.4_blend
- Merge pull request #431 from snosov1:matchTemplate-tegra
- remove a warning on Linux fix a error in doc
- Added float, uint64, and uchar params to Algorithm Made changes to work in cv::Algorithm with parameters of these types. Also fixed SimpleBlobDetector -- now it can be created by cv::Algorithm::create and it can work with cv::Algorithm::set/get.
- Android samples updated according onCameraFrame callback signature change. FpsMeter class removed from Image Manipulations and Face Detection examples as unused code.
- onCameraFrame callback signature changed. CvCameraFame interface added.
- Merge pull request #427 from vrabaud:brisk_fixes_2.4
- stricter eps for normed methods
- Merge pull request #404 from asmorkalov:android_opencvmk_fix
- Merge pull request #408 from asmorkalov:giganetix_cams_patch
- Make parallel video writer test pass if compiled without threading support
- define the default remapping in the right scope
- write documentation for  BRISK
- blend use vector to optimize
- matchTemplate perf tests added
- enable Tegra optimizations
- Merge pull request #420 from asmaloney:check-mem-alloc
- Modules redifinition in case of multiple includes of OpenCV.mk in single Android.mk fixed.
- Merge pull request #429 from bitwangyaoyao:2.4_setdevEx
- Merge pull request #425 from asmaloney:vector_empty
- Merge pull request #424 from asmaloney:additional-checks
- Merge pull request #421 from asmaloney:check-mem-alloc2
- Merge pull request #410 from taka-no-me:fix_cap_dshow_setfps
- Merge pull request #395 from LeonidBeynenson:fix_ml_large_data_bug__2.4
- add setDeviceEx interface simplify the logic of save binary
- simplify the kernel logic when using rect kernel or without ROI
- No need to check vector size before clear()
- Remove unused constructor Add checks for valid values Fix wording on some errors
- Check memory allocation Declare vars as locally as possible
- Check memory allocation Initialize local variables
- Merge pull request #414 from asmaloney:remove-unused-vars2
- Merge pull request #415 from asmaloney:cvCopyHist-fix
- Mat tutorial - grammar and spelling fixes
- Fix subtle bug when src & dst agree on sparsity but have different dimensions Remove unused var "total" Declare vars as locally as possible
- Remove unused vars
- Fix setting of FPS after frame width and height with DShow cameras
- Merge pull request #407 from taka-no-me:fix_java_after_surf_change
- Update regression checks in Java test
- Fixed dummy warning.
- Smartek Giganetix Cameras support (Patch #2192) integrated.
- Merge pull request #405 from vpisarev:znah_patch
- Changed types of some variables from int64 back to int. Also corrected some indexes to be size_t.
- a part of PR269 (parallelization of several functions) by Alexander Mordvintsev
- Merge pull request #396 from vpisarev:facedetect_fixes
- Merge pull request #400 from ilysenkov:bugfix_2560
- Merge pull request #397 from ilysenkov:bugfix_2677
- Merge pull request #398 from ilysenkov:bugfix_2330
- fixed compile warnings
- Merge pull request #392 from vpisarev:python_fixes2
- Documented the TermCriteria class (#2560)
- Added info() method in descriptor matchers (#2330)
- Checked key_size in LSH table for validness (#2677)
- Added a test for invalid key sizes in LSH tables
- disabled the use of SSE4 instructions as well to make the code compatible with the old Intel and AMD chips
- added test for the old cvHaarDetectObjects. disabled AVX optimization in haar.cpp. it should cover tickets #2534, #2591, #2669
- Merge pull request #390 from taka-no-me:fix_relative_error_check
- Merge pull request #318 from AnnaKogan8:fixed-perf-tests
- Merge pull request #394 from taka-no-me:fix_tiff_test
- Merge pull request #393 from Daniil-Osokin:bugfix_doc_multi_issues
- yet another minor fix in cv::transpose()
- fixed failure of the C++ test for estimateAffine3D
- Made changes to allow ml module to work with big data.
- Merge pull request #391 from taka-no-me:fix_buildbot_issues
- Modify decode_tile16384x16384 test to not fail when available memory is not enough for test
- Fixed multiple issues in docs (bug #2410)
- applied patch #2587
- Increased time limits, eliminated extra params
- added tests for fast (ticket #2613) and estimateAffine3D (#2375)
- Temporary disable unstable Features2d_RotationInvariance_Detector_SIFT test
- Suppress clang build warning
- Correct tolerance value for sanity checks with ERROR_RELATIVE
- fixed bugs #1718, #2375; attached the new tests to test.py.
- Merge pull request #389 from Daniil-Osokin:bugfix_doc_opencv_with_cmake
- Merge pull request #385 from etalanin:bug2607
- Merge pull request #381 from vpisarev:surf_fixes
- Fixed sample files in "Using OpenCV with gcc and CMake" tutorial (bug #2663, #2588)
- Merge pull request #387 from taka-no-me:fix_dshow_fourcc_conversion
- Merge pull request #382 from cuda-geek:fix-broken-links-bug-2689
- Fix and test for #2607
- Merge pull request #383 from cuda-geek:apply-opencv-macosx-patch
- Fix truncation of fourcc value in dshow capture property setter (bug #2535)
- Merge pull request #374 from ivan-korolev:fix_estimateRigidTransform
- apply patch #2686
- Merge pull request #375 from taka-no-me:fix_opticalflow_2075
- Merge pull request #373 from ilysenkov:bugfix_2440
- Merge pull request #376 from taka-no-me:solve_tiff_conflict
- fix broken links in cascade classification documentation
- Merge pull request #378 from ivan-korolev:fix_OpenCVDetectTBB_cmake
- Merge pull request #380 from asmorkalov:java_test_fix2
- Merge pull request #377 from ivan-korolev:fix_v4l_yes-yes_build
- changed default parameters of SURF, which improved its performance. Restored bi-linear interpolation in SURF descriptor extractor. Added test for SURF homography + check for non-zero (positive) responses.
- Merge pull request #379 from taka-no-me:fix_ocl_samples_warnings
- TestCheckVector java test fixed. Warning fixed.
- Fix build warnings in OpenCL samples
- fix default include dirs for TBB
- fix v4l yes-yes build
- Solve conflict between tiff.h and opencv2/core/types_c.h
- Allow input of calcOpticalFlowPyrLK be submats of different size images
- Add test for issue #2075
- Fixed bug in the cv::estimateRigidTransform (#1949)
- Fixed cvDestroyAllWindows() without windows in QT (#2440)
- Tested cvDestroyAllWindows() without windows
- Merge pull request #365 from ivan-korolev:fix_HoughLines_segfault
- Merge pull request #371 from taka-no-me:fix_build
- Merge pull request #370 from ilysenkov:bugfix_1747
- Merge pull request #369 from asmorkalov:corner_detection_tutorial
- Merge pull request #368 from ilysenkov:checkSubset-fix
- Merge pull request #366 from asmorkalov:gstreamer_codec_list
- Merge pull request #362 from Daniil-Osokin:bugfix_doc_StereoSGBM
- Merge pull request #361 from taka-no-me:tiff_big_tile
- Merge pull request #358 from taka-no-me:objc_exceptions
- Fix clang build warning
- Fix Windows build warnings
- Added support of different resolution in rectify3Collinear
- Fix Android build warnings
- Bugfix #2532 patch 4 corner detection sample possible bug solved.
- Merge pull request #364 from Daniil-Osokin:bugfix_doc_features2d_tutorial
- Merge pull request #356 from Daniil-Osokin:bugfix_imread_tutorial
- Added processing of trivial subsets
- Fix build of OpenCV samples (Linux)
- Patch #2721 More FourCC for gstreamer applied.
- Added regression test for HoughLines algorithm
- Added nonfree header in "Feature description" tutorial code sample (bug #2527)
- Fixed proposed values for speckleRange in StereoSGBM docs (bug #1937)
- Fixed color code in cvtColor in "Load, Modify, and Save an Image" tutorial (bug #2739)
- Fix rollover when computing buffer size in tiff decoder (bug #2161)
- Added minimal support for tiff encoder parameters and test for issue #2161
- Merge pull request #360 from vpisarev:sift_fixes
- fixed #2580, #2210. some work on #2025.
- Merge pull request #357 from taka-no-me:build_opencv_apps
- Merge pull request #346 from taka-no-me:decouple_V4L2
- Add -fobjc-exceptions flag to ObjectiveC sources if supported (bug #2657)
- Add option to control build of applications (feature #2568)
- Rebase and merge pull request #342 from ilysenkov/bugfix_2470
- Fixed #2470
- Added a test of CvModelEstimator2::checkSubset(...)
- Merge pull request #339 from vpisarev:core_fixes
- Fix build warning
- Merge pull request #355 from asmaloney:copy_paste_cond
- Merge pull request #354 from asmaloney:fix_mem_dealloc
- Merge pull request #347 from asmorkalov:WITH_FFMPEG_logic
- Merge pull request #351 from vpisarev:python_fixes
- Video IO perf tests guarded.
- Merge pull request #353 from asmaloney:arg_checks
- Merge pull request #328 from jet47:new-gpu-fixes
- {calib3d} Fix copy-paste error in conditional
- Fix mem leak and mismatched new/delete
- Check pointers before using them in var init
- Merge pull request #350 from asmorkalov:android_java_warnings
- Merge pull request #349 from Daniil-Osokin:bugfix_opencv_cheatsheet
- Merge pull request #348 from Daniil-Osokin:bugfix_YCrCb_formula
- Merge pull request #345 from Daniil-Osokin:bugfix_2550
- Merge pull request #344 from taka-no-me:improve_jpeg_encoder_errors
- hopefully fixed handling of 'long' Python type in OpenCV bindings (bug #2193). added the corresponding test
- Extended python bindings to support scalar values and tuples in place of InputArray (i.e. Mat) - ticket #2658. Added tests for #2611, #2505, #2658
- Extended python bindings to support scalar values and tuples in place of InputArray (i.e. Mat) - ticket #2658. Added tests for #2611, #2505, #2658
- Merge pull request #343 from taka-no-me:fix_nlmeans_2646
- Resolve warning in OpenCV Library project in Eclipse (Bug #2714)
- Fixed cheatsheet for loop (bug #2701)
- applied patch #2611 that also likely fixes #2505
- Fixed formula of YCrCb to RGB conversion (bug #2725)
- Don't check for EINTR and replace xioctl with ioctl
- Removed obsolete steps from Windows installation tutorial (bug #2550)
- added tests for #1373, #2629, #2719; fixed another bug in determinant(Matx<T,n,n>)
- NetBSD video(4) support, patch 3 of 3
- NetBSD video(4) support, patch 2 of 3
- NetBSD video(4) support, patch 1 of 3
- Improve error reporting of JPEG image encoder
- Fix integer overflow in NL-Means denoising on white input
- Add test for issue #2646
- Change Imgproc_ prefix to Photo_ in all accuracy tests of photo module
- Merge branch 'fix_jpg2000' into 2.4
- {highgui} Fix copy-paste error in conditional
- fixed bugs #1373, #2629, #2719
- Merge pull request #337 from taka-no-me:ocl_appsdk
- Fix OpenCL build warnings
- Find OpenCL in AMD APP SDK
- Merge pull request #336 from ivan-korolev:fix_relative_error_formula
- Fixed a formula to calculate the relative error
- Merge pull request #324 from bitwangyaoyao:2.4_cvtcolor
- Merge pull request #325 from bitwangyaoyao:2.4_fixcanny
- Merge pull request #327 from bitwangyaoyao:2.4_vs2012
- Merge pull request #334 from asmaloney:2.4
- Docs: Fix invalid conversion format in example (CV_BGR2GREY -> CV_BGR2GRAY)
- Merge pull request #305 from stephenfalken:2.4
- Merge pull request #332 from taka-no-me:fix_ocl_warnings
- Fix ocl build warnings
- Merge pull request #331 from taka-no-me:fix_java_debug
- fixed broken indentation
- Merge pull request #330 from sromberg:2.4
- Fix debug build of Java warppers
- Merge pull request #321 from apavlenko:warp_sanity_check
- Fixed visualization by choosing the color appropriate to the detection
- make ocl module compile on VS2012
- fix canny crash in bug #2279
- ocl::cvtColor support YUV and YCbCr formats
- fixed build for CARMA:
- implemented Luv/Lab <-> RGB conversion
- added more types support for gpu separable filters
- optimizations:
- fixes for gpu module:
- fixed tests (call resetDevice, if there was a gpu failure)
- Merge pull request #315 from taka-no-me:java_on
- fixing build warnings
- Enable Java bindings on all platforms by default
- Quiet output of cv::error in Java tests
- Java tests: print summary for tests run
- Java API: fix build warning on OS X
- Add option to run java tests with run.py
- enabling sanity checks for warp and resize functions on Android - add syntetic images generation function to ts - use generated syntetic images
- Merge pull request #299 from branch 'bitwangyaoyao_ocl' into 2.4
- some host side optimizations to ocl::GaussianBlur
- use format on filtering.cpp
- make oclHaarDetectObjects running on more ocl platforms
- A few optimizations to ocl::pyrLK::sparse, make it running on more OCL platforms
- add default clAmdFft and clAmdBlas path
- fix bug #2674
- Merge pull request #295 from apavlenko:test_surf_keypoints_invariance
- Merge pull request #319 from AnnaKogan8:added-surf-keypoints-cleanup
- Added cleanup of keypoints vector
- Hardly refactored CMake script for Java wrappers
- Eliminate intermediate build target "opencv_java_api"
- Merge pull request #316 from mdim:draw_matches_fix
- Added a desktop Java tutorial
- check of keypoint index range in drawMatches
- Merge pull request #306 from AnnaKogan8:perf_tests_timing.py-improvement
- Merge pull request #314 from vpisarev:2.4
- changed diagnostic from "warning" to "note" in the python wrapper generator, to suppress some noise in opencv utilities
- Merge pull request #312 from taka-no-me:cheatsheet
- Merge pull request #310 from taka-no-me:4digit_version
- Merge pull request #309 from asmorkalov:android_manager_4number_version
- Add opencv_cheatsheet.pdf to documentation build and silence Latex output
- Consistently use 4-digit library version
- 4 digit library version numeration implemented in OpenCV Manager
- Merge pull request #304 from apavlenko:test_java_fix_double
- MeanshiftGrouping Bugfix (Bug #2685)
- fixing test failure on some systems
- Merge pull request #296 from asmorkalov:html_docs_warning_fix
- Merge pull request #297 from taka-no-me:fix_deps
- Merge pull request #302 from taka-no-me:fix_doc_sphinx107
- Merge pull request #300 from taka-no-me:java_64bit
- Fix documentation build with Sphinx 1.07
- Adds samples for Java and Scala
- Fix incorrect Mat address reconstruction on 64-bit platforms
- Switched time from seconds to minutes
- Added 'Num of tests' col, changed headers, added 'overall time' row
- Fix dependencies inference for auto-disabled targets
- fixinf warning on non-Windows systems
- Documentation build warning fixes.
- SURF keypoints rotation invariance test. It calcs kpts for a cross and checks that 4 kpts at the edges have equal responce.
- Merge pull request #240 from emchristiansen:javatest2.4
- more tests fixes
- Merge pull request #287 from taka-no-me:fix_cvCalcOpticalFlow_2526
- Merge pull request #288 from taka-no-me:fix_unused_cmake_variable
- Always touch variable controlling build of the module
- Fix cvCalcOpticalFlow when the status parameter is NULL
- Merge pull request #284 from taka-no-me:fix_equalize_hist_2678
- Merge pull request #283 from AnnaKogan8:perf_tests_timing.py-improved-console-output
- Fix histogram calculation in equalizeHist
- Merge pull request #280 from vpisarev:bug_fixes_jan9
- Improved console output
- Cleaned code
- Fixed last testsuit disregarding
- fixed bug #2679
- Merge pull request #272 from 5kg:fix_haar
- Merge pull request #278 from taka-no-me:fix_build_jpeg9
- Merge pull request #279 from taka-no-me:mingw_java
- Merge pull request #265 from taka-no-me:doc_signatures
- Fix build with libjpeg release 9
- Fix build of java bindings on mingw
- Merge pull request #275 from mdim:bug_fix_cvboost
- Merge pull request #270 from wswld:2.4
- Merge pull request #271 from 5kg:fix_cascade
- fixed CvBoost::predict (Sometimes sample_data became bad because the buffer with its values was deallocated early).
- Changed parallel_for to parallel_for_ in haar.cpp
- partial fix for failing tests; fix for Windows launcher script; more quiet output
- Fix race condition for Cascade Classifier when TBB enabled.
- Fixed a bunch of minor issues in 'dev_with_OCV_on_Android.rst'.
- Fix discrepancies between function signatures in headers and documentation
- Improve function arguments parsing and checking
- Merge pull request #264 from kirill-kornyakov:remove-hack-from-hough-lines-perf-test
- Removed hack from perf test on HoughLines, since I hope it is fixed by pr263
- Merge pull request #263 from taka-no-me:hough_explicit_double
- Merge pull request #261 from apavlenko:samples_remove_empty_menu
- Merge pull request #262 from kirill-kornyakov:minor-cleanings-for-android-sdk
- Explicitly use double precision sin & cos in hough implementation
- Updated OpenCV Manager rst documentation
- hiding empty menu button on Android 4
- Updated readme.txt with desciption about different OCV Manager packages
- Merge pull request #247 from wswld:2.4
- updating tutorial #2
- Merge pull request #257 from AnnaKogan8:perf-tests-timing-script
- Merge pull request #259 from asmorkalov:manager_outofbound_fix
- Merge ppull request #258 from asmorkalov/android_emu_fix
- Merge pull request #260 from alekcac:css_fix
- updating tutorial #1
- modify default css for search button (error #2654)
- OpenCV Manager crashes with exception (Bug #2660)
- OpenCV example-tutorial1 does not work on Android emulator (Bug #2656)
- Improved code
- Wrote script generating timing table
- Merge pull request #256 from znah:2.4
- Merge pull request #255 from taka-no-me:fix_batchdist_test
- fix #2643: use SVD to solve least squares in cvStereoRectifyUncalibrated
- Merge pull request #252 from taka-no-me:fix_stlport_build
- Merge pull request #254 from taka-no-me:array_total
- Show STL type in CMake status report
- Fix memory corruption in batchDistance perf tests
- Honor multidimensional matrices in InputArray::total
- Fix build with STLPort from NDK r8d
- Merge pull request #250 from taka-no-me:android_ndk_r8d
- Workaround "Segmentation fault" when built with gcc 4.7 from NDK r8d
- Updated Android introductory tutorials, based on frequent Q&A questions/issues.
- Add support for Android NDK r8d
- Merge pull request #248 from taka-no-me:reduce_tmp_size
- Use .yml.gz format to reduce space requirement from ~260Mb to ~17Mb for ml tests
- Adjust OpenCV version to 2.4.3.2
- Merge pull request #244 from asmorkalov:manager_nonarm_fix
- Merge pull request #243 from takacsd:2.4
- Hardware platform detection for non arm devices fixed.
- Merge pull request #242 from asmorkalov:manager_warning_fix
- Add missing _WIN32 check in core/operations.hpp.
- Merge pull request #241 from taka-no-me:less_cc_tests
- All OpenCV Manager compiler warrnings fixed.
- Reduce number of performance tests for LBP cascade
- Merge pull request #238 from asmorkalov:android_resolution_sample
- Tutorial-5 sample extended.
- adds desktop java junit tests
- Merge pull request #237 from asmorkalov:android_make_install_fix
- Merge pull request #235 from asmorkalov:doc_manager_selection
- OpenCV for Android SDK installation improved;
- Fix ccache search in Android CMake toolchain.
- Merge pull request #236 from asmorkalov:javadoc_fix
- Merge pull request #202 from Daniil-Osokin:calcHist
- A lot of javadoc warnings duting javadoc build (Bug #2647) issue fixed
- Merge pull request #232 from asmorkalov:compiler_bug_workaround
- Merge pull request #226 from taka-no-me/equalizeHist
- Add threaded version of equalizeHist
- OpenCV Manager selection chapter added to documentation.
- Workaround for gcc overoptimization compiler bug.
- perf tests for calcHist 2-3D case
- TBB version of calcHist
- Merge pull request #225 from pieleric:2.4
- Merge pull request #227 from taka-no-me:sanity_MatND
- Add support for multidimentional matrices into the sanity checks
- Merge pull request #224 from wswld:2.4
- Fix equalization formula in equalizeHist function & rewrite in C++
- highgui: fix segfault on CvCapture_GStreamer::open
- Merge pull request #222 from taka-no-me:perf_verify_sanity
- Fixes for issues #2570, #2492, #2559, #2489, #2592.
- Fix sanity checks in stitching test
- Merge branch 2.4 into perf_verify_sanity
- Added thresholds to some sanity checks
- Add --perf_verify_sanity option to performance tests
- Merge pull request #215 from asmorkalov:manager_depricated_packages
- Merge pull request #223 from taka-no-me:perf_tests
- Merge pull request #200 from asmorkalov:t5_fix
- Merge pull request #221 from asmorkalov:doc_install_fix
- Corrected sanity checks in several perf tests
- Installation of documents fixed.
- Tag "safe to remove" added to unused packages; OpenCV Manager version++.
- Merge pull request #212 from taka-no-me/fix_2602
- Merge pull request #204 from asmorkalov/manager_internal_lib
- Merge pull request #205 from taka-no-me/gtest_r629
- Merge pull request #206 from asmorkalov/manager_version_fix
- Merge pull request #214 from jmunk1/bugfix-2610
- Merge pull request #219 from kirill-kornyakov/hack-hough-lines-sanity-test-on-win32
- Ugly hack to make HoughLines sanity check pass on Wun32
- Refactored run.py script and temporary file generation logic
- Date and time added to saved file name.
- Fixed typo in OpenCVDetectOpenCL.cmake that resulted in cmake not finding OpenCL on windows.
- Prevent imread from illegal memory access (Bug #2602)
- Bug with skiped packages fixed.
- Bug #2595 in OpenCV Manager fixed.
- GetPublicName function removed for OpenCV LibraryInfo class; Some OpenCV Manager UI behavior updates; CMake build fix.
- Update gtest to upstream r629
- Merge pull request #197 from asmorkalov:ffmpeg_status_message_fix
- Info library loading implemeneted.
- Internal version of OpenCV inside OpenCV Manager added to the list of installed packages.
- Initial stub for OpenCVLibraryInfo class added.
- Feature #1322 "If dll cannot be loaded a warning should be generated" implemented.
- Sample Tutorial-5 improved
- Adjust Android Manager version from 2.2 to 2.3
- Remove compiled pdf files from source control
- Adjust OpenCV version to 2.4.3.1
- Merge pull request #199 from apavlenko/remove_android_tutorial0
- Merge pull request #191 from asmorkalov:custom_cam_init
- removing Android tutorial 0 since it has become irrelevant after moving to the new application framework
- Merge pull request #198 from asmorkalov:disable_warp_tests
- Code review comments applied
- Some perf tests on warping and resize disabled on Android
- Merge pull request #194 from asmorkalov/v4l_fix
- Merge pull request #195 from vpisarev/inv3x3_fix
- Merge pull request #196 from jet47/gpu-bug-2581
- fixed Bug #2581
- now invert 3x3 on "bad" matrices works well on Windows
- Patch #2323 "cap_libv4l.cpp clears default width and height after setting them" applied.
- Merge pull request #193 from AnnaKogan8/perf-tests-increase-time-limits
- Merge pull request #192 from taka-no-me/ndk_selection_fix
- increased time-limits
- increased time-limits
- Merge pull request #175 from taka-no-me:run_py
- Merge pull request #190 from asmorkalov:ninja_fix
- Android: always sort list of NDK toolchains
- Tutorial-5 functionality implemented.
- Base for new sample added.
- Merge pull request #188 from asmorkalov:app_framework
- Merge pull request #189 from wswld:2.4
- OpenCV Manager build via ninja (Bug #2575) fixed.
- Added a note to the android_dev_intro.rst.
- Code review comments applied.
- Samples updated
- Attribure loading from layout improved.
- OpenCV app framework improved
- Merge pull request #187 from vpisarev:doc_fixes_2.4
- Merge pull request #183 from apavlenko:perf/android_filters_accuracy
- Merge pull request #185 from apavlenko:bug2569/simplify_samples_jni_code
- Increase accuracy interval for image filters on Android and other platforms when sensible
- fixed a few compile errors/warnings in 2.4 branch of the docs
- Merge pull requst #177 from cuda-geek/another-one-integral-fix
- fixed typo
- (#2569) simplifying code to avoid Eclipse CDT editor confusion, removing warnings and typos in comments
- remove unnecessary copying in SURF
- reintegrate warp shuffle based integral
- fix cascade classifier GFF NMS for empty candidates vector
- Merge pull request #179 from cuda-geek:usr-bin-env-python
- Merge pull request #180 from mdim:fix_compile_error
- Merge pull request #178 from cuda-geek:fix-2504
- fix a compile error in case of building without highgui
- replace offsets in surf to simple copy for better speed
- run.py: add --check option for easy run of sanity checks
- run.py: improve handling of multiple Android devices
- align grid by 4
- fix for 2504: WITH_CUDA disabled with OSX in 2.4.3.
- add #/usr/bin/env python to all python files
- Merge pull request #172 from asmorkalov:default_cam_lib_path
- Merge pull request #174 from asmorkalov:full_sreen_fix
- Issue #2549 OpenCV Samples does not expand on full screen fixed.
- Default native library path for native camera updated.
- OpenCV Manager headers refactoring.
- Merge pull request #171 from asmorkalov:android_8_neon_fix
- Merge pull request #168 from asmorkalov:android_42_camera_fix
- Automatic minsdkversion setup added; Linker problems on armeabi-v7a+NEON with Android 2.2 fixed;
- Merge branch 'ParallelVideoStreams' of https://github.com/ilya-lavrenov/opencv into 2.4
- Issue #2547 Native camera does not work on Google Nexus 7 with Android 4.2 fixed; Issue #2506 Unnecessary log printouts in OpenCV::camera fixed; Native camera for MIPS Android 4.1.1 added. Build script for camera updated.
- Merge pull request #161 from apavlenko:fix/sdk_r21
- Improving compatibility with the latest Android SDK (r21) and NDK (r8c).
- Merge pull request #170 from asmorkalov:engine_build_fix
- Merging pull request #169 from taka-no-me:android-ndk-r8c
- Merging pull request #167 from asmorkalov:java_api_manager_test
- Libinfo build fix; Libinfo revision formating fix; HW dependent VersionCode for Manager implemented.
- Merging pull request #162 from taka-no-me/opencv
- 'Merging pull request 163 from asmorkalov/opencv'
- Fix Android build with clang compiler
- Update Android CMake toolchain for NDK r8c
- Test execution inside Eclipse fixed; OpenCV testing via OpenCV Manager implemented.
- thread-safe VideoWriter and VideoCapture
- Issue #2548 Missing static library libtbb.a for armeabi and mips build fixed.
- Update URL for TBB download. Update to TBB 4.1 update 1
- Merge pull request #160 from asmorkalov/android_4_2_manager_fix
- Merge pull request #159 from asmorkalov/libinfo_install_fix
- Merge pull request #157 from vpisarev/bug_fixes5
- Issue #2537 OpenCV Manager doesn't work on Android 4.2 fixed.
- Issue #2541 make install does not work for Android build fixed.
- added CV_OUT to StereoVar output paramiter
- Merge pull request #156 from jet47/gpu-hough-lines-fix
- Merge pull request #155 from jet47/gpu-test-fix
- Merge pull request #149 from taka-no-me/osx_warnings
- Merge pull request #148 from taka-no-me/tutorial_codes
- Merge pull request #146 from taka-no-me/win_opengl
- Merge pull request #145 from taka-no-me/vec_print
- Merge pull request #143 from vpisarev/bug_fixes4
- Merge pull request #141 from jet47/gpu-pyrlk-fix
- Merge pull request #144 from asmorkalov/fd_package_fix_2.4
- fixed bug in gpu::HoughLines
- fixed gpu module tests
- Fix OS X build warnings
- Rename sample & tutorial executables
- Build tutorial codes together with other samples
- Fix build on Windows with OpenGl enabled
- Fix stream output operator for Vec<uchar,n>
- Face detection package name replaced on org.opencv.facedetect for consistency with Google Play package.
- fixed problem with LBPHFaceRecognizer::update() without breaking binary compatibility.
- improved accuracy of 3x3 invert on poorly-conditioned matrices (bug #2525)
- fixed bug in gpu::PyrLKOpticalFlow::dense
- Updated docs to 2.4.3
- Merge pull request #134 from apavlenko/android-tutorial
- Merge pull request #133 from vpisarev/ios_atomic_fix
- Android Tutorial update (TADP link, Android SDK platforms, CDT)
- fixed compile problem with the old Xcode (<4.5)
- Merge pull request #132 from taka-no-me/version-2.4.3
- Merge pull request #131 from taka-no-me/tegra-fast
- Merge pull request #129 from cuda-geek/CCL-test-fix
- Merge pull request #127 from cuda-geek/apple2clang
- Remove "-rc" suffix from version
- Use Tegra version of cv::FAST
- possibly fixed compile errors in GPU module on Windows
- fix Connected Components Labeling test crash
- Merge pull request #122 from kirill-kornyakov:2.4-android-documentation-fixes
- Updated OpenCV4Android SDK tutorial
- Updated Introduction into Android Development tutorial
- Rewrote abs documentation without funcx, so now :ocv:funcx: is used only for operator()
- Fixed a couple of minor issues in Javadocs
- Updated link to OpenCV for Android page in README.android
- replase __APPLE__ marco with __clang__
- Merge pull request #125 from taka-no-me:perf_tests
- Merge pull request #115 from asmorkalov:java_test_data_update
- Merge pull request #124 from branch taka-no-me:vs8-vs9-tbb
- Merge pull request #120 from NikoKJ:ocl2.4.3
- Merge pull request #121 from branch asmorkalov:android_samples_fix
- Merge pull request #126 from vpisarev:bug_fixes3
- another fix to make OpenCV more friendly for iOS developers. We now use libc++ instead of libstdc++ and clang instead of gcc to build opencv2.framework.
- Merge pull request #123 from asmorkalov/manager_static_lib_info
- fixed bugs #2300 (Vector::dot) and #2467 (build with Xcode 4.5 with --stdlib=libc++)
- Fixed sanity checks in several performance tests
- Review comments applied.
- Remove windows.h include from opencv2/core/internal.hpp to avoid conflicts with TBB library.
- Fix build in Visual Studio 2005
- info library for OpenCV added.
- OpenCV Samples testing problems fixed: Memory leak in color-blob-detection sample fixed; Default face size in face-detection is set to 20%; Error handling improved; Some possible mat leak fixed; Manager verison and engine interface version incremented to fix incompatibilities; Docs updated;
- Merge pull request #111 from taka-no-me/algorithm/addParam-short
- Merge pull request #117 from vpisarev/doc_updates
- Merge pull request #118 from asmorkalov/opencv_manager_cmake
- Merge pull request #110 from vpisarev/test_fixes2
- Merge pull request #112 from taka-no-me/warnings
- fixed many errors in warnings in rst docs; added ocl module description (by Niko Li)
- a minor bug fix for brute force
- CMake for OpenCV Manager updated; Some repo normalization problems fixed; Deprecated cmake keys removed; Warning fixed.
- updated patch for tests; reenabled SURF & Denoising; removed fixes in ocl tests, since this is already fixed in another pull request
- Merge rebased pull request #106 from albenoit/retina_devel
- minor updates for doc redirections and tutorial images size
- minor update
- updated first image sample
- added retina code tutorial
- updated tutorial, rapid spell check, retina parameters discussion added
- updated tutorial, need spell check, validation, nicer images and a discussion on parameters
- adding retina tutorial
- introducing a tutorial for the retina model
- Test data form features2d updated.
- Merge pull request #109 from asmorkalov/2.4
- Merge pull request #102 from NikoKJ/ocl4_2.43
- eliminate all the warnings on win32 and win64 add a new function abssum fix the bug of test and perf because someone remove non-free module from cmakelist.txt
- fixed compile errors in ocl tests; disabled a few problematic tests
- Memory leak of native OpenCV mats fixed.
- Turn off video IO perf tests on Android
- Specify sanity threshold for WarpPerspective perf test
- Fix SHORT data type support in Algorithm
- Merge pull request #103 from asmorkalov/2.4
- Tutorial 1 updated. Execution time camera switching implemented. Some unification done to simplify camera switching.
- Issue 2473 Service connection leak in OpenCV Manager installation waiting fixed. Some code refactoring done.
- Issue 2472 Android samples crash on Camera.StartPreview on Android 4.1 fixed.
- Merge pull request #74 from taka-no-me/cl2cpp
- Cleanup CMakeLists.txt of ocl module
- Merge pull request #92 from LeonidBeynenson/cv_algorithm_changes_2.4
- Suppress more warnings in gtest on OS X
- Fix remaining windows build warnings
- Updated docs to 2.4.3 rc
- Merge pull request #95 from apavlenko/perf-test/warp
- Merge pull request #97 from asmorkalov/2.4
- Merge pull request #94 from vpisarev/test_fixes
- fixed 2 test failures (test_DrawChessboardCorners & Core_Array.expressions)
- OpenCV Manager version ++.
- Code normalization problems fixed. Rair hangs on library installation fixed.
- Repo normalization problems fixed.
- Undefind behavior in Async Service Helper fixed.
- fixing typos in perf tests for warp funcs
- 2.4.3 version support added to OpenCV Manager. Docs updated. Samples updated.
- Made changes in cv::Algorithm made it to give more verbose errors when arguments of wrong types are passed, added setters with types (e.g. setInt, etc)
- Merge pull request #80 from apavlenko/android-samples-refactor
- Merge pull request #91 from taka-no-me/warnings/windows
- Merge pull request #90 from taka-no-me/version_2.4.3-rc
- Refactring. Bug fix.
- Code review coments fixed. Lint wornings fixed.
- camera-preview sample removed from CMakeLists.txt
- CMakeLists.txt rescued. Androidmanifest unified.
- Image manipulations sample ported on new framework.
- Code clean up.
- Color blob detection sample ported on new framework.
- Face detection sample ported on new framework.
- Tutorial1 ported on new framework.
- Tutorial2 ported on new framework.
- Tutorial3 ported on new framework.
- Tutorial4 ported on new sample framework.
- New sample framework integrated to Java part of SDK; Frame format setter added to both views.
- openCV application framework moved to modules/java/... folder. Now it is part of OpenCV SDK.
- Processing thread added to Java camera view.
- Auto focus added; Old Android support added; Android 4.1.x fixes added; Thead sync added; Camera errors handling added.
- Device rotation support added; Nexus 7 support added.
- OnResume/OnPause handlers added to start/stop camera. OpenCV initialization moved to onResume event to support package installation waiting.
- Naming fixed; Warnings fixed; Nexus 7 support added to manifest.
- Puzzle15 implementation with use of the OpenCV surface framework
- Menu and style removed from sample.
- adding initial version of a sample with new Camera-View handling design
- Remove dead blobtrackingkalman.cpp
- Suppress more warnings in libtiff
- Fix warnings from MSVC 10 64-bit
- Fix warnings from MSVC 9 64-bit
- Hide non-windows variable in gtest
- Don't use _interlockedExchangeAdd in case of GNU compiler
- Merge pull request #86 from taka-no-me/test/python_kmeans
- Advance version number to 2.4.3-rc
- Merge pull request #84 from Daniil-Osokin/perfTest-warpPerspective
- Merge pull request #82 from taka-no-me/perf/fix_failures
- Merge pull request #88 from taka-no-me/build_ubuntu_x86_o2
- extended perf test warpPerspectiveLarge
- Force build with -O2 instead of -O3 on 32-bit linux
- Remove wrong assertion
- Disable perf test for unstable solvePnPRansac
- Limit 32S data in perf test for addWeighted to avoid integer overflow
- Fix argument parsing for old command line parser
- Merge pull request #76 vpisarev/test_fixes_1
- disabled several tests on Mac when no FFMPEG is used; disabled automatic table initialization in imgwarp in the case of MinGW
- Merge pull request #79 from  taka-no-me:warnings
- Fix OS X build warnings
- Fix windows build warnings
- Fix implementation of PCA overload with retained variance parameter
- Fix linux build warning
- Merge pull request #75 form taka-no-me:comments/2463
- Remove russian comments
- Convert cl2cpp.py script to cmake
- Merge pull request #55 from vpisarev/ocl_fixes
- Merge pull request #48 from kazuki-ma/2430_ostream_24
- Merge pull request #71 from NikoKJ/ocl4_2.4.3
- Merge pull request #66 from alekcac/ios-armv7s
- Merge remote-tracking branch 'cuda-geek/surf-with-mask-fix' into 2.4
- remove redundant OPENCL_DIR flag remove as much warnings as possible use enum instead of MACRO for ocl.hpp add command line parser in accuracy test and perf test some bug fix for arthim functions
- fix GPU SURF tests for masked case
- Restore core multiply/divide depth to CV_64F value.
- Add stream operators (Requested #2430)
- Merge pull request #65 from taka-no-me:android/warnings
- Merge pull request #64 from vpisarev/bugs_1939_2100
- fixed type "compatible -> incompatible" in the error message
- fixed bugs #2100 (kind of) and #1393
- added support armv7s for iOS framework
- Fix Android build warnings
- Merge pull request #54 from taka-no-me:doc/fix-signatures
- Merge pull request #50 from taka-no-me:parallel/fix-build-2445
- Include unistd.h to parallel.cpp on UNIX-like systems
- Merge pull request #63 from jet47/gpu-sep-filters
- gpu separable filters for CV_8UC3, CV_32FC3 and CV_32FC4 types
- Merge pull request #61 from vpisarev/bug_2509
- Merge pull request #60 from kirill-kornyakov/documentation-link-to-answers2
- Merge pull request #51 from taka-no-me/java/fix-build-after-normalization
- Merge pull request #57 from vpisarev/bug_2429_2.4
- Fix weight calculation for the last pixel in generic area resize.
- fixed bug #2429
- fixed bug #2059
- changed link to Q&A forum in the docs
- Merge pull request #56 from vpisarev/bug_2447_2.4
- fix bug #2447 - unary operator bug for single column matrix
- Eliminate discrepancies between signatures in documentation and OpenCV headers
- Fix Java API generation after normalization
- Normalize line endings and whitespace
- made opencv_ocl module build with VS2012
- Merge branch 'release2.4.3' into 2.4
- Fix build of samples
- Revert opencv_videostab to the state of 2.4.2
- Fix binary compatibility of opencv_gpu
- Fix binary compatibility of Java wrappers
- Fix binary compatibility of opencv_objdetect
- Fix binary compatibility of opencv_nonfree
- Fix binary compatibility of opencv_contrib
- Fix binary compatibility of opencv_stitching
- Fix binary compatibility of opencv_ml
- Revert "skip of table header in MLData (#1962)"
- Revert "yet another portion of changes towards the binary compatibility"
- Fix binary compatibility of opencv_features2d
- Fix binary compatibility of opencv_flann
- Revert "remaining C-style planar subdivisions data structures are moved to legacy"
- Fix backward compatibility of opencv_core
- Revert "add new version of CommandLineParser. add empty docs"
- Revert "fixed compile error under linux"
- Return drawContours back to imgproc
- Revert "fixing Java test and sample after moving drawContours() from Imgproc to Core"
- Bring back escaped virtual destructors from 2.4.2
- Remove unused tbb::task_scheduler_init from perf tests
- Refactor thread management in performance tests
- made imread description slightly better #2406
- another fix for #2332 test
- fixed build errors on Mac; moved test for #2332 from imgproc to highgui
- Reimplement thread management functions:
- Move thread-related functions implementation to parallel.cpp
- fixed cvtColor (RGB <-> Lab) tests and created another one
- fixed bug in cvtColor RGB(BGR) <-> Lab conversion
- minor
- replaced python build script with WSH one for windows platforms
- Added test inspired by #2332
- deleted wrong line
- commented wrong line
- Added perf test for warpPerpsective with large resolutions
- Merge remote-tracking branch 'origin/master'
- finally, a proper fix for VNG (both SSE2 and C version)
- FAIL_NO_CPU marco
- minor ending fix
- allow gpu module write sanity data for GPU and CPU tests in one xml
- fixed 7 point mode in findFundamentalMat #1978
- #720 patch apply
- Removed the phrase, that was causing all the confusion. Issue #2406. + Some minor formatting fixes.
- Merge remote-tracking branch 'origin/master'
- let Kalman handle the missing measurements (bug #1380)
- One more fix for Kepler-specific gpu::integral usage
- fixed batchDistance minimum finding #2292
- Merge pull request #29 from thorikawa/feature-523
- #2192 patch apply
- Fix Mat indexing in TrackingMotion tutorial code (supersedes pull request #38)
- fixed bug in gpu::HOGDescriptor::computeConfidenceMultiScale
- fixed CUDA_FAST_MATH flag
- Merge pull request #40 from emchristiansen/manualBRISKFREAK
- fixed indentation
- Minor tweak to add BRISK and FREAK support for the Java wrapper
- Quiet MSVC warning
- another fix for the updated parallel_for_ implementation
- fixed build errors in the case of TBB and Concurrency
- added function cv::findNonZero (patch #2205)
- fixed possibly inccorrect interval measurements in flann's timer (bug #1165). Note: this may break binary compatibility, but since the class is not wrapped in Java and not exposed in Windows API, for example (it's considered internal-use class for flann), the effect should be minimal
- added recommended number of stripes to parallel_for_, modified some of the functions to use larger stripes (for better performance)
- Adjust thresholds in sanity checks for batchDistance
- Adjust thresholds in sanity checks for calcOpticalFlowPyrLK
- Issue #1861 Improve Javadoc documentation fixed. Multiline code segments added to Javadoc.
- Replaced SVN instructions with Git ones for 'Installation in Windows' section (Issue #2249); Also, fixed both bugs from issue #2374 in the same section.
- Add methods to sort keypoints and corresponding descriptors
- Improve performance tests failures formatting
- Fix AndroidManifest.xml generation for OpenCV Android library project (second attempt)
- Replaced SVN instructions with Git instructions in iOS and Linux installation tutorials. Issue #2249 + Minor formatting fixes.
- Merge pull request #34 from roynos/master
- Clickable optin turned off. Text disapearing fixed.
- android.toolchain.cmake: restore implicit link with math library for C++ objects
- Fix AndroidManifest.xml generation for OpenCV Android library project
- Fix OS X build
- Enable parallel CvtColorLoop for all platforms
- Fix instability of Luv/Lab color conversions
- enable Matx as Mat elements (bug #1705).
- added perf test for gabor filter
- delete normalization in gabor kernel #1995
- Issue #2431 OpenCV Manager UI crashes at start fixed. Data rase in OpenCV Manager connection fixed.
- #2408 patch apply (see pull request at https://github.com/Itseez/opencv/pull/33)
- fixed potential memory buffer corruption in StereoSGBM (patch #2203)
- #1941 fix
- enabled odd size in DFT_COMPLEX_OUTPUT test
- format files to ANSI C style with coolformat change the download channels to oclchannles() fix bugs of arithm functions perf fix of bilateral bug fix of split test case add build_warps functions
- Fixed an issue with 'how_to_scan_images.cpp' tutorial code. Issue #2259
- Fixed the formulas, based on issue #2145
- fixed bug with partly uninitialized output of dft with DFT_COMPLEX_OUTPUT flag (bug #2223)
- enable huge value range in highgui sliders on Windows (patch #941)
- Added CUDA fast math flag
- Applied fix from bug #2324: ocv_list_unique makes for incorrect linking
- Remove second argument from VideoCapture_Reading perf test
- Add concurrency test for solvePnPRansac
- Restore theRNG seed reset on test SetUp as it is still needed
- fixed INT64_C & UINT64_C definitions (patch #2033)
- Merge branch 'master' of git://code.opencv.org/opencv
- fixed bug #2407: run.py now understands android device names with spaces
- fixed bug #2425 : Concurrent convolutions with streams
- Merge remote-tracking branch 'origin/master'
- fixed C= detection script
- add GPU module specific command line arguments
- print information message about target device for GPU module tests
- add sanity checks into the denoising gpu performance tests
- add sanity checks into the features2d gpu performance tests
- add sanity checks into the objdetect gpu performance tests
- add sanity checks into the calib3d gpu performance tests
- add sanity checks into the video gpu performance tests
- temporarily disable HoughLines test
- add sanity checks into the matop gpu performance tests
- add sanity checks into the filters gpu performance tests
- add sanity checks into the imgproc gpu performance tests
- add sanity checks in core gpu pefrormance tests
- GPU module performance tests are aligned with other OpenCV pefrofmance tests
- move GPU utiluty functions in utility.cpp
- main.cpp moved to perf_main.cpp
- fixed cvtColor parameter in KeypointBasedMotionEstimatorGpu::estimate
- added C= support; modified threading logic in threshold
- fixed one more msvc warning in tbb kmeans
- fixed msvc warning in tbb kmeans
- Build fix after issue #2284 fix.
- Fixed Javadoc problems with ">" and "<" symbols.
- Fix gcc build error introduced in a9f36df
- Revert "Issue #2035 Calling cv::namedWindow crashes on Android fixed."
- added TBB for kmeans (patch #1261: thanks to Boris Mansencal)
- added perf test for kmeans
- Issue #2035 Calling cv::namedWindow crashes on Android fixed. Window-related functions is guarded from calls from application code. Old implementations with "no-gui" exception are stell compiled and linked to OpenCV library for binary compatibility.
- Issue #2284 BaseLoaderCallback requires use of Activity fixed.
- Fix read after the end of local buffer in SSE-optimized TYPE_5_8 and TYPE_7_12  FAST cornerScore
- Fix inconsistent argument type in HammingLUT distance (flann)
- expanded cv::threshold parallelization to other threading frameworks; fixed potential bug with unprocessed bottom of the image; fixed build problem in stitching
- fixed example of iteration through a SparseMat (bug #2310)
- added Asus Xtion QVGA modes to the OpenNI backend (patch #1753)
- Merge remote-tracking branch 'origin/master'
- applied patch #1473 (timestamp retrieval in OpenNI)
- Add else branch to previous fix
- Fix regression in core arithmetic
- Fix sanity checks in highgui module
- Quiet logs in stitching module
- Add sanity checks to stitching perf tests
- Add sanity check support for vector<DMatch>
- Add sanity checks to nonfree module
- Merge branch 'master' of git://5.9.49.245/opencv
- fixed compilation error because of DetectionBasedTracker
- Fix perf tests in features2d module
- Add sanity checks support for vertor<KeyPoint>
- Make performance tests for solvePnPRansec more determenistic
- Fix terrible perf test for FAST detector
- Add sanity checkes to video module perf tests
- Auto expand of OpenCV version for Android Library prject and some documentation pages added.
- ABI Compatibility config generator bug fix.
- fixed several warnings from VS2010
- made opencv headers windows.h-less (Bug #2122)
- Fixed "arr = NaN" case (bug #2056)
- added #undef True/False to avoid collision with X11 (Patch #1562)
- some more fixes towards binary compatibility
- Add sanity checks to objdetect module perf tests
- Fix sanity checks for empty objects
- Add sanity checks to calib3d perf tests
- #2258 fix
- OpenCV Manager documentation updated. Diagram rendering script updated.
- RESTART_REQUIRED status removed from OpenCV Manager API; OpenCV info library name fixed; Minimum API level for OpenCV library project increased up to 3 for using message dialogs.
- Fixed output log in GPU perf tests
- more compilation fixes
- fixed compilation under Ubuntu without CUDA
- fixed the case of scale != 1 in stereo_match.cpp (patch #1936)
- fixed linking CLP in the case of MinGW (patch #1872)
- hopefully, correctly applied modified patch #2034 that handles Windows case
- Merge remote-tracking branch 'origin/master'
- fixed detection of IPP 7.1 (patch #2413: thanks to Gino van den Bergen!)
- fixed compilation without CUDA
- Fix sanity checks in improc perf tests
- Fix CV_ENUM macro instability
- _InputArray/_OutputArray destructors are temporary made non-virtual. Please, restore it after 2.4.3
- yet another portion of changes towards the binary compatibility
- added MatCn enum to GPU perf tests
- fast nlm (class version)
- fast_nlm initial version
- Remove bad perf test for cvRound
- Fix sanity checks for arithmetic tests on CV_32S data
- Make SANITY_CHECK required for all performance tests
- partially recovered binary compatibility (ticket #2415)
- Fix depth calculation for Scalar in core arithmetic
- Fix build without SSE
- Wating for OpenCV library package installation added.
- Wating for OpenCV Manager installation added.
- Java tests updated. Build fix.
- updated DP seaming to support 4 channel images
- added test for box filter 16u, fixed bug #2416
- changed file path
- fixed Bug #2074
- fix hardcoded paths for static build OpenCV with CUDA
- Quiet MSVC warning
- fix for bug 2264
- Added initial docs for the videostab module
- Update samples/cpp/tutorial_code/features2D/SURF_detector.cpp
- Replace jpegs with png (see 06a13d9)
- Remove alignment reqirements from NEON optimizations in libpng
- Merge branch 'gpu-device-layer'
- deleted thrust header
- moved device layer headers to include directory
- Native cameras build script output colorized.
- minor refactoring:
- parallel cvtColor for MSVS and Apple
- Made changes in cv::DetectionBasedTracker -- now it can return status of the tracked objects
- TBB version of GridAdaptedFeatureDetector
- disabled NPP resize for 8uc4+Cubic (Bug #2388)
- disabled NVidia test output by default
- Fixed issue 2404
- Fixed issue 2403
- replaced jpegs with png's. Accuracy tests pass; performance tests were not tried yet
- Ant build.xml and deps added.
- MIPS arch support added to OpenCV manager; Internal OpenCV library in OpenCV Manager support added; Unit tests improved, platform specific tests added, MIPS related tests added; Code refactoring done.
- Automation for build and test OpenCV Manager on several devices added.
- MIPS architecture support added. Native camera library built for MIPS device.
- added GpuMat support to OutputArray
- fixed build errors in java bindings on desktop in Debug mode
- warnings
- added CUDA_DISABLER preprocessor commands
- warnings under windows
- stable cvtColor
- fixed TestRemap_Remap
- added the note about 1-pixel border in findContours (relates to ticket #2362)
- fixed typos in the mat tutorial (ticket #2380)
- added variant of cv::imdecode with the specified output matrix
- fixed a few warnings reported by Oleg; restored SSE2 optimization in FAST
- fix for 4-channels TIFF missing 'break' statement
- Merge branch 'master' of git://code.opencv.org/opencv
- Added test to fix backwards compatibility with the way LSH was handled before comit 7236858b
- Add Tegra optimization for fastNlMeansDenoising
- java samples fix (clear view before drawing frame) of 'dirty' FPS display bug
- added parallel version of CvtColorLoop - main inner function of cvtColor
- fix device pointer alignmen in sft-based integral integration
- fixed bit arifmetic in sft-based integral
- fixed one of the log messages in the stitching module
- a new Java test to imencode() with params
- Exposed HierarchicalClusteringIndex in OpenCV wrapper
- REVERT OF: Update libjpeg to release 8d (reverse-merged from commit d28af08ef3b5910c634d9fa2ba3f961e37674a37)
- REVERT OF reverted libjpeg to an earlier version (reverse-merged from commit bfc8a524022364a09a75c3308c19ab00e30684a5)
- fixed the bug #2385
- possibly repaired FAST test (however, FAST<7/12> and <5/8> could still do something different than described in the paper)
- Changed parallel_for to parallel_for_ in hog.cpp and cascadedetect.cpp
- changed map indexes in test_remap
- reorganized the resize algorithm
- fixed bug in nln (out of border access)
- Added host compiler check before CUDA detection. For not supported compilers CUDA will be disabled.
- lowered tolerance thresholds in BRISK tests
- Merge branch 'master' of git://code.opencv.org/opencv
- some optimizations to ocl::pyrDown, PyrLK and Canny
- fixed fail in arithmetic test
- Added 240p resolution alias for perf tests
- Merge remote-tracking branch 'origin/master'
- reverted libjpeg to an earlier version
- edited misprint
- uncommented auto enabling GCD on Mac
- edited misprint
- added platform specific definitions in resize algorithm
- debug
- debug
- some bugfixes & improvements in openfabmap code, docs and samples by Arren Glover
- some restructuring of resize algorithm code
- attempt
- Added Rotation motion mode in the videostab module
- fixed warnings under windows
- many bugs fix for intel's HD4000 from my svn 855
- removed obsolte global motion estimation method
- Fix: Windows compilation error in CommandLineParser.
- Changed CommandLineParser to make it less verbose when it is unrequired.
- Merge branch 'master' of git://code.opencv.org/opencv
- Change denoising strength parameter from int to float
- 1. New function ActualScalarDepth was added 2. Two new NeonOptimized functions subtract_8u8u32f and subtract_8u8u8s were added
- 1. New function ActualScalarDepth was added 2. Two new NeonOptimized functions subtract_8u8u32f and subtract_8u8u8s were added
- changed the type of the arguments to const reference (Bug #2376)
- remove warnings of some functions in ocl module
- Restore pdf patch command
- This reverts commit 738d3fef3819a11930502c44555cfacb95b29e5c.
- fixed mixed-type array operations (bug #2336)
- 1. New function ActualScalarDepth was added 2. Two new NeonOptimized functions subtract_8u8u32f and subtract_8u8u8s were added
- Merge remote-tracking branch 'origin/master'
- fixed verbose mode in highgui's DirectShow wrapper (bug #2350)
- Fix typo
- Merge remote-tracking branch 'origin/master'
- fixed outlier filtering in cvStereoRectifyUncalibrated (bug #2367)
- Refactor fast NL-means denoising
- update FFMPEG wrapper binaries
- fixed possible compile error in cap_ffmpeg_impl.hpp (bug #2365)
- some optimizations to ocl::blend
- Added WQHD = 1444p frame size
- improved the condition in the FAST test
- added patches by Bram Bolder
- a little optimizations to ocl::pyrDown
- Bug with several "in use" labels fixed in OpenCV Manager UI.
- "in use" label update fix in OpenCV Manager UI.
- Minor bug fix in building all native camera libs for android
- NDK detection bug fix.
- Merge branch 'master' of git://code.opencv.org/opencv
- attempt
- Merge branch 'master' of git://code.opencv.org/opencv
- get rid of Lock in gabor_threads.py
- fixed wrong condition with interpolation types
- changed resize_area test
- Minor refactoring of NL-means denoising
- fixing git commit getting for Android build
- added extra debug parameters in resize test
- added test for png encoding bug #2352
- added recalculating scale coefficients
- improved image rendering performance in Qt backend for highgui UI (bug #2356)
- Merge remote-tracking branch 'origin/master'
- added test for #2336
- Fix windows build warnings
- Fix copy-paste bug in AVX optimization of haar
- Fix AVX and other SIMD support detection
- Fix build of Java API for Windows
- Add experimental support for desktop Java
- Remove misused REQUIRED keyword from CMake scripts
- add PyrLK to ocl module
- Honor resently added functionality in hdr_parser and rst_parser; minor fixes in documentation
- All HTC One S related changes reverted due to applyProperties problems on other devices. Libraries rebuilt. (cherry picked from commit 8104164c78f62046f014ea273c23d64e1f6d8c26)
- Link to OpenCV website updated. Full Manager version added to UI. Screen orientation fixed.
- Issue #2357 OpenCV manager fails to determine hardware platfrom on Tegra2 fixed.
- Fixed a minor issue in OpenCV4Android Reference.
- All HTC One S related changes reverted due to applyProperties problems on other devices. Libraries rebuilt.
- A more reasonable verify method for ocl::HOG accuracy test
- Fixed some language issues in OpenCV4Android Reference.
- fixed compilation under VS2012 (Bug #2352, #2355)
- Tweak strip flags for Android camera wrapper libs
- Remove -g from Android complier flags in release mode (used by NDK but inconvenient for CMake)
- make ocl surf sample compile on Linux
- disabled utility code in gpu tests when WITH_CUDA=false
- optimized gpu pyrDown and sepFilter2D
- fixed gpu perf tests (VideoCapture reopen)
- Native camera fix for Nexus 7 with Android JB. Camera build script updated. (cherry picked from commit afe30d0f8a62af58f396db8ca87bb32bdcf97acb)
- Native camera fix for Nexus 7 with Android JB. Camera build script updated.
- ABI compatibility check config generator updated. Command line params added. NDK searching added.
- Small camera build script improvements.
- Add a SURF sample for ocl module
- add bruteForceMatcher to ocl module
- rename all the perf test files fix the channel 3 bug in matrix operation perf and buf fix for LUT haardetect convertC3C4 resize warpaffine copytom settom add convovle remove stereo
- updated description of LineIterator with information about LineIterator::pos() (ticket #2338)
- fixed just introduced bug in Python wrapper generator
- Issue #2345 Adapt OpenCV Manager UI for different screen resolution partially fixed. Layout for small resolution added. Layout for small display resolution added.
- Issue # 2344 OpenCV Manager doesn't tell which pack is used fixed.
- fixed crash in Python's SURF wrapper (bug #2325)
- several fixes in gpu module
- fixed iterations>1 case in morphological operations (bug #2348; thanks to Andrei Zaharescu for the fix)
- fixed OpenCL detection in Linux (patch #2261)
- fixed possible access violation in HSV2RGB (patch #2020)
- fixed the case learningRate==0 in BackgroundSubtractorMOG2 (patch #2221; thanks to Will Lucas)
- added support for bi-level PNG's (patch #2301; thanks to Costantino Grana)
- fixed bug #2186 (thanks to Joao Soares for the patch)
- fixed some warnings and errors on windows
- Fix Android build warnings in new imgproc tests
- a reference function for remap was stabilized
- Fix warning in Android camera code
- Move gpu sample to gpu folder
- Improve Eigen search
- getWidth/getHeight optimized. (cherry picked from commit 7d4432df27d1ff8f0f09cae90a7d613d5122baf2)
- getWidth/getHeight optimized.
- added Generalized Hough implementation
- Issue #2316 Change default libnative_camera path implemented.
- Add gitignore for Android tests and samples
- OpenCV Manager version incremented.
- abi-compatibility-check tool configuration script for adnroid added.
- fix ocl::columnsum bug
- Merge branch 'master' of git://code.opencv.org/opencv
- The labels of a model are now cloned instead of using Mat::copyTo, because Mat::copyTo leads to a crash with the Python wrapper. I need to further investigate it.
- Removed remaining SWIG marks from headers
- Added a simple CMakeLists.txt to the facerec_samples, which are not included in the samples folder. Makes building these samples a lot easier.
- Android toolchain: added fixes/workarounds for NDK r8b and NDK r6 bugs
- Issue #2270 OpenCV Manager fails with JNI error fixed. Local reference table overflow in JNI code fixed. (cherry picked from commit 457c8785383c89c766f613d8b581ec00ddd2a4d7)
- fixed compile error under linux
- little fix in command line parser - catch unknown parameter types
- refactored command line parser, fixed the docs
- Build script for all native cameras added. (cherry picked from commit b16b50d61b552a7f7eb3f86c2b28bcb9d933f0a4)
- All native camera libraries rebuild after HTC One S fix. (cherry picked from commit 568d9583c1621e78a966a131a92e515c4d2f5a26)
- Issue #2248 OpenCV manager fails to determine hardware platfrom on Android Emulator fixed. Search keys for /proc/sysinfo updated. (cherry picked from commit db3a35f90125eb13716cc323802662c240e4cd2a)
- Native camera issue on HTC One S fixed. Camera connect->disconnect->connect leads to sigsegv. Apply properties method reimplemented. (cherry picked from commit 710e070990ac2375a1a450c2d215eb68f15139e5)
- Build script for all native cameras added.
- All native camera libraries rebuild after HTC One S fix.
- Issue #2248 OpenCV manager fails to determine hardware platfrom on Android Emulator fixed. Search keys for /proc/sysinfo updated.
- Native camera issue on HTC One S fixed. Camera connect->disconnect->connect leads to sigsegv. Apply properties method reimplemented.
- regenerated opencv_cheatsheet.pdf from the previously updated opencv_cheatsheet.tex
- fixed compile error on Windows
- add new version of CommandLineParser. add empty docs
- Use TBB 4.1 on Android
- Reduce verbosity of Java API generators
- Fix Android build warnings
- Disable TBB on Android for mips
- Fix Android CMake toolchain compiler and linker flags
- possibility to maintain custom hardware-specific libs folders
- possibility to maintain custom hardware-specific libs folders
- removed non-existing CoreAnimation framework from the list of required frameworks (bug #2326)
- fixed typo (bug #2327)
- Fixed some minor formatting issues in 'old_basic_structures' and 'operations_on_arrays'.
- Merge branch 'master' of git://code.opencv.org/opencv
- A little optimization on ocl/pyrdown, ocl/canny
- Revert "Another batch of fixed 'undocumented parameter' warnings in 'operations_on_arrays.rst'."
- Another batch of fixed 'undocumented parameter' warnings in 'operations_on_arrays.rst'.
- fixed build errors and warnings on Windows
- Android toolchain: restored explicit include_directories of system /usr/include
- Merge https://github.com/urikz/opencv
- Fix gcc build errors and warnings
- Small fixed #3
- Small fixed #2
- Small fixes
- Merge remote-tracking branch 'itseez/opencv'
- Update to improve performance of SimpleFlow algorithm
- #523 Fix the problem where the MaxSize parameter in cvHaarDetectObjects does not work when the flag CV_HAAR_SCALE_IMAGE is not set.
- changed eps in validate_result function
- More strict tests for image waring algorithms
- Fix android build warnings
- Merge branch 'android-toolchain'
- Fix precompiled headers support detection for gcc-4.6 toolchain from Android NDK r8b
- Android toolchain: protect from changes of NDK_CCACHE on subsequent cmake
- Fix Android build with CMake 2.6.3-2.8.3
- Improved CMake warnings about known problems of Android NDKs
- Partially cleaned 'operations_on_arrays' section of undocumented parameters.
- restored SSE2 and added AVX optimization of the old haar face detector
- fixed 4-channel resizeAreaFast x2 decimation case
- fixed multiple build warnings
- updated documentation with the new PCA functionality
- Overloaded PCA constructor and ( ) operator to implement Feature#2287 - PCA that retains a specified amount of variance from the data. A sample was added to samples/cpp to demonstrate the new functionality. Docs and Tests were also updated
- fixed bug #2331
- Merge branch 'master' of git://code.opencv.org/opencv
- Issue #2270 OpenCV Manager fails with JNI error fixed. Local reference table overflow in JNI code fixed.
- fix bug of ocl::canny
- Added C++ runtime search for standalone toolchain
- Fixing STL support in case of standalone toolchain
- Fix executable and C objects linking
- added SSE2-optimized boxfilter by Grigoriy Frolov
- added openfabmap code, contributed by Arren Glover. fixed several warnings in the new versions of retina filters
- Merge pull request #28: add openexr to 3rdparty libs
- Fix openexr build on Linux
- add channel 3 for test/main.cpp add remap
- A little fix to ocl accuracy tests, make them more uniformed
- update some of the functions in ocl module to the latest version
- Add support for all NDK runtimes
- Update readme for 3rdparty libs
- Fix openexr build on MinGW
- Fix openexr build with MSVC
- Added OpenEXR library v1.7.1
- Add NDK release detection into CMake toolchain
- Several small fixes in Android CMake toolchain
- Remove debug print
- Cleaned 'old_basic_structures' of undocumented parameters.
- removed duplicated sample (for facedetect)
- Fix Android samples for devices having front camera only (Nexus 7) (cherry picked from commit 067744d07109713a7cbf1db16d831580f6d65ea3)
- Fix package name of Android color blob detection sample (cherry picked from commit fc93518449b6c128766266910faea5fe72d0e69d)
- Unify manifest files in Android examples (cherry picked from commit bd12f636c8afbfc22f00342438112fe068551537)
- Fixed java camera release in Android tutorial-0 sample (cherry picked from commit cd59cf3ab5c37d1db53394f5143cd87f9047547f)
- Fix Android samples for devices having front camera only (Nexus 7)
- Fix package name of Android color blob detection sample
- Unify manifest files in Android examples
- updated Retina module code for more flexible parallelisation : TBB parallel for loops are replaced by opencv parallel_for_ wrapper... compile error corrected
- updated code for more flexible parallelisation : TBB parallel for loops are replaced by opencv parallel_for_ wrapper
- fixed build warnings on Windows
- Merge remote-tracking branch 'origin/master'
- Small fixes for SimpleFlow algorithm
- Updates for SimpleFlow algorithm
- "SimpleFlow" optical flow estimation algorithm (GSoC project) declaration in includes, implementation, usage example, test
- update FFMPEG wrapper binaries
- probably fixed compile error on MacOSX 10.6
- Small fixes for SimpleFlow algorithm
- Merge branch 'master' of git://code.opencv.org/opencv
- updated retina documentation
- use mutex provided by opencv itself add getoclcontext and getoclcommandqueue so that other opencl program can interactive with opencv ocl module correct haar test cases add face detection sample
- Merge pull request #27 from sergiud/master
- Fix libjasper build on 32-bit MinGW
- Fix MinGW warning on implicit 'exit' declaration
- Merge branch 'master' of git://code.opencv.org/opencv
- added retina module documentation
- fixed building BRISK on Windows
- win32: always link to vfw32
- add a scale invariance test for the detector
- revert orientation computation in jeypoint detection for efficiency (like done originally)
- add const correctness, replace __inline__ and remote a useless release()
- add rotation tests for the descriptors
- add more test to BRISK
- initial addition of BRISK with some tests
- split FAST in order to reuse it in BRISK
- added a few missing images for tutorials; integrated pull request #26
- added ios tutorials by Charu Hans and Eduard Feicho
- Fix build warning introduced in commit:424bc609b6f352a2b10f2a01ffcd037483e3591f
- performance fix of convertC3C4 add OCL 1.2 feature for setTo bug fix of integral replace the error code -217 with suitable MACRO simplify tests, no need apply a new context for each test case add more control for tests in utility.hpp
- fixed build without CUDA
- fixed bug in buildPointList
- 3rdparty libs are updated to latest available versions
- Update readme for 3rdparty libs
- Fix libjasper build with MSVC
- Add changelog and copyright files from debian libjasper-dev (1.900.1-13) package
- Apply 03-CVE-2011-4516-and-CVE-2011-4517 patch from debian libjasper-dev (1.900.1-13) package
- Apply 02-fix-filename-buffer-overflow patch from debian libjasper-dev (1.900.1-13) package
- Apply 01-misc-fixes patch from debian libjasper-dev (1.900.1-13) package
- Update libjpeg to release 8d
- Update libtiff to release v4.0.2
- Fix Android build with cmake 2.6.3
- Enable libpng NEON optimization in Android build for armeabi-v7a with NEON target
- Update libpng to release v1.5.12
- Update zlib to release v1.2.7
- minor
- Merge branch 'master' of git://code.opencv.org/opencv
- Retina module is now parallelized thanks to the TBB library. Speed increase expected on multicore plateforms
- added GPU bilateral filter + tests
- renamed device::bilaterl_filter kernel to device::disp_bilaterl_filter for correct naming
- Fix run.py version control detection when used outide of OpenCV build
- update FFMPEG wrapper binaries
- Merge pull request #25 from sergiud/master
- fixed gpu PyrLKSparse perf test
- Android toolchain: fix CCache program search
- Fixed java camera release in Android tutorial-0 sample
- eliminated type conversion warnings
- Improved javadoc comments. Minor formatting fix.
- fixed many warnings (modified pull request 13)
- Changed the file .gitignore (added vim swap files and tag files)
- Added possibility to make subfolders in modules' folders "src/".
- Fix fixed-point arithmetics in FREAK::meanIntensity
- Improved javadoc comments.
- add conversion from/to Matx
- Updated package version in Android samples (cherry picked from commit 47b9640785cb0fe4dce043cb676e687e74704276)
- Updated package version in Android samples
- Android camera: fix logging macro part 2
- Improved javadoc comments. Draft.
- added test for caltech images
- applied patches from #2311
- fixed #2297, #2300; fixed several warnings
- Android camera: fix logging macro
- Android toolchain: fixed ccache search
- Updates for SimpleFlow algorithm
- "SimpleFlow" optical flow estimation algorithm (GSoC project) declaration in includes, implementation, usage example, test
- Fix Android build for mips platform
- Support for the gold linker (NDK r8b is required)
- Added CCache support to Android build
- Pass list of modules to javadoc generator
- Improved 'Operations on Arrays" section of 'Core' module documentation.
- minor
- Fixed bug in BP_GPU
- Merge branch 'android_camera_2.4' into 2.4
- Fix/workaround bogus error in Android samples running on Android 4.1.1
- Fix crash on resume in face detection sample
- Fix formatting in detection based tracker
- Fix Andoid samples: black screen after resume problem
- Android camera: commented logs in frame callback
- Fix buffer allocation in Android camera
- Cherry pick Android-related changes from master till 2012-08-23
- Merge branch 'android_camera'
- Fix/workaround bogus error in Android samples running on Android 4.1.1
- Fix crash on resume in face detection sample
- Fix formatting in detection based tracker
- Fix Andoid samples: black screen after resume problem
- Android camera: commented logs in frame callback
- Fix buffer allocation in Android camera
- Fix formatting in Android tutorials
- Fixed layout in third Android tutorial
- Reviewed 'android_dev_intro'
- improving android tutorial v2
- improving android tutorial v2
- improving android tutorial v2, removing v1
- Reviewed 'android_dev_intro' and 'O4A_SDK'
- Fixed tutorial link to NVIDIA Tegra platform
- improving android tutorial v2
- ubuntu screenshot png
- Android device recognition in Ubuntu Linux manual
- some minor fixes to the 'android_dev_intro'
- added a short preface to the 'android_dev_intro' doc.
- android tutorial, part 1 - adding 'device connection via usb' section, sections reordering
- android tutorial minor layout fix (also my first test commit)
- Fixed links in formatting in Android intro tutorial
- Fix several documentation build warnings
- android tutorial v2, initial draft commit
- svn repository web references are replaced with links to git
- minor in license file
- minor update (pictures resize removed, emulator screen-shot downscaled)
- minor updates to android tutorials
- Laplacian tegra optimized was added
- Removed PtrElemStep, Marked DevMem1D as deprecated, now should use PtrStepSz now
- Merge branch 'norm_Matx' of git://github.com/vrabaud/opencv
- fixed type for threshold parameter
- fixed gpu::integral for Kepler
- gpu version of HoughCircles
- removed /EHa flag for cuda compilation
- possibility to enable /mp compiler flag from cmake
- fix the compile bug
- Merge remote-tracking branch 'origin/master'
- Improved the public 'non-optimized' duplicates of 'Tegra-optimized' functions.
- minor warning fix
- minor fix in FindTBB
- added median-based version of global motion estimation (videostab)
- Removed the header opencv2/photo/denoising.hpp All the functions from it are moved to the header opencv2/photo/photo.hpp
- Merge branch 'master' of code.opencv.org:opencv
- added _doc.py -- doc-string ckecking utility added some sample description
- modified facedetect to properly display very oblong objects and optionally flip image horizontally (for profile face detection). Added LBP cascades by Attila Novak for profile face detection and silverware detection (those are results of GSoC 2012)
- fixed ios camera timing (patch by Eduard Feicho)
- optimized gpu::integral for Kepler
- parallel version of remap, resize, warpaffine, warpPerspective. Some optimization for  2x decimation in resize algorithm
- Fix Windows build issues
- fixed build on Ubuntu
- added SSE2-optimized resizeAreaFast for 8-bit images by Grigoriy Frolov
- #2170 fix warning of undefined GTEST_HAS_DEATH_TEST
- Fix Java API build
- enabled SSE3 by default; integrated SSE3-optimized bilateral filter (by Grigoriy Frolov); modified API of non-local means (use Input/OutputArrays)
- Merge branch 'master' of git://github.com/vpas/opencv into nonlocal_means
- Add CV_Asserts for channels count
- Fix building for MS VS C++: remove allocation of arrays of dynamic size in stack
- fixed the channel ordering of rgba images (by Eduard)
- Fix wrong memory deallocation
- ColorBlobDetection Sample, ImageManpulations Sample and Tutorial2 updated. Issues with native camera on Nexus 7 (Android 4.1) fixed.
- Debug build for Android added. Stripping of debug build turned off.
- Warning fix. ifdefs for 4.1.1 added.
- Android 4.1.1 native camera fix. BufferQueue class is used instaed of Surface texture. Includes in cmake updated.
- Tegra3 package support enabled; Version code incremented;
- Tegra detector fixed; Some aditional logs added; AndroidManifest version incremented.
- HW compatibility tests added; Arm-v7a neon package support enabled.
- Package name logic improved; Aditional tests added; Some bug fixes with different __SUPPORT_XXX defines.
- Unit tests updated. Version and HW compatiblity tests added; Tegra3, neon, sseX, x64 support uncomment and guarded by ifdefs
- Add ignore for *.user files
- Added ignore for tbb source tarballs
- added gitignore to filter out certain temporary files
- fixed compilation under windows
- Fixed FAST algorithm initializer
- Merge branch 'master' of git://github.com/vpas/opencv into nonlocal_means
- disabled -Wunused-but-set-variable because of multiple warnings during building nvcc auto generated files (GCC 4.6)
- #2215 Fix dependencies escaping in generated OpenCVConfig.cmake
- Fixed gcc build warning
- some tweaks in optimization flags for opencv2.framework
- added ios camera support in highgui. turned on optimization in opencv2.framework (ticket #2232)
- gpu::HoughLines : minor code improvements
- removed logging from test
- Merge branch 'gpu-tests'
- minor gpu tests fix
- removed perf_gpu_cpu from CMake scripts
- temp build fix because the new core.hpp impact on this project
- more warning fixes for GCC
- updated CascadeClassifier_GPU documentation
- fixed -Wstrict_alliasing warning for GCC
- refactoring in Emulation
- fixed unused warnings
- minor warning fix
- Merge branch 'master' of code.opencv.org:opencv
- added texture_flow.py sample
- Fix build warnings
- Merge branch 'sergiud_vs2012rtm_support'
- fixed compilation errors caused by std::tuple
- added missing includes
- Add non-local means denoising algorithm implementatation into photo module
- Fix Windows build after commit:41b6d25
- Merge branch 'master' of code.opencv.org:opencv
- added deconvolution.py sample and example images
- Fix formatting in Android tutorials
- Fix Android build after commit:41b6d25
- Fixed layout in third Android tutorial
- Fix documentation build warnings in gpu module reference
- merged gpu_perf_cpu into gpu_perf
- small correction for the previous patch in parallel.cpp
- Merge remote-tracking branch 'origin/master'
- added cross-platform Mutex implementation; enable platform-native (GDC/Concurrency) parallel_for_ implementation when TBB is not installed.
- Android toolchain: libstdc++ and libsupc are removed from explicit link libraries
- added --cpu flag (run tests on CPU)
- updated mark_nvidia.py script
- removed license comments
- renamed perf_main.cpp to main.cpp
- updated gpu performance tests
- performance & bug fix for resize erode dilate sobel remap
- ColorBlobDetection Sample, ImageManpulations Sample and Tutorial2 updated. Issues with native camera on Nexus 7 (Android 4.1) fixed.
- bug fix of "squares" sample for ocl module
- updated gpu accuracy tests
- updated mark_nvidia.py script
- add an "squares" sample for ocl module
- Forbid incorrect patchSize values in gpu::ORB
- fixed block size for old CC
- #2229 Fix FREAK build on CentOS
- #2216 Forbid incorrect patchSize values in ORB
- #2225 Rename getConvertData to getConvertElem to match the headers and documentation
- Merge remote-tracking branch 'origin/master'
- Reviewed 'android_dev_intro'
- added docs for gpu::HoughLines
- fixed typo
- fixed shared memory size for linesAccumShared
- #2245 Fix BFMatcher::radiusMatchImpl witch Hamming distance (thanks to Jukka Holappa)
- fixed warning C4512
- Merge branch 'hough-lines-gpu'
- added linesAccumGlobal kernel
- improving android tutorial v2
- improving android tutorial v2
- Merge remote-tracking branch 'origin/master'
- Reviewed 'android_dev_intro' and 'O4A_SDK'
- improving android tutorial v2, removing v1
- fixed build without cuda
- fixed failure
- Fixed tutorial link to NVIDIA Tegra platform
- improving android tutorial v2
- changed the value that replace NaNs in bilateralFilter_32f
- new optimized version
- disabled whole perf test for distance transform
- fixed overflow bugs, updated perf tests
- Merge branch 'master' of code.opencv.org:opencv
- disabled perf test on distance transform
- Merge branch 'branch1'
- Debug build for Android added. Stripping of debug build turned off.
- added accuracy and performance tests
- Merge remote-tracking branch 'origin/master'
- possibly fixes #2242 and #2257
- Fixed 2 new Android build warnings
- first naive version
- fixed build errors in bgfg_gmg
- Merge remote-tracking branch 'origin/master'
- some minor fixes to the 'android_dev_intro'
- ubuntu screenshot png
- Android device recognition in Ubuntu Linux manual
- Fixed CMakeLists.txt
- Added getScale/setScale for image warpers (stitching module)
- added a short preface to the 'android_dev_intro' doc.
- added support of all types to BackgroundSubtractorGMG
- Bug #2257: Adding a quick workaround for truncated labels on 64bit machines in the Python FaceRecognizer wrapper code. This is only a temporary bugfix, that will be fixed at a better point as soon as possible.
- fix ocl/match_template compiling error on Linux
- Add ignore for *.user files
- Added perf test
- Added blur16x16 perf test
- Added perf tests for histogram
- Added perf test for distanceTransform
- Added color YUV422 perf test
- Added perf tests
- test
- Added perf test
- Added blur16x16 perf test
- Added perf tests for histogram
- fixed typo in enum
- Added perf test for distanceTransform
- Added color YUV422 perf test
- Added perf test for remap
- fixed perfomance test for CCL
- Use github pat to get data for in python tests (files from code.opencv.org are received truncated sometimes)
- fixed build for old compute capabilities
- add Canny to ocl module
- Removed writing the test.png, wasn't meant to be commited.
- Merge branch 'master' of git://code.opencv.org/opencv
- android tutorial, part 1 - adding 'device connection via usb' section, sections reordering
- 1.x related fixes
- android tutorial minor layout fix (also my first test commit)
- Merge branch 'bgfg-gmg-optimized' into bgfg-gmg-merged
- Merge branch 'bgfg-gmg-gpu' into bgfg-gmg-merged
- added updateBackgroundModel parameter
- added updateBackgroundModel parameter and release method
- added performance tests
- added docs for GMG_GPU
- added release method to GMG_GPU
- added GMG_GPU to bgfg_segm sample
- added performance test fot CCL
- fixed number of training mode operation
- added tests for VIBE_GPU and GMG_GPU
- fixed number of update operation
- gpu version of GMG Background Subtractor
- fixed build warnings
- made BackgroundSubtractorGMG's parameters public
- Fixed division by zero case in SphericalProjector::mapForward
- new optimized version of BackgroundSubtractorGMG
- Lowered acceptance threshold in Features2d_RotationInvariance_Detector_ORB.regression test
- duplicating cv::error() message to Android logcat
- duplicating cv::error() message to Android logcat
- Fixed links in formatting in Android intro tutorial
- reserved flags parameter for future usage
- added perf. test for GFF
- test: GFF same as cpu greedy implementation
- refactored test code
- fixed Bug #2252
- Merge branch 'master' of git://code.opencv.org/opencv
- add an ocl sample
- add performance test code for ocl module
- add SURF and HOG to ocl module
- added CV_IN_OUT to img argument of drawing functions
- Refactored the DP based seam finder
- Merge branch 'master' of code.opencv.org:opencv
- comment fixed
- typo fix in features_homography.py
- Revert "fixed LshIndex types in its constructor"
- work on #2100: pyopencv_to functions now can receive argument information through ArgInfo structure. Non-contiguous input numpy arrays are copied. In case of non-contiguous output array the TypeError is thrown.
- Merge remote-tracking branch 'origin/master'
- HAVE_CUDA macro
- Greedy Labeling implementation in correctness test
- test fix
- added description of FAST 5/8 and FAST 7/12 (by Vincent)
- Merge remote-tracking branch 'origin/master'
- Fix several documentation build warnings
- added SSE2-optimized 3x3 invert by Grigoriy Frolov
- android tutorial v2, initial draft commit
- Minor fix in the DP based seam estimator
- Fixed bug
- Minor changes
- Added support of 8UC3
- implemented DP-based seam estimation method
- Merge branch 'master' of code.opencv.org:opencv
- fixed build with CUDA 4.2
- Fixed number of svn->git migration issues
- svn repository web references are replaced with links to git
- Add git support to run.py
- Use git hash instead of svn version in cmake status report
- Fix tegra build warnings
- new implementation of gpu debayer
- added perf tests for new gpu::cvtColor functions
- added missed device synchronization
- added debayer to gpu::cvtColor
- intervales for vector type support
- added  connectivityMask calculation function
- fixed not defined macro warningds
- C.C. Labeling: added stream support
- connected components labeling
- minor in license file
- Merge remote-tracking branch 'origin/master'
- Add dft and gemm to ocl module, using AMD's clAmdFft and clAmdBlas libraries
- Merge branch 'master' of git://code.opencv.org/opencv
- Fixed xml name generation in run.py
- Fixed build warnings (including error in FAST)
- Added ignore for tbb source tarballs
- Intermediate files generated by Android toolchain are moved into CMakeFiles subfolder
- Merge branch 'master' of code.opencv.org:opencv
- new/improved Python samples by Alexander Mordvintsev
- fix bugs in tests, set device for each test case
- Merge branch 'master' of git://code.opencv.org/opencv
- Add blend, columnsum, pyrUp/down, matchTemplate for ocl module
- Issue #2232: Bugfixes for 64bit Python-compability.
- Issue #2231: Attempt to fix segfault, when copying labels. LDA needed to be updated to generate the Wrapper correctly.
- Added descriptions to PlaneTracker samples
- created PlaneTracker (int plane_tracker.py), which implements multitarget planar tracking rewritten feature_homography.py using it added plane_ar.py - simple augmented reality sample
- Merge branch 'master' of code.opencv.org:opencv
- Set correct path to repo in python tests (changed after migration to git)
- fixed a few compile warnings and errors with VS2010.
- Android CMake toolchain is updated for NDK r8b
- moved parallel_for_ and ParallelLoopBody to core.hpp
- Merge remote-tracking branch 'origin/master'
- Merge branch 'master' of git://code.opencv.org/opencv
- Merge branch 'master' of git://code.opencv.org/opencv
- performance and bug fix for addWeighted cartToPolar div exp log resize setTo add channel 3 support add fast way Between CPU and GPU for the data which is aligned
- parallel version of bilateral filter was implemented using parallel_for_
- fixed 2228
- for test Signed-off-by: yao <bitwangyaoyao@gmail.com>
- work on feature_homography.py: multiple targets
- facerec.cpp: Removed Original LBP wrapper, because it is not in use and therefore generates a warning.
- facerec.cpp: Added an exception to the LBP extraction, so now a meaningful exception is thrown if the wrong image type was given. Thanks to Eric Christiansen for reporting.
- integrated another portion of SSE optimizations from Grigory Frolov
- Merge remote-tracking branch 'origin/master'
- added FAST<5/8> & FAST<7/12> (by Vincent Rabaud)
- Tegra3 package support enabled; Service version code incremented. Android 4.1.1 native camera fix (shared libraries for native Android camera updated).
- Shared libraries for native Android camera updated.
- Warning fix. ifdefs for 4.1.1 added.
- Android 4.1.1 native camera fix. BufferQueue class is used instaed of Surface texture. Includes in cmake updated.
- added gpu::graphcut for float sources (CUDA 5.0)
- added gpu alpha premultiplication
- added gpu RGB<->Lab and BGR<->Luv conversions
- added gpu BGR<->Lab and RGB<->Luv color conversion and gammaCorrection
- minor update (pictures resize removed, emulator screen-shot downscaled)
- facerec_demo.py: Updated contact mail address.
- FaceRecognizer supports updating a model now. Documentation has been updated to reflect latest changes.
- made countNonZero SSE code SSE2-compliant and portable
- feature_homography.py: building descriptor index on target capture simple AR experiment (work in progress)
- updating URL to Android info start page
- updating README content
- fix the compilation bugs
- facerec_demo.py: Shortened code. Final version.
- facerec_demo.py: Reworked demo to remove all matplotlib dependencies.
- Moved the facerec_demo.py to the wrong directory. Now moved to the python2 folder.
- Added the facerec_demo.py to show how to perform Face Recognition with the Python module.
- Updated the train method to be an InputArrayOfArrays, so the Python wrapper now generates the correct code (and it works).
- Updated the documentation to (1) reflect the latest changes and (2) answer some questions I were asked.
- Fixed facerec_eigenfaces.cpp demo sample: it contained hardcoded values, which made wrong element access possible. Fixed unsigned integer/signed integer warnings in facerec.cpp.
- Merge branch 'master' of git://code.opencv.org/opencv
- Bug #2214: Fixed bug, when calling the train method multiple times. The Eigenfaces and Fisherfaces method now re-estimate the model, the LBPH method appends the new data to the existing model.
- core/stat: fix build with 32-bit
- print description in mosse.py
- added MOSSE sample
- spelling corrections, added aero images as a more impressive example for ASIFT
- spelling corrections, added aero images as a more impressive example for ASIFT
- fixed 2212
- partly merged with sbromle/opencv fixes branch
- asserted in LBPH code that images must have a single channel
- Fix missing remainder of line.
- Protect check of CV_SSE4_2 with #if defined.
- update FFMPEG wrapper binaries
- Fix crash when polling for non-existent Kinects.
- Protect check for _MSC_VER with #if defined.
- added gitignore to filter out certain temporary files
- test7
- test
- test2
- test
- updated doc on triangulatePoints (#2167)
- integrated patch: HOG confidence calculation. Thanks, Wongun.
- fixed SURf according to clockwise descriptor convention
- fixed surf for upright case
- fixed surf for upright case
- Merge branch 'master' of git://5.9.49.245/opencv
- fixed #2190
- removing unused files
- removing unused file
- minor updates to android tutorials
- fixed gcc compilation
- updating README content
- fixed bilateralFilter on uniform CV_32F image
- integrated patch with some SSE2/SSE4.2 optimizations from Grigory Frolov
- fixed LshIndex types in its constructor
- test
- LBP features integrated in CascadeClassifier_GPU
- LBP: switched to PImpl pattern
- removed division
- removed unused code
- merged with r9002 (fix for SURF descriptor)
- LBP: multiscale approach; refactored atomics usage
- fix a bug of detect opencl
- merged ocl module from ocl branch (it's not quite usable yet; at least on Mac)
- fixed tests for scale invariance (uncommented sift test, it's ok now)
- small doc fix
- window name changed
- changed tests for rotation/scale invariance of descriptors
- correct unknown feature report in find_obj.py
- added asift.py sample
- moving data used by sample into a separate folder small fix in find_obj.py
- find_obj.py allows to select detector and matcher and explore matching pairs
- changed the way of HARRIS creation
- fixed #2167
- revert my incorrect fix of #2167
- Tegra3 package support enabled; Version code incremented;
- fixed #2167
- added tests on scale invariance of detectors and descriptors
- merging r9039-9040,9044 from trunk (warnings and message in Java)
- fixing wording
- fixed brocken tests by classifier loger from r9027
- fixed typo in test class names
- added tests to check rotation invariance of descriptors (features2d and nonfree)
- customizing the 'Google Market error' message in samples
- removing warnings on deprecated api when targeting to android-15+
- minor LBP for GPU
- fixed nonfree rotation invariance tests for detectors
- changed sift angles according to KeyPoint::angle specification in r9034
- fixed build after r9027
- specified KeyPoint::angle in rst doc and code comment
- minor in LBP for GPU
- fixed features2d rotation invariance tests
- fixed mser (angle is -1 now)
- fixed compile errors under win
- refactored find_obj.py sample: - handle bad matching case - use BFMatcher and FlannBasedMatcher (and thus fixing a bug: L2^2 metric was used for flann)
- added tests to check rotation invariance of detectors
- a bit refactoring in LBP face detection on GPU
- merged documentation and android service from trunk
- Build pdf for Android Manager documentation
- removing 'module' directive to eliminate "PYTHON MODULE INDEX" page in PDF
- minor change in doc
- added test to check keypoints returned by FeatureDetector (center, size, angle)
- filtered MSER keypoints that have centers out of image
- backport 9018
- fix gcc C++11 bug mentioned in http://answers.opencv.org/question/283 . Bug also fixed in FLANN upstream
- split file of features2d tests
- Tegra detector fixed; Some aditional logs added; AndroidManifest version incremented.
- fixed  #2165
- fixed CvBoost in mll if no tree can be trained.
- work on digits_video.py
- HW compatibility tests added; Arm-v7a neon package support enabled.
- better wording
- minor upd. (formatting and wording)
- updating wording and initDebug() descr
- adding java api ref. to top-level index
- improved LBP indexing
- added delobal memory version
- Package name logic improved; Aditional tests added; Some bug fixes with different __SUPPORT_XXX defines.
- swithed to the fixed size thread block
- work on features2d python interface
- fixed SURF orientations, broken in r8892 (see also r8895, r8887 and #2043)
- updated thresholds in EM test after cv::EM fixing
- fixed #2160
- Unit tests updated. Version and HW compatiblity tests added; Tegra3, neon, sseX, x64 support uncomment and guarded by ifdefs.
- fixed #2159
- more doc details for #2152
- updating include dirs to make CDT project in Eclipse happy
- LBP: minor changes
- refactored GPU LBP cascade. Added support for big images. Fixed bug in connected components function
- fixed vfw (#2156)
- fixed #2155
- fixed doc #2152
- mdot function in common.py
- backoprt 8987
- update the docs for cvExtractSURF and initModule_nonfree()
- LBP: switched to texture implementation
- LBP classifer moved to ptr from DevMem2D
- LBP classifer moved to ptr from DevMem2D
- One more fix for zlib search #1902
- Changed DetectionBasedTracker a bit to make its method addObject to return an integer value -- the id of the new added object.
- show detected keypoints in feature_homography.py
- Fixed typo in Java wrapper for FetauresDetector class
- fixed typo in SURF detector #2149
- fixed undefined behaviour in image codecs initialization
- fixed documentation missmatch for ORB
- fixed documentation missmatch for polylines function
- reduced the number of registers used in the LBP responce operator
- fixed backward compatibility with less than 1.2 CUDA capability
- Grammar and Formatting fixes. Added link to the Yale Facedatabase A. Added download directive links for linking to the sample source code samples.
- new feature_homography.py sample
- exposed ORB features to python
- fixed #2130
- quiet most of the OSX build warnings
- Android: updated default TBB version to 4.0 update 5
- Contrib module is added to java wrappers; fixed algorithm initialisation for python bindings
- Fixed several mistakes in documentation
- Fixed file globbing in documentation parsers
- added contrib module support in Python wrappers (thanks to Eric Christiansen)
- removed unnecessary memory allocation in LBP classifier
- added checking destination matrix size for resize and integral functions
- removed unused class filds
- added lbp cascade test, fixed race conditions problems
- added performance test for LBP classifier.
- Messages updated. Samples rebuild is needed.
- Merged the recent fixes from 2.4 branch
- added hipotesis filtration
- LBP classifier: tracking of count of detected objects was moved in cascadeclassifier.cpp
- merged GPU resize became same as CPU implementation
- updated pdfs to 2.4.2
- updated docs theme
- updated docs theme
- minor fixes for the second Android tutorial
- updating pictures; removing redundant 'fix prj prop-s' step
- minor fixes for the first Android tutorial
- Library name updated.
- Touchscreen requirement turned off.
- Package name pattern changed.
- renamed google group to the OpenCV4Android instead of android-opencv
- install bin.apk
- About message updated. Version updated.
- Message box text updated.
- Icon for binary package updated.
- removing windows-specific path from includes
- Fixed Java API tests
- Fixed code block in android tutorial
- Merged the trunk r8927, r8929
- Eliminated discrepancy between SSE and non-SSE versions of bilinear resize
- Fixed opponent space color conversion
- Internal docs about service were moved to opencv_extra.
- Icon for OpenCV Manager updated.
- starting 2.4.2 O4A packages will be packed with ZIP instead of TAR.BZ2
- Typo fix.
- OpenCV 2.4.0 constant version removed. All docs and samples updated for 2.4.2.
- Documentation: fixed duplicated appendix reference
- Merged the trunk r8917:8919
- Fixed run.py bugs
- fixed #2118
- Bug 2129: Fix for missing citations in FaceRecognizer documentation.
- Merged version references fix
- Fixed several opencv version references
- Merged the trunk r8913
- fixed #1834
- Merged the trunk r8911
- Fixed #2125
- Application start without service fixed.
- Merged the trunk r8907, r8908
- updating tutorial
- HoG and Hellinger-metric preprocess for digit recognition line breaks in fitline.py description
- Merged the trunk r8901:8904
- Typo fix. Name of native library was inconsists with java loadLibrary
- Fixed Android package dependencies
- Fixed Android package dependencies
- Fixed Android package dependencies
- adding CDT Builder (via ndk-build.cmd) for JNI part
- Merged the trunk 8892,8894,8898
- fixed typo in minMaxIdx description (ticket #2081)
- update FFMPEG wrapper binaries
- update FFMPEG wrapper binaries
- removed obsolete parameter 'time' in regression test for descriptors
- Merged the trunk r8887, r8891, r8314
- fixed angles of SURF detector
- Fixed automatic temporary files cleaning with run.py on Windows
- Version number is adjusted to 2.4.2
- Merged the trunk 8855,8885,8886
- removed y-axis inversion in drawKeypoints (FeatureDetector has to do this)
- added test for opponent descriptor extractor
- restoring binary compatibility with 2.4.1
- Merged facerec from the trunk
- Fixed bugs in facerec documentation
- Merged the trunk r8852:8880
- fixed build without CUDA
- OpenCV Library renamed.
- Android samples renaming was done. Icon updated.
- fixed bow sample
- result storing: atomic based
- LBP classifier was refactored, added parameter for max size of detected object
- GPU resize became same as CPU implementation
- gpu classifier default values became same as to cpu implementation
- classifier loading has been improved
- refactored digits_adjust.py (dataset preprocess in cloud)
- descriptions for watershed.py and video.py
- fitline.py sample added
- fixed #1764
- added check for false bug report #2081
- partial fix for repeated algorithm registration (patch #2101 by Stephan Reuter)
- fixed #2082
- fixed compilation in msvc
- fixed bug with uninitialized variable in cvGetOptimalNewCameraMatrix (patch #1731 by floemker)
- added fullscreen mode on Mac (patch #2040 by Takahiro Horikawa)
- added support of homogeneous points to calcCorrespondEpilines (ticket #2055)
- Background subtractor GMG: removed flexitype, fixed build errors.
- Fixed Windows build warnings and configuration problem.
- Merged few small fixes from 2.4 branch
- fixed #2113
- Merge branch 'home'
- Fixed small bug in cv::Ptr<_Tp> conversion to cv::Ptr<_Tp2>. Now this conversion is made in a more accurate way.
- fixing bug #1987(android keeps RGBA in alpha pre-multiplied form, Mat <-> Bitmap should handle this correctly)
- Debug message is turned off
- Quiet MSER tests
- opencv_ts is removed for java API
- Merged recent changes from trunk - 8833,8848,8850
- Added Ptr<T> support to AlgorithmInfo; fixed some warnings
- Fixed windows build problems of BackgroundSubtractorGMG but code still need more work.
- fixed bug in SVD, ticket #2027; fixed building highgui with ffmpeg support on MacOSX
- Merged Android build fix
- Fixing parallel build for Android
- Fixed few warnings
- Fixed Android build warnings in backgroundsubtractor_gbh
- fixed merge problem
- Reverted some changes in videostab module
- Removed incorrectly merged test
- merged python samles
- merged trunk r8815:8827
- changing package layout after 'make install' for Android build
- merged Android samples
- merged the trunk r8735:8766, r8769, r8777:8780, r8790  and r8800:8811
- added FREAK (by Kirell Benzi, Raphael Ortiz, Alexandre Alahi and Pierre Vandergheynst)
- merged the trunk r8719:8731 and 8807
- fixed possible video distortion problem when cap_avfoundation.mm is used to capture video (ticket #1980)
- added GMG background segmentation algorithm by Andrew Godbehere, ticket #2065
- merged Android Manager and new java layout
- merged the trunk r8704:8716
- Added possibility in the class DetectionBasedTracker to work as a tracker only -- without the mainDetector. In this case new objects will be added into it by the method addObject(const cv::Rect& location).
- merged GPU scan
- fixed #2108 (thanks to Vincent for the report and proposed solution)
- merged the trunk r8669:8702
- merged iOS framework from the trunk
- Added cmake for building Android package
- Added template method cv::Algorithm::set(const char* _name, const Ptr<_Tp>& value), which allows to pass as the second parameter of the method set any cv::Ptr<_Tp> object.
- Small addition change in the FileStorage sample.
- Fixed discrepancy between SSE and regular baranches in FREAK
- Fixed Android build with SDK tools revision 20
- Added to the sample, demonstrating FileStorage, how to read/write data from/to std::string.
- switching to dynamic linking
- Fixed cvExtractSURF in case of no keypoints found #2076
- fixed bug #2106; added test
- fixed ios framework build (ticket #2092)
- API Link corrected.
- API Link corrected.
- Fixed divide by zero problem in cvStereoRectify (thanks to Philip Van Valkenberg) #2099
- Fixed Mat::isContinuous for big matrix (thanks to Boris Mansencal) #2103
- Fixed linux and android install
- improved recognition accuracy by better region normalization
- discard digit's internal contours in digits_video.py
- workarounding missing native part in Java tests
- Fixed some warnings and install problems on linux
- Merged revision(s) 8679 from trunk: new implementation of gpu::PyrLKOpticalFlow::sparse (1.5 - 2x faster) ........
- work on digits_video.py
- Merged revision(s) 8664 from trunk: new implementation of gpu::PyrLKOpticalFlow::dense (1.5 - 2x faster) ........
- work on digits_video.py
- Fixed mistake in documentation
- digits_video.py prints warning if trained classifier (should be created by digits.py) not found
- changing package layout after 'make install' for Android build
- digits_video.py (VERY IMMATURE) digits.py now saves the resulting SVM classifier for use in digits_video.py
- digits_adjust.py sample added
- removed ANN digits recognition added deskew for SVN and KNearest recognition sample
- Fixed wrong restructured text directive, when referencing to other documents.
- Fixed MSVC build with Qt enabled #2096
- Added the cv::FaceRecognizer documentation (API, Face Recognition Guide, Tutorials).
- fixing project properties
- hiding extra build-time messages
- Sample3-native build fix. Dependency from OpenCV library project added. Scripts updated.
- Color blob detection example updated for OpenCV Manager model.
- Sample4-mixed was updated for OpenCV Manager model.
- Example3-native updated for OpenCV Manager model
- fixed LBP loader test
- Sample 2 was updated for OpenCV Manager model.
- Sample 1 updated for OpenCV Manager model.
- fixed bug in cv::gpu::HOGDescriptor::detectMultiScale
- Image manipulations sample updated for OpenCV Manager model.
- LBP features: GPU representation
- added XIMEA support for linux (by Igor Kuzmin) #2085
- Applied XIMEA path (by Marian Zajko) with multiple changes #2054
- added VIBE_GPU (background subtraction) to gpu module
- Fixing iOS detection in core persistence
- Fixing cv::tempfile on Windows #2093
- Fixed Android Manager build
- Making all dependencies from highgui module optional
- Revision 8725 restored. Android sample FaceDetection updated according DetectionBasedTracker interface.
- revision 8721 vas merged to head. Detection based tracker interface changed. cpp and android samples updated.
- fixed build without CUDA
- LBP: implemented first version of device side part
- LBP: implemented image data preparing
- added lbp related CUDA files
- completed test: load LBP classifier
- LBP classifier represintation in GPU memory
- Minor update for zlib search
- added docs for MOG_GPU and MOG2_GPU
- fixed several documentation errors
- added background subtraction sample for gpu module
- added FGDStatModel, MOG and MOG2 to gpu performance sample
- copy 768x576.avi video to sample directory
- All tests writing temporary files are updated to use cv::tempfile() function
- Fixed FREAK on Android
- added MOG_GPU and MOG2_GPU (Gaussian Mixture background subtraction)
- added comments to contours.py and edge.py samples
- added comment to letter_recog.py sample (adopted from c++ version)
- added test for GPU LBP cascade: load cascade
- adding missing images
- Updated gtest to upstream rev616
- Search python libs exactly matching to python executable on cmake 2.8.9 and newer
- Fixed windows build of FREAK
- Reverted r8721 and r8725 (issue #2080)
- added FREAK (by Kirell Benzi, Raphael Ortiz, Alexandre Alahi and Pierre Vandergheynst)
- Fixed buggy NEON check inside flann
- updating version
- workarounding service-related changes
- added synonym CV_COMP_HELLIGNER for CV_COMP_BHATTACHARYAA to reflect the real formula used (bug report #2073)
- initial support of GPU LBP classifier: added new style xml format loading
- Sample updated due to new DetectionBasedTracker interface.
- added the optional output maxima value to phaseCorrelate (patch #2071 by Robert Huitl)
- Fixed tests broken by r8708
- adding OpenCV Manager
- revisions 8681 and 8688 restored. Warning fixed. Warning: changes beak binary compatibility
- moving to OpenCVLoader API
- Fixed few warnings on Linux
- changing 'java' module layout
- Fixed warnigs from zlib defines
- fixing warnings
- fixes for the newly added gcc warning keys
- Fixed few more warnings/bugs.
- Fixed mingw build warnings
- Fixed build with MSVC
- Updated warning options for GCC; fixed new warnings.
- adding JNI func-s declarations to eliminate build warnings inside Android tree
- fix for #2048 (artificial 'delete' method had wrong JNI signature)
- fix for #2063 ( Mat(Mat m, Rect roi) returns wrong sub-mat)
- fixed build without CUDA
- scan operations are moved in separate header
- Fixed optional dependencies tracking in CMake. Fixed TBB compiler definitions for Android.
- Merge branch 'work'
- fix for 1.x compute capabilities
- added OpenCVConfig.cmake
- Reverted changes breaking Android build
- minor tutorial update
- added digits2.py sample (work in progress)
- minor fixing
- set sample param to its default value in function
- Fixed WString related build problem in Android build
- added kmeans.py sample
- fixed SVM train_auto docs: "train set" <-> "test set"
- Code style fix. dbt face detection example turned off for Windows.
- resize area are fixed for scales that aren't divide 128
- Fixed Visual Studio precompiled headers
- resize area with block scan
- resize area with block scan
- resize function signature refactoring
- minor formating changes
- Detection based tracker was refactored. Detector interface added.
- Fixed precompiled headers support detection
- new implementation of gpu::PyrLKOpticalFlow::sparse (1.5 - 2x faster)
- Fixed Android build with Eigen.
- Two colormaps removed from the list of colormaps, as they are no visually improved enhancement to a Jet colormap.
- The COLORMAP_PINK colormap was missing in applyColorMap.
- minor formating fixes
- 'call' added to android.bat call
- fixed more "shadow" warnings
- Merged the trunk r8595:8668 (except iOS and new gpu functionality)
- added check for CUDA BLUS support in GEMM tests
- fixed "shadow" warnings in nvidia folder
- fixed "shadow" warnings in NVIDIA tests
- Merged the trunk r8589:8653 - all changes related to build warnings
- new implementation of gpu::PyrLKOpticalFlow::dense (1.5 - 2x faster)
- minor tutorial update
- fixing typo that breaks the build
- added check to weight in rgbd
- tutorial updated
- Merged the trunk r8575:8583 (INTER_AREA interpolation for GPU resize)
- Merged the trunk r8547:8574, r8587
- Shortened cmake script for opencv_world
- fixes #2044
- Fixed #2053
- tutorial updated
- Fixed Android build warnings for old NDK
- Android toolchain: fixed try_compile problem with old cmake versions
- tutorial updated
- added weighting to rgbd odometry
- Reduced some tegra stubs
- exposed parallelized SVM prediction to python (predict_all)
- fixed #2047
- fixed part of shadow warnings
- scan based area interpolation for naive cases
- Fixed Android build warnings and few warnings in specific cnfigurations
- fixed part of shadow warnings
- suppress warning no previous declaration for gpu module
- fixed highgui configuration with QT enabled
- Fixed problem with incorrect detection of some compiler flags
- Added linking against AppKit framework when OpenCV is configured with WITH_QUICKTIME=OFF
- fixed compilation error and some warnings if with_openni is true
- Documentation for FaceRecognizer started (not added to toc of contrib/doc/contrib.rst yet). CSV file for the samples/cpp/facerec_demo.cpp added. Added some more exceptions to warn the user, when passing bad aligned data.
- Fixed target_link_libraries for python bindings
- restored -Wno-unnamed-type-template-args
- Added own CMake macro for compiler flag checks (to not depend on CMake version)
- Fixing compiler flags checks.
- Fixed number of warnings. Fixed mingw64 build.
- fixed find_obj.py (use detectAndCompute)
- updated iOS installation instructions
- fixed #1974
- Minor grammatical correction in comments.
- Exceptions now go into CV_Error. Added thresholding to the FaceRecognizer and updated the demo accordingly.
- Several exceptions added to the available FaceRecognizer classes and helper methods, so wrong input data is reported to the user. facerec_demo.cpp updated to latest cv::Algorithm changes and commented.
- fixed build under android
- added lappyr.py sample
- always remove libopencv_world.a before building framework to always include the up-to-date code into the framework binary.
- fixed build without CUDA
- added script to build the universal opencv2.framework for iOS device and simulator. fixed opencv_world cmake script to create static libopencv_world.a for iOS. temporarily disable compressed file storages in the case of iOS (to avoid dependency of zlib)
- minor warning fixes
- resize area for big downscaling integration
- Warning fixes continued
- fixed another piece of warnings
- Declaration of color conversion functions are moved in header file to avoid warnings
- Fixed all anomimous warnings
- Fixed another one thousand warnings about uninitialized anomimnomous
- possibly fixed crash boost caused by the recent modification; slightly improved mlp params in letter_recog sample
- fixed hundreds of "anonymous" warnings for gpu module.
- Fixed precompiled headers build on Linux
- Ignored warnings from gtest with precompiled headers enabled
- Fixed build with TBB for Android
- New Tegra Optimized thresh_16s and thresh_32f functions were added
- Fixed Android build
- slightly updated windows_install.rst tutorial
- Fixed build with TBB
- Fixed recently introduced build problems on some platforms
- Fixed mingw build.
- update FFMPEG wrapper binaries
- Set stricter warning rules for gcc
- fixed relative path for stitching/details headers
- set to linear interpolation type for upscaling with area interplation flag
- call not NPP version in case of INTER_AREA resize
- fixed accuracy test
- performance test for INTER_AREA resize has been added.
- fix for down rounded output sizes
- Fixed build of opencv_world with QT on linux #2012
- fixed for resize with INTER AREA. Since now we divide by convolved area
- fixed build
- GPU resize with INTER_AREA
- decreased size of the buffer used in CvBoost::update_weights (ticket #1803)
- fixed typo in the tutorial code (thanks to Abid Rahman; ticket #2016)
- auto-copy java.so to package
- test commit
- Updated link in android readme
- test commit
- comments for digits.py sample
- fixed build under windows, updated 768x576.avi video (other codec)
- update FFMPEG wrapper binaries
- added gpu::FGDStatModel (Background/foreground segmentation)
- fixed #2019
- made GPU Feature Extractor download/convertKeypoints() methods static (Feature #2007)
- phaseCorrelate documentation patch by Will Lucas #2017
- Dragonfly BSD build fix #2010 (thanks to Thomas Klausner)
- fix for ORB tests
- fix for ORB tests
- updated pdf's to 2.4.1
- work on added digits.py sample (neural network for handwritten digit recognition)
- update FFMPEG wrapper binaries
- Merged the trunk r8542:8544
- grid-adapted feature detector made a proper Algorithm (ticket #1874)
- added nmixtures parameter to BackgroundSubtractorMOG2 (ticket #1914)
- reverted the original VideoCapture::read() code; moved frame index check to where it should belong: ffmpeg wrapper; applied patch by Rob Reilink (ticket #1971)
- Merged lda fix from 2.4 branch (Fixed reconstruction, so that the mean is correctly added to the reconstructed image.)
- Merged the trunk r8537 (fixed pdf documentation build)
- Merged Android samples from trunk r8423 r8533
- Fixed pdf documentation build
- Fixed reconstruction, so that the mean is correctly added to the reconstructed image.
- CodeReview #1512 notes fixed.
- Trunk OpenCV version is set to 2.4.9
- Version of 2.4 branch is adjusted to 2.4.1
- Megred fix for pyrhon API generator regression r8528
- removed debug print
- Fixed regression in python wrappers generator
- CodeReview #1511 notes upplied.
- Merged the trunk r8517:8524
- backported API for storing OpenCV data structures to text string and reading them back (r8481, r8516, r8518, r8522)
- Added C++ and python signatures for moveWindow, resizeWindow and setMouseCallback
- Fixed #1996
- Added test for #1997; fixed build warnings
- Merged revision(s) 8484 from trunk: fixed some bugs in gpu module under Windows: * convertTo alignment error ........
- tegra integration
- Made reference manual table of contents autogenerated
- changed "void FileStorage::release(string&)" to "string FileStorage::releaseAndGetString()"
- tegra::cvtRGB2HSV function was added
- replaced "string FileStorage::release()" with 2 methods to preserve backward compatibility.
- Fixed few errors in documentation backporting
- Merged the trunk r8467:8507 (inclusive) (big bunch of documentation fixes)
- Merged the trunk r8459:8466 (inclusive)
- Merged the trunk r8408:8457 (inclusive)
- Merged the trunk r8384:8407 (inclusive)
- fixed mark_nvidia.py script (warpAffine and warpPerspective)
- Fixed Java API build
- Documentation: fixed class/struc members documentation; added warning on incorrectly documented member
- Documentation: fixed operators regex; added varargs support
- Documentation: improved correctness checking for superclasses
- Documentation: added support for multiple superclasses
- Documentation: added support for virtual methods
- Documentation: added support for superclasses in class definition #1308
- Native camera libs rebuilt for bug #1989 fix.
- Bug #1989 fixed. NULL pointer check added.
- Temporarily disable test on Mac
- Fixed documentation generation for function arguments having array type i.e. 'type arg[]'
- Merged revision(s) 8495 from trunk: Bug #1991 : fixed gpu interpolation (remap, resize, warp...) ........
- Bug #1991 : fixed gpu interpolation (remap, resize, warp...)
- fixing Java test and sample after moving drawContours() from Imgproc to Core
- Added check for trailing semicolon to rst parser; fixed few documentation build warnings
- Fixed documentation: corrected parameter names
- fixed some bugs in gpu module under Windows: * convertTo alignment error * compare with scalars error
- Fixed property names in cap_dshow #1993
- More fixes for documentation.
- added API for storing OpenCV data structures to text string and reading them back
- Small fixes for documentation checking script
- Added check for documented but missing functions
- New bunch of documentation fixes
- Merged revision(s) 8474 from trunk: fixed several problems with CUDA 5.0 * gpu::LUT, uses device memory instead of host memory * gpu::multiply, round mod for CV_8U depth ........
- remaining C-style planar subdivisions data structures are moved to legacy
- added fix_properties scripts for Android samples
- fixed several problems with CUDA 5.0 * gpu::LUT, uses device memory instead of host memory * gpu::multiply, round mod for CV_8U depth
- Fixed more documentation & source discrepancies
- compatibility corrections
- warp Affine tegra integration
- updated video_threaded.py sample: - switch btw threaded and non-threaded mode - performance counters - description
- minor fix of gpu perf tests
- Fixed hundreds of documentation problems
- Added new script for checking correctness of documentation
- Added test for #914
- video_threaded.py sample now uses multiprocessing module's ThreadPool
- temp commit
- temp commit
- Fixed some build warnings
- Moved 3rd-party libraries detection to separate cmake files
- temp commit
- Added new perf tests for boxFilter
- Merged revision(s) 8455 from trunk/opencv/modules/gpu/src: compilation with CUDA5.0 (#1982, thanks to Rodrigo) ........
- compilation with CUDA5.0 (#1982, thanks to Rodrigo)
- Fixed groupRectangles documentation #1817
- Added tegra stub for cornerEigenValsVecs
- Fixed PvAPI search on Windows #1927
- perf_framework: added TEST_CYCLE_MULTIRUN macros ( invokes function tested several times at each iteration )
- fixed #1981
- Updated sanity checks for some imgproc perf tests
- added video_threaded.py sample
- some more fixes in Algorithm methods declarations
- Minor cmake change
- added mark_nvidia script
- minor fix of gpu perf tests
- fixed undistortPoints description (ticket #1964)
- updated gpu performance tests
- fixed description of cv::invert() (ticket #1972)
- fixed description of Algorithm::getList(); added sample, thanks to Shervin Emami (ticket #1972)
- Fixed assert placement in cv::invert
- Added documentation for buildOpticalFlowPyramid
- compilation
- gpu: added Cascade and mulAndScaleSpectrums perf tests
- exposed MSER to python again
- cv::Exception handling added. Multithreading bug fixed.
- updated filters performance tests in gpu module
- Added a check of the DetectionBasedTracker's inner state in the main thread function of this class. This change should fix a multithread bug in the class.
- arithm test gpu tests for cpu :)
- Face detection example updated. Dtetection base tracker mode added.
- fixed gpu-vs-cpu performance tests
- fixed #1969
- updated gpu-vs-cpu performance tests
- fixed gaussian_mix.py sample
- fixed precom for opencv_perf_gpu_cpu
- made video_dmtx.py description visible in demo.py
- removed derivLambda param for LK-tracker linetype -> lineType
- added cpu performance test for gpu module
- FIX: VideoCapture::read() was returning empty image for camera captures
- Fixed some corner cases of opencv_world configuration
- Updated to TBB4.0 update 4 for Android build
- FaceRecognizer class is now derived from Algorithm, therefore it's possible to set and retrieve the parameters using conventional Algorithm::set and Algorithm::get methods
- fixed 2 build problems on MacOSX (highgui with ffmpeg, opencv_world); added macro CV_INIT_ALGORITHM for simpler algorithm registration (ticket #1876)
- Updated tegra optical flow stub
- Now the DetectionBasedTracker will throw exception if it cannot load cascade detector from a file.
- Added new performance tests for calcOpticalFlowPyrLK and buildOpticalFlowPyramid; extracted private header from lkpyramid.cpp
- Fixed Linux build
- include nonfree for a couple of f2d samples
- Restored QuartzCore framework for OS X
- Refactored highgui libraries search (tested on Windows only)
- Fixed few MinGW build problems
- Fixing Android SDK search on OS X.
- skip of table header in MLData (#1962)
- Refactored CMake status report for video IO libs
- Fixing compile on some MinGW platforms
- Added Windows paths support to Eigen search.
- MinGW: try -mpreferred-stack-boundary instead of mstackrealign
- Restored -O2 for MinGW
- fixed Mat::diag (#1939)
- Fixed parameter name and copy condition
- Merged the trunk r8345:8376
- Merged the trunk r8324:8345
- Partly merged the trunk r8322
- Merged the trunk r8291:8321
- Merged the trunk till r8291
- Fixed phaseCorrelate result for not power of 2 size images #1812 (thanks to Jeff Mast)
- Fixed problem with manually set PYTHON_PACKAGES_PATH #1891
- Fixed accumulateWeighted with mask for multichannel matrices #1959
- #1932 Fixed SSE instability on mingw32
- Fixed MinGW build after r8358
- fix for #1954 (typos)
- Merged revision(s) 8368 from trunk/opencv/modules/gpu/src/imgproc.cpp: fixed possible compilation error for macos ........
- fixed possible compilation error for macos
- Android samples are updated: onPause()/onResume() release/open camera, a message is shown on camera open error, minor fixes in code and resources
- Fixed Algorithm usage example #1904
- Refactored per-computed pyramid handling in calcOpticalFlowPyrLK #1321
- Added Snap-to-Screen Edge feature in the case of multiple monitors (patch by Adi Shavit)
- Added test and workaround for #1942
- Added option to pass pre-computed pyramid to piramidal LK optical flow #1321
- fixed building avfoundation on MacOSX with iOS targets
- fixed background update in GMM2 algorithm (ticket #1931)
- Fixed incorrect CMake variable name
- Applied patch for IPP linking under MinGW (thanks to Philippe FOUBERT) #1906
- Fixed typo #1896
- Fixed replacement of -O3 with -O2 for mingw compiler #1896
- Fixed python version issue #1903
- Shortened CMake script for opencv_world. Fixed opencv_world link with non-Visual Studio generators on Windows.
- fixed building opencv_world with VS2010
- Updated sanity threshold for convertTo perf test
- added opencv_world module that combines all the other [selected by user] OpenCV modules, except for opencv_python and opencv_gpu.
- Updated dot profuct function table
- added gpu::compare with scalars (Feature #1754)
- ColorBlobDetection example. Bug fix. Refactoring.
- added message that timings doesn't include data transfer to gpu performance sample (Issue #1846)
- ColorBlobDetection example. Bug fix. Refactring.
- ColorBlobDetection example. Pyrdown added. Contour area filtering added.
- added support for vector<Mat_<>> in InputArray, OutputArray, split & merge
- fixed problem with Mat::copyTo() with Mat_<> arguments (ticket #1918)
- propagated 2 fixed from 2.4 to trunk
- fixed build under MacOS (disabled video decoding, it's not supported)
- disabled WITH_OPENGL flag under MacOS
- Fix for #1902 is merged from trunk
- #1902 added workaround for CMake 2.8.2 bug
- Accelerating the completion of video bypass (bug #1893)
- Fixed read error in VideoCapture for images (bug #1892); minor fix of ffmpeg wrapper warning
- added check for CMake 2.8.3 for CUDA support
- Merged from trunk.
- Fixed facerec_demo.cpp.
- Base version implemented.
- compilation for Macos
- fixed GPU compilation
- Added check for CUDA toolkit version ( older can't compile Kepler )
- Added check for CUDA toolkit version ( older can't compile Kepler )
- Merged revision(s) 8304 from trunk/opencv/cmake/OpenCVDetectCUDA.cmake: Added check for CUDA toolkit version ( older can't compile Kepler ) ........
- Added check for CUDA toolkit version ( older can't compile Kepler )
- update for kepler arch support
- Added default compilation for Kepler
- fixed typo in mulSpectrums description (ticket #1868)
- Added Android NDK r8 support including new mips ABI
- fixed for Kepler
- removed #include "cap_ffmpeg_impl_v2.hpp"
- run.py - fixed java tests launch on Windows
- updated printCudaDeviceInfo to support Kepler
- Debug/Release folders fix for QTCreator build
- Remerged the 2.4.0 branch
- fixed opencv_ffmpeg.dll name in gpu video encoding/decoding
- fixed some problems after r8280 (lost code)
- fix for brute-force matcher with CUDA 4.2.
- update FFMPEG wrapper binaries
- merged 2.4 into trunk
- get back to single-version ffmpeg wrapper (no more v2); make sure the library builds and the tests pass on Ubuntu 10.04 that includes pretty old version of ffmpeg
- get back to single-version ffmpeg wrapper (no more v2); make sure the library builds and the tests pass on Ubuntu 10.04 that includes pretty old version of ffmpeg
- avoid simultanous reading data from 2 videos Highgui_Video.regression, since earlier versions of ffmpeg (or the way our wrapper uses them) can not handle that properly
- force BUILD_PNG/JPEG/TIFF/ZLIB on MacOSX, because sometimes the found lib<...> is different from the one used in build.
- update FFMPEG wrapper binaries
- some more fixes in ffmpeg wrapper; now it handles big videos better.
- updated pdfs
- change docs version
- added documentation for ORB (ticket #1835). updated documentation on features2d (Feature2D class is still to be documented) (ticket #1819)
- update FFMPEG wrapper binaries
- temporary reverted av_free_packet() patch.
- moved part of f2d docs to the legacy module
- added description of Algorithm class (ticket #1818)
- fixed PyrLKOpticalFlow.dense (final result size)
- fixed PyrLKOpticalFlow.dense (final result size)
- moved planar subdiv docs to legacy; added Input/OutputArray docs to core
- fixed #1824
- Java API: minor fix in javadoc
- Improved javadoc generation scripts
- Bug #1853 15-puzzles example does not work on Samsung gt-i9100 with Android ICS 4.0.3 fixed.
- Fixed bug #1759
- fixed RGBD capture with Asus Xtion (by Gary Bradski)
- fixed 3-channel output tvecs support in calibrateCamera (patch #1807)
- decreased the number of tests in Core_Eigen, decreased the maximum matrix size in Core_SVD; now those tests take less time to complete
- Java API: updating OpenCV version, minor Core API improvements, enabling EM.
- updating Posterize in 'image manipulation' Java sample
- reverted r8003 (CascadeClassifier_GPU didn't work)
- reverted r8003 (CascadeClassifier_GPU)
- added BruteForceMatcher_GPU (for legacy)
- bad changes reverted.
- Loader classes for OpenCV with Android service added. Library loading in OpenCV API removed.
- update FFMPEG wrapper binaries
- Fixed VideoCapture memory leak (bug #1481)
- Minor improvements: reduced verbosity of positioning tests; run.py - filter out non-executables on windows
- fixed Linemod's Detector write method (removed nested sequence delimiters)
- modified data matrix detection interface (that does not use any new data structures). Added Python sample for data matrix detection. Ticket #1664
- CMake for new Android example
- adding one more assertion to a Java test
- adding Histogram and Posterize, removing Blur from 'image manipulation' Java sample
- put template Distance classes back to features2d, since they are used in GPU; fixed OpenCV build with Xcode 2.3 (which includes new libpng)
- fixed #1855
- fixed #1833
- fixed #1841
- Base classes for sample added.
- added BruteForceMatcher (the older variant of BFMatcher) to legacy (ticket #1796). added test for it. Renamed legacy tests to "Legacy_*"
- Base code for new sample added.
- Replaced CV_RANSAC in findHomography with CV_LMEDS (videostab)
- added test to check #1737
- Updated latentSVM tests and data
- Minor documentation fix
- Increased test threshold for arm
- fix to Detector::write so that it doesn't abort on read
- #1854 Fixed Mac OS X build with Clang
- Reenabled OpponentSIFT test; Changed compiler flags for 32-bit MSVC; Fixed handling of "d" suffix of debug binaries in run.py.
- adding VIEW_MODE_PIXELIZE to the 'image manipulations' sample
- added version number to opencv_ffmpeg dlls (it's added only when dll copied to the bin directory); it resolves #1827
- Fixed build warnings
- Minor changes in videostab module
- Bug #1822 Native camera does not work on Samsung Galaxy SII with Android ICS 4.0.3 was fixed. All binary libs were rebuilt.
- Fixed compiler flags for debug builds
- run.py: Automatically enable color output in android tests (posix shell only)
- Refactored videostab module
- 5 functions from addWeighted_func family were Neon Optimized
- update FFMPEG wrapper binaries
- avoid use of "AVFrame::best_effort_timestamp"
- File perf_addWeited.cpp added
- Refactored videostab module
- update FFMPEG wrapper binaries
- ok, now positioning seem to work well, at least with ffmpeg 0.10.2 on MacOSX 10.7
- propagated changes for retina filters from trunk to 2.4
- Fixed SURF behavior - from now it always returns keypoints in the same order
- fixed HighguiFramecount.regression test (and renamed it to Highgui_Video.framecount)
- added PSNR function to imgproc; refactored highgui positioning test (which still fails)
- fixed a dicide by zero potential problem
- user can now use the default retia config auatogenerated file to test their own setup
- Added LP based global motion estimation (videostab)
- update FFMPEG wrapper binaries
- refactored highgui_specificvideo* tests; fixed repeated libswscale context creation in videocapture & videowriter (ticket #1541)
- Fixed most of the floating-point accuracy problems for x86 gcc
- merged bug fix from r8188 (PyrLKOpticalFlow patch size calculation)
- merged bug fix from r8174 (GPU_NVidia/NCV.Visualization test)
- merged bug fix from r8179 (ORB_GPU)
- Java API: fixing Mat::put() for non-continuous Mat-s, adding/improving tests
- added Matx<4,4>*Scalar operator (ticket #1830)
- fixed python version in yet another place.
- make Mat::at<>(i) work with 2d matrices (to retrieve all elements in row-major order) (reported by Kurt) and fixed bug #1804
- Bug #1823 : fixed patch size calculation in PyrLKOpticalFlow
- fixed build of gpu demos pack
- removing extra quotes that causes build failure
- added special function to patch NaN's in image. call this function from bilateralfilter (should fix bug #1811)
- fixed formula in matchShapes, method=CV_CONTOUR_MATCH_I3 (ticket #1801)
- Android build scripts for Windows are updated to recognize ninja
- fixed bug in Python's calcEMD2 (ticket #1763)
- fixed build without ffmpeg (gpu module)
- updated gpu docs (BFMatcher_GPU)
- fixed bug in ORB_GPU, behavior in the absence of keypoints found  (Bug #1831)
- avoid infinite loop in CvLevMarq (thanks to João Lima for the patch; ticket #1839)
- fixed typo in the installation guide (ticket #1844)
- corrected typo (ticket #1843). added note about imdecode & imencode
- added "Matx*Vec -> Vec" operator (ticket #1830)
- fixed GPU_NVidia/NCV.Visualization test
- Added local outlier rejector. Added rigid motion estimator. Refactored videostab module.
- added additional tests to gpu::BFMatcher
- fixed bug #1821
- minor tab fix
- fixed duplicated paragraph
- refactored gpu BruteForceMather (made it similar to BFMatcher)
- fixed build of gpu module without CUDA (video encoding/decoding)
- Configuration name is added to the CMake status report
- Fixed dependencies for cmake status embeeded into opencv core
- Fixed assertions in java tests for ORB
- Added CUDA version to CMake status
- Fixed cvRetrieveFrame memory leak under AVFoundation (ticket #1837)
- fixed several warnings (VS2010, Win64) added getParams method to VideoWriter_GPU
- Fixed Android manifest install
- NORM_L2SQR added too (ticket #1840)
- added NORM_HAMMING* support to cv::norm (ticket #1840)
- Fixed ffmpeg dll copying under mingw
- Added GPU version of wobble suppressor (videostab)
- 6 functions from Inrange_func family were Neon Optimized
- Fail perf_inRange.cpp added
- Make ocv_include_directories a function to minimize problems with windows backslashes
- removed unnecessary CV_EXPORTS
- fixing compilation for Android
- Fixed trim ratio estimation for the case of homographies motion model (videostab)
- Fixed build with mingw 4.4.0
- Java API: fixing Mat::get() for non-continuous Mat-s.
- wrapped Algorithm class.
- Fixed build (noiseSigma of BackgroundSubtractorMOG is now protected)
- Set sanity thresholds for several performance tests
- added dedicated <modname>_init.cpp files with initModule_<modname>() functions and all the relevant structures; made BackgroundSubtractorMOG/MOG2 derivatives from Algorithm; cleaned up MOG2 implementation and made it multi-threaded.
- Added resources release for AVT cameras (ticket #1814)
- Minor update for new Ninja cmake generator
- minor fix in calculate bitrate
- minor fix in calculate bitrate
- Replaced DECOMP_SVD with DECOMP_NORMAL|DECOMP_LU for speed (videostab)
- Updated for cmake 2.8.8
- Fixed verbosity of badarg tests
- improving Imgproc.convexityDefects() and Imgproc.convexHull()
- fixing stability of testBitmapToMat()
- fixing #1808, Java API improvements
- fixing convexityDefects()
- Fixed parsing cmd args bug (videostab)
- Minor changes in videostab module and sample
- Added timing for main steps (videostab)
- Updated videostab sample
- Minor fix for previous commit
- Refactored build conditionals in highgui tests
- Restored old behavior for OSX
- Refactoring (videostab)
- Fixed Calc_Hist under 32-bit gcc
- fixed AlgorithmInfo::read for read only parameters (thanks to Vadim)
- Added GPU version of PyrLK based global motion estimator (videostab)
- Fixed dependency from opencv_nonfree in Java bindings
- added docs for VideoReader_GPU
- minor doc fix
- added doc on cv::EM; moved doc on CvEM to legacy/doc
- made em params read only; minor renaming
- minor fix in gpu video_writer sample
- fixed misspelling in ertrees doc
- fixed build without CUDA
- added VideoReader_GPU
- Fixed typo; removed duplicated call
- Fixed stitching module tests built without nonfree
- update FFMPEG wrapper binaries
- fixed FFMPEG wrapper compilation on Windows
- Probably fixed instability of single-precision floating-point RNG
- Fixed error in frame positioning (bug #1815)
- fixing #1800
- Probably fixed EM tests failure on x86 platforms (thanks to Maria D.)
- #1813 fixed compiler options with profiling enabled
- added docs for VideoWriter_GPU
- added support of different surface formats to VideoWriter_GPU added key frame handling to ffmpeg wrappers
- Removed unnecessary code (videostab)
- Removed unnecessary code (videostab)
- Refactored videostab module
- added VideoWriter_GPU
- refactored train and predict methods of em
- Fixed 2 failing python tests
- Made OpenCVConfig.cmake friendly to Windows pack
- #1809 include unistd.h required for usleep
- Fixed failing Video_OpticalFlow.accuracy test
- fixed test on em (old interface)
- run.py: try working directory as a build path if no paths provided
- Fixed incorrect asssertion in test
- Fixed build warnings
- updated points_classifier sample to use bayes classifier after distributions estimation by EM
- removed changes of r8043; fixed 4 broken ml tests by other way
- Fixed Android build with correct manifest file
- fixed test on em
- fixed creation of opponent space descriptors (#1805)
- Added info about papers (videostab)
- 12 functions from Norm_func family were Neon Optimized
- Fixed typo (videostab)
- Added support of Clp for Windows
- fixed mistake in method name (#1798)
- fixed nan in EM, added new test on EM
- update theme for online docs (was incorrect in Firefox and Safari)
- Fixed Android manifest generation and Android samples install
- Fixed comparison methods in matchShapes (issue #1012)
- Fixed compiler flags caching in toolchain; fixed zlib search.
- Fixed Android build warning
- Fixed LP based stabilizer
- Added linear programming based stabilizer (videostab)
- merged few missed changes from 2.4 to trunk
- merged all the latest changes from 2.4 to trunk
- Fixed gcc version parsing.
- Fixed 4 broken ml tests.
- Spell checked the documentation with VIM (issue #223)
- Removed stdio include from ffmpeg wrapper
- Updated diagnostic messages in VideoWriter (for ticket #1736)
- Removed mentions of TBB optimization if users can't actually use it (thanks to Andrey K.)
- Mentioned in doc if a function is parallelized with the TBB library (issue #421)
- Added Java tests support to run.py
- added support clang compiler
- Documented C++ interfaces of XML/YAML persistence classes (issues #1358, #539)
- minor changes in windows install tutorial
- removed module index
- Updated Clp library related code in CMakeLists.txt
- increased bitrate of recorded video on 25%
- increased bitrate of recorded video on 25%
- minor changes in documentation
- Fixed several documentation warnings and errors.
- fixed #1795
- Fixed 9 more build warnings
- Fixed ant search on Windows
- Added perf test for video output
- fixed ERTrees name for writing to/reading from xml
- increased the trees number for ERTrees
- added ability to read files with different space count
- Removed unnecessary line (videostab)
- Removed unnecessary line (videostab)
- Fixed PvApi wrapper build
- Fixed compilation error under Linux (memset for pvapi was moved to constructor)
- Fixed typo
- adding test for the bug #1795
- changed css for search panel
- changed 2.3 to 2.4 in some guides & tutorials (ticket #1794)
- extended morphological operations to handle arbitrary number of channels and CV_64F type; extended filter2D to handle CV_16S type. added test to check the supported formats; added description of supported formats in various filtering operations.
- Fixed cameras segfault (patch #1771)
- Fixed broken by r8007 install target
- fixed #1310
- Minor refactoring of condition for avformat_find_stream_info (ticket #1790)
- Fixed problem with headers install patch
- Documented valid image types in morphology operations (issue #1679)
- Added support of CV_16S depth in morphology operations
- fixed alignment related bugs in gpu/nvidia
- Updated doc of flann::hierarchicalClustering (issue #1216)
- Corrected doc of Mat::adjustROI() (issue #1245)
- Fixed a typo
- calcCovarMatrix cupport fot std::vectors of cv::Mat (#494)
- probably fixed linemod crash (thanks to Stefan for the report)
- refactored likelihood computing
- Java Tests: filtered VideoCapture tests
- changed css for search panel
- Refactored videostab module. Added normalization into motion estimators.
- removed unnecessary param
- Added perf test for calcOpticalFlowPyrLK
- Added version detection for OpenNI
- #1782 Threading optimization of OpenNI wrapper is disabled for TBB < 3.0
- Minor doc fix.
- Patch #1789 access to Android camera settings applied.
- Documented error measures used in calcOpticalFlowPyrLK
- Java API: fixing more tests
- Added OPTFLOW_LK_GET_MIN_EIGENVALS flag as alias for CV_LKFLOW_GET_MIN_EIGENVALS.
- Added WITH_CLP flag support into cmake scripts.
- Improved status report for Eigen and Ximea, improved search of PvApi headers/libs
- modified reduce test
- Fixed several warnings on various platforms
- Added more flags for motion estimation in videostab sample
- Attempt to fix windows build failure
- Fixed MSVC warning in Mat::diag
- Fixed couple of MSVC warnings
- fixed Core_Array.expressions test
- excluded dangerously overriden Mat_::reshape() method (ticket #1510)
- extended Sobel & Scharr description (ticket #1555). Added CV_32F/CV_64F format combination in sepFilter2D.
- fixed references in calib3d (including the ticket #1627)
- Java API: fixing more tests
- Java API: fixing more tests
- Corrected fix of flann deprecation warnings
- Added video input perf test
- Fixed/suppressed remaining warnings from the python bindings
- Fixed warnings about unused return value of fscanf, scanf and system
- Fixed warnings about unused return value of fread
- Java API: fixing more tests
- added notice and sample about transparent PNGs support in cv::write (ticket #1438, #1706)
- update search panel for online documentation
- minor correction in fx, fy (elements of camera matrix) description (ticket #1779)
- added missing contrib & legacy chapters to the reference manual; fixed (x, y)->(y, x) ordering in Mat.at (ticket #1726)
- Android toolchain is updated for NDK r7c
- fixed likelihood computing
- fixed likelihood computing
- Removed unnecessary mat.t()
- Andrey, Maria and I fixed Mat::diag()
- Vadim, Maria, Alex, Andrey and I fixed the EM algorithm
- fixed incorrect boundaries in countNonZero test
- Java API: fixing more tests
- Fixed Ant search (Android build)
- remove search tips
- replaced using cv::exp
- update FFMPEG wrapper binaries
- define MIN macro in order to build opencv_ffmpeg*.dll.
- modified likelihood computing
- Minor fixes and updates in videostab module and sample
- fixed kmeans
- workaround for the 'Bug #1784 (cvFloor/cvCeil)'; typos fixed; two more tests for checkRange
- Fixed bug in videostab sample. Fixed model size in global estimators.
- Setting camera parameters on Android 2.2.2 fixed. Old Android does not support continuous-video focus mode.
- avoid use of OpenCV functions (like cvRound) in cap_ffmpeg_impl*.hpp
- Slightly improved cmake status report
- Fixed flann deprecation warnings from flann itself
- Added Android-specific implementation of getNumberOfCPUs
- #1783: test and fix for the bug
- added explicit VideoWriter::release(). Fixed video stream finalization (write remaining frames); Fixed occasional crash in the case of odd-width or odd-height videos; Fixed a few problems in ffmpeg tests. Positioning still does not work well.
- update FFMPEG wrapper binaries
- test commit for Buildbot
- update FFMPEG wrapper binaries
- test commit for Buildbot
- Updated cvconfig.h.cmake
- ffmpeg version info for Windows
- Changes of highgui structure
- updated ffmpeg to 0.10.2
- avoid compile error of opencv_ffmpeg[_64].dll with v2 of FFMPEG wrappers
- turn on CountNonZero test
- update FFMPEG wrapper binaries
- Code style refactoring for ffmpeg wrappers
- update FFMPEG wrapper binaries
- Updated getProperty method in old ffmpeg wrapper
- Minor formatting fix in status report
- Fixed cmake configuration for Android for case when only one SDK target is available #1781
- fixed input array initialization in ArithmMaskUninitialized test (thanks to Alexander!)
- Added more version information to cmake status (FFMPEG, GStreamer, Unicap, Xine, V4L, DC1394)
- updating Eclipse projects settings
- Fixing TBB search and zlib version detection
- Documented a return value in cvOpenFileStorage (issue #215)
- update FFMPEG wrapper binaries
- Fixed ffmpeg encoding error (ticket #1743)
- Added more version information to cmake status (Qt, CUDA, OpenEXR, gcc)
- fixed crashes in videocapture and videowriter on Ubuntu 11.10
- Documented a return value in meanShift() and CamShift() (issue #1678)
- Updated a comment about return value in meanShift and CamShift
- nonfree is optional for Python module now
- Added documentation of old Python parameters in cv.DrawContours() (issue #987)
- Fixed bug in motion stabilization pipeline and updated wobble stabilizer (videostab)
- fixed problem with SURF loading in Python tests
- Java API: fixing tests compatibility with API level 8
- Added version detection for zlib, libjpeg, libjasper, libpng, libtiff
- Documented the Python version of findContours (issue #1697)
- moved to double in EM; fixed bug
- Added a note that cv::pow() doesn't handle NaN and Inf values (#1739)
- Java API: fixing more tests
- Java API: fixing more tests
- Java API: fixing more tests
- Java API: fixing more tests
- Added TBB version detection to CMake
- Autofocus issues on Android ICS fixed. Continuous-video focus mode is set. Performance problems fixed. Shared camera buffer is used.
- Suppressed hundreds of useless MSVC warnings (can be reenabled setting cmake variable ENABLE_NOISY_WARNINGS to ON). Fixed some of remaining warnings.
- Fixed python detection on Windows with both 32bit and 64bit pythons installed.
- removing Java tests for removed classes
- fixing Android build error in Java API
- fixed build with gcc 4.5+ (#1774)
- additional android logging for output gtest xml file
- fixed few warnings
- Fix for #1773
- Java API: Fixed some bugs in the ImgprocTest.java
- Fixed problem with backslashes in embedded build information.
- #1765 Fixed solvePoly for polynomials having coeffs[n] != 1
- added assert
- fixed em log likelihood
- modified EM interface; updated tests & samples
- #645 Added cv::getBuildInformation function (with sample) to get OpenCV build configuration
- Fixed some bugs in the ImgprocTest.java module.
- fixed problem in solvePnPRansac with TBB
- handle single-point sets in kmeans properly
- removed EM from python and java bindings
- Added support of homography motion model into vidostab sample
- Fixed perf tests crash in case of corrupted sanity data; added option to control process of generating new sanity records
- fixed RAND test for float values
- restored resolution in big video writer test
- fixed a few VS2010 warnings in EM
- Java API: changing CvVectorXxx to MatOfXxx
- Java API: changing CvVectorXxx to MatOfXxx
- added cv::EM, moved CvEM to legacy, added/updated tests
- Updated wobble suppression code in videostab module
- fixed crash in I/O tests on Windows by making sure std::vector is non-empty before taking pointer to its elements
- reduced the video size in video writer tests; retained only most popular codecs. added ffmpeg support on MacOSX.
- Fixed [swscaler ...] bad dst image pointers (tickets ##1708, 1755)
- Fixed ugly bug in AlgorithmInfo initialisation order
- Fixed a problem with AVI reading (removed avcodec_context)
- Native camera shared libraries updated after autofocus fix. Libs for Android x86 added.
- Autofocus issue on Android ICS fixed.
- Refactored videostab module. Added MoreAccurateMotionWobbleSuppressor class
- probably, ultimately fixed the problem of empty clusters in kmeans; added test for singular kmeans cases
- Added option to automatically run all accuracy tests with run.py
- Refactored videostab module, added base class for woobble suppression
- Merged the trunk r7844
- Java API: minor bug-fixes and improvements in CvVector-s and tests
- #1732 Added YUV422 conversions
- Improved accuracy of SSE-optimized BayerXX2GRAY conversion; added regression test
- Bug fix in LSH index
- fixing compilation
- fixed #227, added support I420 format
- Java API: fixing Objdetect tests
- Java API: fixing Highgui and Video tests
- Java API: fixing Calib3d tests
- Java API: fixing Core tests; minor enchantments in CvVector-s API
- Added motion stabilization pipeline (videostab module)
- Fix for #1730
- Fixed bug in reading zero-size Mat from FileStorage
- Added test for reading empty Mat from FileStorage
- Java API: changing C++ vector<T> handling; Java tests fixes are expected shortly
- make Mat::Mat(CvMat* m) return empty matrix when m is NULL; added utility Mat::initEmpty() method to replace duplicated matrix initializations in different constructors
- added notice about the changed behavior of copyMakeBorder in the case of ROI (ticket #1756)
- fixed EM sample
- Added asserts into global motion estimation functions (videostab module)
- Added support of homography estimation into videostab module
- support in-place warpAffine, warpPerspective & remap (feature #1150)
- added test for ticket #1719 and added a note about contour self-intersections to the docs
- Updated performance tests sanity data; fixed some tests
- restore support of vector<float> as possible output descriptor container in SURF::operator().
- Fixed some bugs in videostab module and refactored it
- Removed unneded dependency between objdetect and calib3d
- Merged the trunk r7794
- added initModule_features2d(). Possibly solved problem when the linker excludes seemingly unused detectors/descriptors.
- restored try-catch in the i/o test
- fixed a few bugs in XML/YAML input/output.
- fixed Algorithm
- merged revisions r7808 from 2.4 branch
- updated gpu docs
- 36 functions of cvtScaleTIPES_func were Neon Optimized
- merged revisions r7802,r7804,r7805 from 2.4 branch
- fixed #1572
- fixed bug in document theme
- added Algorithm::get/set/addParam(vector<Mat>) (to be used by EM)
- fixed document style for deprecated interfaces added logo to the online docs moved quick-search panel added logo with white sign
- Updated videostab module
- fixed gpu::Laplacian fixed gpu performance sample
- Issue 1119 Build for x86. Build script added. Tests are ok.
- Refactored videostab module and sample
- minor fix of gpu performance sample
- fixed gpu performance sample (SURF usage) added tests for filter2D
- fixeg gpu::Laplacian
- Fixed Java API build
- changed version to 2.4
- fixed gpu::filter2D
- Fixed gcc build
- fixed #1257 ( HaarCascadeApplication GPU test crash )
- Fixed conversions from YV12 and IYUV on non-continuous input. Added accuracy and performance tests.
- fixed bug #1367 in CSBP
- minor
- added explicit () to avoid MSVC /analyze warning
- Fixed typo.
- added optional dependency stitching->nonfree. When nonfree is available, make sure linker does not throw it away.
- Fixed compilation error with ffmpeg 0.9.x & 0.10.x
- applied patch #1734
- #1732 Added yuv420p to RGB conversion. Thanks to Robert Abel.
- update FFMPEG wrapper binaries
- Removed duplicated includes from ffmpeg wrappers
- Solved a problem with VideoWriter in the new wrapper
- Fixed compilation error under Ubuntu 11.10; added #if-#else-#endif code for some deprecated functions
- Fixed build error in Android examples when java bindings are excluded from build.
- Fixed ~20 potential errors identified by the MS complier.
- fixed video capturing on Mac running Windows (ticket #988)
- another fix for cap_dshow.cpp; fixed warning in facerec_demo
- Updated displayOverlay's implementation & documentation (ticket #903)
- Fixed Windows build (MSVC 10 Win32) internal CV_CAP_PROP_ZOOM is renamed to CV_CAP_PROP_ZOOM_DSHOW internal CV_CAP_PROP_FOCUS is renamed to CV_CAP_PROP_FOCUS_DSHOW
- applied big patch #1281 by Martin Beckett (various direct show video capture enhancements)
- added borderType to pyrDown, pyrUp & buildPyramid (patch #925)
- Updated new ffmpeg wrapper
- Fixed build with tests disabled
- Fixed Android build warnings
- fix the ticket #1234
- update FFMPEG wrapper binaries
- Fixed a problem with CODEC_ID_RAWVIDEO in FFMPEG (ticket #1400)
- #796, #1701 fixing doc vs code arg-s naming consistency
- added video stream positioning in QTKit-based VideoCapture backend (patch #1420)
- Fixed gcc build after r7751
- possible fix for #1396
- removed obsolete docs about cuda contexts
- fixed building delaunay.c with MSVC
- Fixed the path to the testdata.
- Fixed the path to the testdata.
- a LOT of obsolete stuff has been moved to the legacy module.
- Fixed several false-positive warnings in rst_parser.py. (Now it detects 553 undocumented parameters for #1205.)
- Fixed default arg value in videostab sample
- Added linear similarity estimation into videostab module
- Applied patch from #1133
- #1532 Debug version of python bindings is excluded from install
- added description of cv::convexityDefect
- added cv::convexityDefects (ticket #796)
- Partial fix of a cameraCalibration() test
- Added termination criteria as a calibrateCamera() parameter
- fixed HOGDescriptor::detect and HOGDescriptor::detectMultiScale signatures (ticket #1304)
- rewritten floodfill in generic style; added CV_32S flavor (ticket #1482)
- Fixed error with color space switching for IEEE1394 cameras (patch #766)
- updating screen resolutions support settings
- fixing a typo
- fixed #1421
- Added documentation of correctMaches (#1350)
- Added a test for correctMatches (#1350)
- Added wrappers of cvCorrectMatches (#1350)
- fixed line clipping (ticket #1284)
- Fixed segfault problem with cap_unicap (ticket #1112)
- fixed bug #1318. extended RNG::fill with the optional saturateRange parameter
- Updated close method for ieee1394 cameras
- Added documentation of triangulatePoints()
- #1349 tbb::mutex is moved to outer scope to be sure that its initialization is completed before the parallel loop
- switched back to FitEllipse algorithm by Dr. Daniel Weiss; improved its accuracy in some cases. It fixes #1638
- Added a test for the C++ wrapper of cvTriangulatePoints()
- Added wrappers of cvTriangulatePoints()
- added smoke test on EM, fixed EM reading #1570 (thanks to mr.pppoe),
- #1205 fixed more bugs/typos in parameters
- fixed em test
- #1205 fixed ~100 of ~700 parameters
- Fix for issue #1201 Updated. Focus mode auto was replaced on continuous-video. Libraries were rebuilt.
- Added regression test for #1652
- Implemented missed AlgorithmInfo for BRIEF
- Fixed 2 spontaneously failing tests
- fixed #1373
- #1695 fixed arrow key events with the Qt backend
- test case from ticket #1650
- minor refactoring
- #1365 Fixed numerous bugs in Bayer2RGB_VNG_8u SSE optimization, added simple regression test
- fixed bug for #1496 and correctness tests for function CheckRange
- Fixed the error message in cvCorrectMatches (fixes #1155)
- changed icvSetVideoSize function (ticket #1067)
- fixed cvKMeans2 (#1359)
- fix for #1724: making Java samples compatible with Android 3.1+ targets
- Updated saving paths for highgui tests
- added Vec Matx::solve(Vec) (ticket #1376)
- fixed #1616
- fixed iter index in kmeans
- avoid empty clusters in k-means in a more elegant way (relates to ticket #7698)
- save, load & copy HOGDescriptor::nlevels (ticket #1533)
- fixed bug #1640
- Fixed bugs in gpu border extrapolation aux. classes (BORDER_REFLECT case)
- Minor refactoring of video i/o tests: fixed error with indexes
- #1537 removed suspicious lines clearing optimization flags
- Changed saving paths for another highgui tests
- #1508 prefer architecture-specific install directory for python bindings, when LIB_SUFFIX is used
- fixed cvComputeCorrespondEpilines to handle <5 points (ticket #1635)
- Modified the test of findChessboardCorners to check examples when there are no chessboards
- restored the ordering of SURF constructor parameters (ticket #1704)
- added support of 3-channels output to gpu::reprojectImageTo3D minor refactoring of gpu tests
- Updated ffmpeg test for big video writing (changed saving paths + added removing files)
- Fixed the test of findChessboardCorners (it didn't test accuracy before)
- Updated test_video_pos.cpp
- #1416 added option to install OpenCVConfig.cmake i arch-dependent lo
- fixed writing huge matrices (ticket #1439)
- reverted revision 7676 (#1725)
- added doc on DenseFeatureDetector (#1311)
- fixed mask operations with uninitialized output array, added the corresponding test (ticket #1286)
- #1713 Added the possibility of setting user_block_size manually for gpu::matchTemplate function (and gpu::convolve). Added a buffer param into these functions. Removed using of 2^n block sizes when it's not necessary.
- moved gpu cvtColor tests to separate file added more tests for gpu cvtColor fixed RGB->YUV conversion
- working on python wrappers for stitching
- gpu.hpp:filterSpeckles conflicts with calib3d.hpp -- should it be removed at all?
- Fixed MSCV2005 build with TBB enabled.
- #842 #include <sys/mman.h> is moved from public headers closer to usage
- Fixed Android tests and samples status in cmake report; restored java tests "coverage calculation".
- Fixed Windows build
- Made dependency of opencv_objdetect from opencv_highgui optional.
- Added a check that Q reprojects to the same 3D points as reconstructed by triangulation (#1575)
- Added a check that Tx after rectification is equal to distance between cameras
- Reworked build scripts for Android Java API, tests and examples
- Fixed wrong computation of a reprojection matrix Q in stereoRectify (#898)
- Added a check that Q (computed by rectification) reprojects a point before the camera
- added special notice about the missing saturation in 32s case (ticket #1529)
- fixed a few compile problems in SparseMat code; fixed iteration over an empty sparse matrix (ticket #1587)
- added test case of matching the same descriptors
- improved description of RTreeParams (ticket #1656; thanks to Nghia Ho)
- probably fixed multi-threaded capturing from DShow cameras (ticket #1470)
- minor modification of gpu video tests disabled NVidia Visualization test, it's functionality (draw rectangles) doesn't used in gpu module
- added houghcircles sample, improved circle detection (ticket #951)
- added more assertion on device features to gpu functions and tests moved TargerArchs and DeviceInfo to core fixed bug in GpuMat::copy with mask (incorrect index in function tab)
- added DIST_LABEL_PIXEL labelType to distanceTransform, ticket #1641 (thanks to Mikhail Matrosov for the patch)
- changed default parameter
- added image and depth synchronization
- added assertion on device features (global atomics) into gpu tests
- Fixed Android build warnings
- fixed #1502
- fixed octave computation in SURF_GPU used random images in gpu filter tests
- added another contour perimeter test and fixed bug #216
- fixed gpu core tests (added additional check for device's feature support) added assertion on double types for old devices
- update FFMPEG wrapper binaries
- Removed duplicated ifdef code from ffmpeg wrappers
- improved convergence of minEnclosingCircle algorithm, patch #947 (thanks to Hannes Sommer)
- got rid of "long double" in OpenCV; ticket #1515
- split big assertion in cv::split by parts; patch #829 by Shlomi Fish
- Fixed #1711
- Added checking whether aspect ratio is valid or not
- Added cvPyrUp signature to the documentation #1670
- Fixed compilation error for ffmpeg tests
- Added projectPoints() for 3xN objectPoints and 2xN imagePoints (#1550)
- Added points comparison in test_remap
- fixed gpu arithm functions (mismatch with cpu version)
- Restored and improved the test_remap Python test
- removed unnecessary MIN(); bug #1578
- fixed potential buffer size overflow in Boost::update_weight, bug #1524 (thanks to benlemna for the patch)
- fixed "Invalid background description file" bug, #1676
- possibly fixed bug #1453
- fixed the size of output velocity map in OptFlowBM, ticket #1362 (thanks to Takanori Y for the patch)
- Fixed gpu::matchTemplate for correct handling of big templates. Added tests
- fixed nearest-neighbor remap with constant border, ticket #1681 (thanks to Vlad for the patch)
- fixed chi-square test, ticket #1263
- Input/Output arrays are updated to support fixed-type and fixed-size semantic for all compatible types
- applied patch from #1655 (thanks to Changbo Zhou!)
- applied patch from #1712 (thanks to Vlad)
- fixed Debug compilation on Windows (it works for VS versions > 2005)
- fixed build errors & warnings on VS2010
- Refactored Java wrapper build scripts. Improved Android SDK search, fixed some bugs.
- added face recognition algorithms, LDA, colormaps (all by Philipp Wagner)
- preliminary version of a multi-level findcontours
- preliminary version of a multi-level findcontours
- Added "fat" mode for Java wrapper
- Updated new video positioning test
- Java API minor fixes
- Made small change which fixes the situation, when ORB does not find any descriptors on an image. Earlier ORB::operator() crashed in this case, since rowRange method was called for an empty matrix.
- Update FFMPEG wrapper binaries
- update FFMPEG wrapper binaries
- fixed wrapper compilation on Windows (opencv_ffmpeg dlls)
- Added new video posiitioning test
- Fixed ifdef code mistake
- Fixed compilation error under Windows
- Updated ffmpeg test for big video writing
- Separated ffmpeg codecs and wrappers
- added test for gpu::Laplacian for CV_32FC1 type changed epsilon for matrix comparison in gpu::sqrt test
- unrolled changes from r7601 (problems with Android,...)
- fixing copy/paste typo
- Removed OS conditions from highgui tests
- Added load and save motion args into videostab sample
- Fixed build
- Split stabilizer into OnePassStabilizer and TwoPassStabilizer
- updating Java samples to meet Java API changes
- More Tegra versions of convertTo
- Updated new ffmpeg wrapper; restored NEW_FFMPEG in the root cmake file
- Fixed perf test for convertTo
- #921 less signatures for func-s with default arg val-s (aka smart overloads); moving inpaintTest() to 'photo'; hiding 'Point*' arg in Java signature of Core.checkRange().
- fixing arg name according to ref man
- removed debug log
- fixed gpu::filter2D border interpolation for CV_32FC1 type added additional tests for gpu filters fixed gpu features2D tests
- added oni-files reading
- Updated new ffmpeg wrapper
- fixed #1436
- removed unnecessary members of CvCapture_OpenNI
- fixed documentation compilation errors after r7568
- Refactored videostab module
- switched to use RunXmlScript always (missing '\n' at the end of xml script was a problem)
- Fixed warning
- Added distance threshold argument into videostab sample
- Updated FMM run() signature
- Fixed some warnings
- Issue #1201: auto-focus problem was fixed. Binaries were rebuilt.
- import as cv not cv2. Fixed
- Updated license text in highgui files
- added default values of parameters
- increased the default number of pyramid layers in ORB; updated test data
- Fixed some warnings
- Added more inpainting methods. Fixed some errors.
- Removed unrequired type conversions in the function clipLine.
- refactored and fixed some gpu tests fixed some bugs in gpu module
- Made the function "clipLine" to work with int64 values instead of int --- otherwise sometimes it returned wrong points coordinates, and it caused the function "line" to crash.
- fixed bug #1571
- fixing compilation on Windows
- Refactored new ffmpeg wrapper
- fixed bug #1479
- Added quiet mode into videostab sample
- Fixed ensureInclusionConstraint
- Minor changes in videostab sample
- Updated videostab sample
- Fixed Windows build of videostab module.
- Solution folders are turned on by default for MS Visual Studio IDE.
- fixed bug #1700
- Fixed Android build of new videostab module
- fixed several bugs in gpu arithm functions refactored tests for them
- Added licence message
- Added missed file
- Added missed file
- Added first version of videostab module
- fixed sample for new signature of calcOpticalFlowPyrLK
- Fixed Android build warnings in logpolar_bsm
- added Manuela Chessa as the co-author of logpolar_bsm.
- Fixed bug #1693. Also corrected default parameters for stitching.
- Fixed bug #1629
- fixed some more GCC warnings
- Tegra optimized functions cvt32finttype were temporary deleted due correctness bug
- fixed gpu::pyrUp (now it matches cpu analog) fixed several warnings
- Fixed compiling error for ffmpeg with libavcodec less than 53.4.0
- fixing compilation on Windows (M_PI was undefined via math.h)
- Added cv.DestroyAllWindows() to file close
- added destroyAllWindows at end
- added destroy all windows
- added destroy all windows
- added LogPolar Blind Spot Model (thanks to Fabio Solari for the contribution)
- Fixed bug #1634
- Fixed bug #1654
- Fixed bug #1663
- Fixed bug #1666
- Fixed build without CUDA
- fixed build in gpu module (SURF and ORB)
- 30 functions of cvtTIPES_func were Neon Optimized
- fixed StereoBM crash on MacOSX 10.7
- switched to non-constant references in Algorithm::addParam, which is more safe.
- fixed many warnings from GCC 4.6.1
- fixed hundreds of warnings from MSVC 2010.
- moving the rest of inpaint() to the 'photo' module, temporary disabling Java test for it, adding 'photo' to Java API
- allocate CPU memory if Tegra GPU allocator failed.
- renamed property of openni camera
- fixed #1643
- CMake status report: list unsatisfied dependencies for automatically disabled modules; fixed few problems with Windows-style paths
- renamed property of openni camera
- update FFMPEG wrapper binaries
- minor changes in wrapper 5
- update FFMPEG wrapper binaries
- minor changes in wrapper 4
- minor changes in wrapper 3
- temporarily turned off the new wrapper.
- minor refactoring CvCapture_OpenNI
- minor changes in wrapper 2
- fixed build on VS2010
- minor changes in wrapper
- minor changes in wrapper
- updating func-s arg names according to ref. man.
- minor changes in wrapper
- Fixed Linux build with OpenGL but without CUDA
- update FFMPEG wrapper binaries
- lot's of changes; nonfree & photo modules added; SIFT & SURF -> nonfree module; Inpainting -> photo; refactored features2d (ORB is still failing tests), optimized brute-force matcher and made it non-template.
- update FFMPEG wrapper binaries
- update FFMPEG wrapper
- minor refactoring CvCapture_OpenNI::CvCapture_OpenNI
- Fixed compiling error under Ubuntu with ffmpeg 0.7.x and advised under Windows
- Added protection from modules redefinition and globbing recursion
- Java API: adding C++ classes inheritance support
- run.py: added option to show tests own help
- fixed compilation FFMPEG wrapper on Windows
- remove some unneeded imports
- added     cv2.destroyAllWindows()
- Examples of using histograms in python
- added 0xFF & in front of every waitKey so that it works on linux
- refactored and fixed bugs in gpu warp functions (remap, resize, warpAffine, warpPerspective) wrote more complicated tests for them implemented own version of warpAffine and warpPerspective for different border interpolation types refactored some gpu tests
- Added some new warpers.
- minor change
- (#1636) Java API: adding undistortPoints() support and smoke test; minor improvements in Java stuff
- Android: removed unneeded workaround for library output path initialization.
- added ability to pass initial transformation to rgbd odometry
- Made dependency of features2d and calib3d from highgui optional
- fixed #1554
- modified documentation about using OpenNI wrapper #1657
- Restored findCirclesGridDefault() for backward compatibility
- Added a first version of new ffmpeg wrapper
- fixed angle check in squares.py (thanks to Abid Rahman)
- Fixed bugs in Android cmake toolchain; added experimantal assembler support to the toolchain
- added support of Asus XtionPRO (thanks to Gustav Karlsson for his patches) #1657
- Added a full Python wrapper of findCirclesGrid
- Wraped SimpleBlobDetector for Python
- Tegra version of cv::detail::
- added special cases to RGBDOdometry (translation only, rotation only)
- fixed compilation on Windows (NAN)
- #1672 updated some more links
- #1672 updated docs links in tutorials
- Fixed broken headers install layout
- Tegra version of cv::detail::createLaplacePyr
- #1672 updated links in cheatsheet renamed directory for Mat tutorial changed links from willow docs to opencv.itseez.com, from Trac to current Redmine
- Tegra version of cv::subtract
- Java API: temp workaround for Java tests compilation, a better fix will be done with inheritance support
- Functions cvt8u16s_func, cvt32s16s_func, cvt32f16s_func were Neon Optimized
- fixed compilation with eigen2
- Fixed Android build warning
- fixed compilation with eigen2
- initial version of rgbd odometry with sample
- fixed module name for mingw compiler under Windows
- fixed python GIL reacquire in case of exception
- fixed stitching compilation
- Minor fix in blender mask conversion.
- fixed bug in gpu::pyrUp implementation
- Stitching: added CV_16S weights support to the multiband blender
- minor fix in gpu docs (filter2D and convolve)
- fixed error calculation in gpu::PyrLKOpticalFlow (Bug #1651)
- fixed patch diff calculation in the end of calcopticalflowpyrlk (thanks to Vlad Vinogradov for the patch)
- fixed bug in gpu::pyrDown
- using RAII to manage GIL -- still fails to handle exceptions correctly
- Added GIL-release code into python wrappers Added gabor_threads.py sample
- updated image for StereoConstantSpaceBP regression test updated gpu tests for CornerHarris and CornerMinEigen moved direct convolution implementation to gpu::filter2D, gpu::convolve now use only DFT-based algorithm (Bug #1639)
- Java API: replacing some manual port with auto-generated stuff (/Map-type classes)
- fixed distrans.py sample (distanceTransform -> distanceTransformWithLabels)
- temporary disabled optimized version of CascadeClassifier (bug #1640) fixed HaarCascadeLoader test (incorrect behavior due to macros usage)
- fixed #1507
- added patch error calculation to gpu::PyrLKOpticalFlow
- modified readme.txt (#1609)
- fixed #1477
- fixed #1466
- Android: fixed cmake try_compile() for case of STL features detection
- Fixed Android cross-compiling problems: - missing install_name_tool on OS X - incorrectly working try_compile() command
- cmake scripts are updated to prefer includes from the OpenCV source tree
- Updated rst configuration to read OpenCV version from sources; fixed several sphinx' warnings
- fixed #1289
- updated repository path in gpu/introduction (ticket #1260)
- added usage on how to actually run video_dmtx.cpp
- fixed #1618
- #fixed 1644
- fixed #1645
- Disabled BUILD_WITH_DEBUG_INFO flag for MSCV. Now debug info is included in debug configuration
- applied patch from #1637 for fixing problems with Intel(tm) compiler
- More accurate cmake flags sets/unsets for 3rdparty libs
- updated libpng: from 1.4.3 to 1.5.9 #1609
- Added opencv_tests and opencv_perf_tests targets to simplify building tests only
- Fixed some build warnings; slightly improved python search
- Fixed HAVE_UNISTD_H redefinition warning
- minor cmake update
- Fixing windows build of libtiff
- More flexible tiff library configuration
- Fixed docs for gpu::convolve()
- copied a section with explanation of different border types
- fixed required CUDA version in OpenCVDetectCUDA.cmake
- updated libtiff: from 3.9.5 to 4.0.1 #1609
- improved type dispatching in gpu arithm functions
- fixin a bug in conversion Mat -> List<List<E>>
- Fixed tbb hang in Android apps
- fixed compilation problems with MinGW after rev7353
- Updated a perftest for convertTo
- Changed the class OrbFeaturesFinder to make it work with CV_8UC4 and CV_8UC1 images.
- Updated positioning test (removed frame reading)
- reused buffer in GlTexture::copyFrom(GpuMat)
- Minor improvement for Android TBB
- fixed warnings in linemod on Windows
- added exports to the LineMod classes fixed compilation linemod sample on Windows
- Fixed Android build warning
- Removed a finished todo
- #1568 support of building with OpenEXR on Windows
- Slightly improved build of TBB for Android
- Sample program to train and detect objects using LINE-MOD.
- No longer expose internal LINE-MOD methods like response map computation, linearizing similarities, etc in public header.
- Initial commit of LINE-MOD source code to objdetect module.
- Fixed compiler flags for 3rdparty libs.
- Scripts for building TBB for Android
- Refactored cmake for 3rdparty libs
- Added PlanePortraitWarper class.
- Restored missed }
- Fixed syntax error in cap_dc1394_v2.cpp
- Modified zlib search. Use system zlib on Android by default
- Added new VideoCapture properties for ieee1394 cameras
- Windows build scripts for Android are updated for SDK r14 and newer
- Fixed try_compile for Android; Fixed samples build
- Java samples updated to be compatible with both old (2.2+) and new (3.0+) Android versions
- Check for SSSE3 in core/internal.hpp. Define CV_SSSE3, and if enabled include tmmintrin.h.
- Fixed problem with backslashes in cmake status report
- Minor code changes in test_video_io.cpp
- Suppressed MSVC warnings in zlib
- Added conditional compiling for video i/o tests in highgui.
- #1609 zlib is updated to 1.2.6
- Added spherical and cylindrical warpers, which work in the portrait mode -- when poles are located NOT at (0, -1, 0) and (0, 1, 0) points, BUT at (1, 0, 0) and (-1, 0, 0) points.
- Architecture dependent library path on unix
- Small refactoring of OpenCV cmake options
- Added cvShowImage working with handles under Windows.
- fixed #924
- fixed #1615
- fixed compilation error under linux
- created wrappers for new NPP functions removed void integral(const GpuMat& src, GpuMat& sum, GpuMat& sqsum, Stream& stream) - it fails with NPP_NOT_IMPLEMENTED error updated docs, accuracy and performance tests
- Fixed #1613: removed YUV420i color conversion constants
- Eliminated all compiler warnings on Android
- Information about cmake and build platform is added to the status report
- CV_USE_UNROLLED for imgproc
- Fixed Canny
- fixed #1614
- Added more default search locations for Android NDK and SDK
- Fixing ffmpeg dll copying on Windows
- Fixing ffmpeg dll copying on Windows
- Fixed problem with Android native camera helper libraries
- More granular build of Java API: it is now possible to build Java wrappers only for the subset of OpenCV modules
- fixed #1339
- Added Farneback's optical flow sample
- Fixed #1608
- Refactored OpenCVConfig.cmake generation code.
- Updated ffmpeg implementation (setProperty & getProperty methods)
- Fixed #1443
- updating inaccurate test (Mat step can be more than width)
- minor changes in chessboard.py sample #1492
- fixed #1492
- fixed #1363
- Minor refactoring of the GPU perf. sample
- fixed #1604
- Fixes: Android NDK r7b, android build warnings, build with Visual Studio 2005.
- fix a potential crash when there are no keypoints
- Updated the GPU performance sample
- Added docs for gpu::FarnebackOpticalFlow
- Fixed a compile-time error
- Minor fix -- renamed a variable
- Minor refactoring
- Added a perf. test for gpu::FarnebackOpticalFlow
- Fixed some typos
- Added missing files
- Added the GPU version of the Farneback's optical flow
- added StereoVar description (by Sergey Kosov)
- added color canny; improved Algorithm class implementation
- fixed a few problems detected by Xcode 4.2.1
- fixed compilation for old compute capabilities
- fixed compilation error
- removed highgui video tests execution on macos; also minor code changes
- fixed and updated gpu implementation of separable liner filters now it supports kernel's size up to 32
- Created a perftest for convertTo, updated perftests for arithmetical operations
- #1283, adding JavaDoc comments for Mat <->Bitmap converters.
- #1283, Mat <->Bitmap converters Java tests.
- moved finding CUDA_npp_LIBRARY to OpenCVDetectCUDA.cmake
- #1283, Mat <->Bitmap converters are updated to support CV_8UC(1,3,4) & non-continuous Mat-s and RGBA_8888 & RGB_565 Bitmaps; Android samples project files are updated according to the latest SDK req-s.
- added docs for GoodFeaturesToTrackDetector_GPU and PyrLKOpticalFlow
- minor fix : doesn't save outliers
- fixed compile error
- fixed orb bug commited by mistake
- fixed ~200 warnings for windows minor build system changes (now cuda code in opencv_core is compiled using CUDA_ARCH* cmake variables)
- minor
- fixed build under linux added PyrLKOpticalFlowDense performance test
- added GoodFeaturesToTrackDetector_GPU and PyrLKOpticalFlow to gpu module
- fixed compiling error under Windows; updated test_video_io.cpp
- updated 3 highgui tests
- Adding python example of mouse interaction and use of correlation on an image
- 
- added get methods for retina outputs
- fixed compile under linux
- CV_ENABLE_UNROLLED
- Fixed incorrectly merged patch.
- Applied the patch, received from akamaev. Also made some changes in CMake files to fix Android camera issue.
- fixed #927 issue
- added licenses to some tests; updated new highgui tests
- fixed #927 issue
- updated performance sample
- fixed OpenCVConfig.cmake for creating Xcode projects
- fixed createOpticalFlowNeedleMap
- Bug fix
- updated positioning test for videos
- Fixed mingw build
- fixed #1549 issue
- Fixed typo
- Fixed build for desktop
- removed ASSERT_NO_THROW
- Better variant of OpenCVConfig.cmake generation; several smaller changes in the options section and Android build scripts
- fixed bug after const removing in retina
- fixed #1565 issue
- fixed #1590
- fixed issue #1243
- added one more test for undistort
- fixed OpenCVDetectTBB.cmake (WIN32 x86 VS library path)
- added getGaborKernel function
- fixed compile under linux
- Fixed ticket #1580
- completed tests checking positioning & frame count for videos (C interface); added new test videos
- File with positioning test was renamed to test_positioning.cpp
- Fixing #1580
- Attempt to fix #1580 - building OpenCV with ffmpeg not in LD_LIBRARY_PATH
- Fixed OpenCVConfig.cmake generated for build directory
- Fixing build with CUDA enabled
- Fixing build with CUDA enabled
- Fixing build on Windows
- Fixing build with CUDA enabled
- Fixing build with CUDA enabled
- Fixing build with Eigen enabled
- Global CMake reorganization:  [~] Automatically tracked dependencies between modules  [+] Support for optional module dependencies  [+] Options to choose modules to build  [~] Removed hardcoded modules lists from OpenCVConfig.cmake, opencv.pc and OpenCV.mk  [+] Added COMPONENTS support for FIND_PACKAGE(OpenCV)  [~] haartraining and traincascade are moved outside of modules folder since they aren't the modules
- Fixed the building process for (ubuntu 64bit debug cuda4.1) configuration
- Fixed the multi-band blending test
- fixed compile error
- Prepared some videos for future tests. Added first version of common positioning video test.
- fixed a few bugs in mat-mask-operations tutorial (thanks to Shiqi Yu)
- Updated the multi-band blending test
- highgui headers were not being installed...
- fixed build under CUDA 4.1
- Added a test for the multi-band blender
- added access methods to retreive retina input and output buffers sizes
- fixed bug in SURF_GPU
- added gpu::printCudaDeviceInfo to all samples
- Updated the stitching module docs
- Updated the stitching module docs
- fixed bug #1422 (thanks to jondo for the patch)
- Updated the stitching pipeline image
- fixed bug #1415
- fixed bug #1566
- fixed gpu::device::transform with non-aligned sources (Ticket #1567)
- Updated the stitching module docs
- fixed potential bug in cv::eigen()
- Updated the stitching module docs
- disabled unnecessary code (it can't be compiled with VS 2008 Ticket #1561)
- Updated the stitching module docs
- Updated the stitching module docs
- Updated the stitching module docs
- fixed of the ticket #1442
- fixing Java test compilation after API change (distanceTransform() -> distanceTransformWithLabels())
- fixed memory leak in cap_libv4l.cpp (ticket #1518; thanks to gorgen for the patch)
- fixed a bug which caused incorrect work of function eigen()
- fixed CUDA compilation
- some design code changes in new tests
- Updating opencv module definition in cmake (continued)
- added tests on cv.CreateImage() (thanks to mythsmith).
- adjust the header parser to support "public virtual" construction and make a tweak for multiple inheritance, fix potential memory problem with Python's IplImage.tostring() method (ticket #1486)
- Updating opencv module definition in cmake (continued)
- fixed bug #1552
- fixed bug #1531. added separate distanceTransformWithLabels function that returns labels, since normally the labels are not needed.
- Attempt to fix build on Mac OS X
- Updating opencv module definition in cmake (continued)
- Optimized version of adaptiveThreshold added
- added additional error check
- minor fix
- added the abstract cv::Algorithm class; low-level exp & fastAtan etc. functions for more efficient SIFT implementation; fixed bug #1521
- Updating opencv module definition in cmake
- Made changes in the stitching log macros: now the function stitchingLogLevel() may be used to make the stitching classes more/less verbose.
- Fixed compiler flags caching in cmake
- gramma
- Alternative xml naming for performance logs
- Fixed build without SSE
- applied patch by Will Lucas; improved separable filter performance (in particular cv::GaussianBlur) on 16s images (for [much] faster SIFT)
- Tegra optimization for image filtering
- Corrected perf tests: merge, split.
- fixed bug in gpu::Canny
- added support of BORDER_REFLECT to gpu::cornerHarris and gpu::cornerMinEigenVal
- Added exhaustive perf test for cvtColor instead of several small tests
- fixed bug in gpu::transformSmart with mask
- completed test for boundingRect function
- A number of improvements in android cmake toolchain
- Created perf tests for cvtColor_toBGR565, cvtColor_C3toC4_and_back, split, merge.
- Updated the stitching module docs
- Updated the stitching module docs
- Several updates of code in countNonZero test
- Completed countNonZero test (found that it's already exist, so new implementation isn't used now).
- Updated the stitching module docs
- account test
- Updated the stitching modudle docs
- Tegra optimization for split, merge and some color conversions
- Updated the stitching module docs
- Updated the stitching module docs
- fixing compilation; but some code lines look weird, e.g. "n += abs(sign(value))"  or  "n += sign(cv::norm(value) > eps_64"
- countNonZero & boundingRect tests - added first versions
- First version of native camera support for Android 3.x.x and 4.0.x
- Added the first version of the stitching module docs
- fix OpenGL render functions fix createOpticalFlowNeedleMap
- added checking homography matrix computing for vector <Point2f>
- Completed findHomography test (source data has type CV_32FC2). In plans add the same checking for vector <Point2f>.
- Refactored YUV420 to RGB/BGR/RGBA/BGRA conversion
- added performance test for createOpticalFlowNeedleMap
- Created perf tests for cornerHarris, cornerEigenValsAndVecs, goodFeaturesToTrack, adaptiveThreshold, HoughLines.
- minor
- minor fix
- fixed gpu docs
- updated optical_flow samples
- More natural sorting of MatType constants in performance reports.
- Fixed small bug in summary.py
- corrected retina internal buffers copy methods
- fixed Tegra stubs in cvtColor
- fixing compilation on Android
- fixing compilation on Windows (std::tr1::tie() is undefined), removing warnings (conversion int to float/double)
- Tegra optimization for warpPerspective() and 2 new perf tests
- Fixed Tegra optimization stub for gaussian
- updated gpu optical_flow sample
- minor refactoring of gpu performance sample
- added docs for FAST_GPU and ORB_GPU
- fixed gpu::resize
- minor fix
- modified documentation of solvePnP and solvePnPRansac
- fixed bug with submatrix in some gpu functions update gpu tests
- eigen tests for 1*1 matrix were temporarily removed from common list
- Fixing ticket #1539
- Added perf test for RGB(A)/BGR(A) to YCrCb conversion
- Added test group separators to the html version of performance report.
- Fixed modules order in OpenCV.mk.in
- fixed compilation error on Win
- Tegra optimization for some color conversion and warpAffine calls
- done user requirement from yvonnic2m@gmail.com
- Added threaded versions (enabled only for Tegra at the moment) of threshold, erode/dilate. Slighlty restructured the code of medianBlur.
- Fixed bug in summary.py
- Fixed files picking code to preserve the order in summary.py script.
- Tegra optimization for median blur
- Tegra optimization for GaussianBlur
- Complex eigen test was modified. Fixed some bugs with checking for CV_64FC1 type. Added eigen tests for 1*1 source matrix.
- Started top-level CMakeLists.txt file reorganization: cmake scripts are moved to separate folder; refactored BUILD_*, INSTALL_*, ENABLE_*, USE_*, WITH_* options.
- doc typo fixed
- Fixed dot product test
- Refactored performance tests. TEST_CYCLE macro is renamed to TEST_CYCLE_N; SIMPLE_TEST_CYCLE is renamed to TEST_CYCLE; from now 100 iterations are default for performance tests
- added copyright notice for MOG2 algorithm by Z. Zivkovic
- Added perf test for INTER_AREA resize
- Optimized version of DotProd8u added
- Optimized version of sqsum8u added
- Perf testing: added ERROR_RELATIVE mode to SANITY_CHECK
- adjusting custom mat allocator when mat type is changed
- added perf test for dot product (8U, 32S, 32F)
- update gpu perf tests
- bug fix
- Fixed build for x64 with sse2 disabled; several improvements in performance testing framework; enabled SANITY_CHECK() for performance tests
- fixed SSE-optimized cmp_8u (ticket #1530)
- implemented invert(A, B, DECOMP_EIG)
- Added missed macro
- Refactored Tegra related macro usage
- fixed build under linux
- added FAST_GPU and ORB_GPU classes
- Fixed typo in android toolchain
- added documentation for gpu::BroxOpticalFlow, updated other docs
- added ImagePyramid class to gpu module
- fixed compilation error
- Added perf tests for blur, medianBlur, GaussianBlur
- added skipped file
- added P3P method added test for solvePnP changed test for solvePnPRansac fixed bug with mutex solvePnPRansac
- Added small debug insertion.
- Added perf tests for cv::compare
- Fixed border interpolation problem in filter2D
- fixed bag in the checking size of matrix and vector for eigen test; all eigen test execution was checked: it works correctly; added first version of homography test for C++ interface
- Added perf test for cv::threshold
- Added performance test for cv::dilate
- added example of vec-file
- added example of vec-file
- Refactored Tegra related macro usage
- fixed traincascade for ordered features
- Updated motions estimators in the stitching module to be able to set camera intrinsics manually
- Optimized version of ReduceR functions and one ReduceC function added Attention! Optimized ReduceC function produced the bug
- Fixed some errors in test data for eigen. Added test using lowindex & highindex in eigen function.
- Fixed ORB and SURF regression tests
- Fixed FAST feature detector Java tests
- Fixed 2 more tests for Java API
- Fixed failed Java API tests for core module
- Fixed bug with submatrix in device::transform
- first version of Eigen test for C++ interface
- fixed compilation errors in epnp with gcc
- first version of ePnP code
- Fixed highgui tests for Android
- Removed unrequired dependency to the header "cvconfig.h".
- fixed Python description of estimateAffine3D function
- Fixed cv::norm accuracy test allowed error
- fixed parallel build under Windows
- Added multiple connected Android devices support to the run.py script
- added experimental feature for parallel build solution under Windows
- Fixed build with gcc compiler; couple minor improvements in perf testing framework
- removing some mistakes
- optimized cmp and cvtscale(16s->16s) using SSE2 (thanks to Victoria)
- fixed gpu perf tests (out of memory)
- corrected small bu on image sequence tone mapping
- minor
- added tone mapping video processing from OpenEXR images sequences
- minor
- fixed build under linux
- fixed new OpenGL functionality under Qt
- Fix to solve conflicts to standalone FLANN
- added description of minMaxIdx
- fixed yet another bug in SVD. Now Core_SVD test passes
- fixed most of test_core failures (except for SVD)
- fixed fastAtan2 and cardToPolar accuracy (thanks to Andrey Kamaev)
- fixed single-mat input/output in mixChannels() (ticket #1446)
- fixed description of inRange/inRangeS (ticket #1500)
- corrected description of goodFeaturesToTrack (ticket #1488)
- fixed single-precision SVD accuracy on some very ill-conditioned matrices (ticket #1448)
- fixed memory corruption in CvEM::read() (ticket #1399)
- fixed bug in Matx::inv(..., DECOMP_SVD) (ticket #1444)
- Made changes in BundleAdjusterBase class to pass a termination criteria to the Levenberg–Marquardt algorithm.
- Reverted invalid cv::reduce optimization
- Fixed Android target setup for OpenCv library project
- Optimized version of Reduce functions added
- Fixed bug in phaseCorrelate
- adding Android-specific linking flags
- adding Android-specific libs
- Fixed logging in perf tests; small bugfix in run.py
- minor fix
- minor
- fixed build under linux
- moved OpenGL wrappers to separate header added GlBuffer, GlTexture and GpuMat support to InputArray replaced addTextOpenGl function by render + GlFont
- fixed bug in chart.py
- exposed SurfFeatureDetector and SurfDescriptorExtractor to python
- Made changes in the stitching module to make correct logging on Android.
- Tegra-optimized pyrUp
- implemented addTextOpenGl under Gtk
- minor fix
- added addTextOpenGl function
- added OpenGL support to Gtk realization of highgui
- Fixed bug in cv::pyrUp. Reenabled accuracy test.
- fixed build with Qt
- Adding optimized Mat Allocator
- Tegra-optmized pyrDown
- reverted occasional commit
- workaround for the case when perf system is used in external app without TBB
- Added performance test for pyrUp/pyrDown
- Fixing uint32_t typedef for MSVC
- Fix ticket #1346
- Reenabled Tegra optimization of calcOpticalFlowPyrLK
- added cv::Filestorage based setup method for retina model
- minor
- Optimized version of CountNonZero functions added
- minor fix
- added GlArrays class and pointCloudShow function
- removed non-ascii characters (ticket #1468)
- added 16s support to cv::threshold.
- Improved sorting in performance reports
- One more bugfix for calcOpticalFlowPyrLK
- updated ORB: limit the number of output keypoints, use bi-linear interpolation between subsequent layers instead of much slower area-based interpolation between 0-th and i-th layers.
- [*] Fixed two bugs in reduction functor: out of shared memory bounds access and missing volatile on GF100 and further
- Fixed border interpolation bug in calcOpticalFlowPyrLK
- minor
- Fixed Android build problem
- fixed compilation error
- added OpenGL support to highgui under WIN32
- Optimized version of 32F Norm function demands bigger MaxErr value, because it calculates norm in floats instead of double.
- Updated comment
- Optimized version of Norm and NormDiff functions with f32 type added
- Android cmake toolchain: fixed some compatibility problems with cmake 2.6.x; improved file header. Fixed small problem in chart.py.
- Small improvements in cmake status report
- Fixed perf target
- Fixed Android build on Windows.
- Changed the class DetectionBasedTracker -- changed the system of states in the subclass DetectionBasedTracker::SeparateDetectionWork, made them more logical.
- Android cmake toolchain: changed some error messages, fixed error with NDK r5, improved includes and link directories configuration
- Made changes in DetectionBasedTracker -- refactored the class.
- Committed the first version of DetectionBasedTracker.
- Fixed #1469
- Android cmake toolchain is reworked for NDK r7; added experimental Android x86 support.
- Java API: adding test for HoughLinesP()
- fixed CvCascadeBoost::train
- fixed gpu performance tests
- fixed compilation under linux
- moved GpuMat's operations implementation to core module
- removed BEGIN_OPENCV_DEVICE_NAMESPACE macros
- fixed compilation error
- [+] CUDA path for NCVImagePyramid
- Tegra-optimized Canny
- Optimized version of NormDiff functions added
- update retina module related samples
- fixed CvRTrees::read in case nactive_vars==var_count (thanks to Malcolm Reynolds)
- user guide on cascade training a bit updated
- minor
- fixed compilation under linux
- minor fix
- minor fix
- moved GpuMat and DevMem2D to core module, some code refactoring
- new sample for the complex detector+descriptor+matcher evaluation
- added improved ORB implementation, convex-convex polygon intersection, eigen2x2 low-level function ...
- Optimized version of Norm functions added
- integral perf tests renamed for readability
- integral perf tests renamed for readability
- Tegra-optimized cv::compare
- fixed optical flow test for devices with cc >= 2.0
- [*] Fixed #1464 [~] NCVPyramid uses tr1 and thus can be compiled with CL, commented out on linux [+] Moved reduction functors to NCVAlg [*] Warnings in NCV
- fixed ffmpeg backend build on Ubuntu 11.10
- [~] Refactored device reduction for better reuse (now with functor semantics)
- [*] Fixed #1461
- More performance tests for Sobel and Scharr filters
- corrected stupid error for retina color mode selection in Retina::run method
- Erasing two images from cpp/tutorial folder
- Added one sample in tutorial_code to use Stereo Block matching
- Performance testing: added option to get list of all values for CV_ENUM; added perf test for cv::Sobel
- Added performance test for Canny
- Minor perf tests framework improvement
- Added possibility to configure TBB behavior in Perf tests --- now we can set the number of TBB threads in the perf tests either as console parameter perf_tbb_nthreads or in a test itself using the method declare.tbb_threads(n).
- minor
- fixed gpu samples build
- minor
- prepared GpuMat for moving to core module
- fixed remap under cc < 2.0
- Terga optimization for integral_8u32s
- Optimized version of Sum functions added
- fixed compilation error
- fixed compilation problems after rev. 6925
- short change on default retina values setup for warning avoidance
- clarified parameters inputs and outputs at the interface level for better clarity and ease of use, also corrected a mistake at activateContoursProcessing interface method
- Performance test for FAST features detector
- added compression strategy as a parameter (another request from ticket #1452)
- improved png compression ratio (ticket #1452)
- Performace tests for ORB
- Tegra-optimized features matching for Stitching
- [+] Pixel types via templates [+] Color conversions stub via pixel types [+] Pyramid calculation (required for mipmaps in CUDA 4.1) [~] Changed C strings to C++ throughout NCV [~] Fixed a couple of bugs in NCV
- Fixed warning in the ORB features finder
- Better NEON Hamming distance
- minor
- Fixed small bugs in Stitcher class
- Fixed median focal length estimation in the stitching module
- Fixed bug in the stitching module (some images appeared at result pano center)
- Optimized versions of Erode and Dilate functions added
- Updated CLI for GPU samples
- Better default grid size for ORB-based stitching
- Made changes concerning inserting prefiltering modes into CascadeClassifier class. Now developers should call the method setFaceDetectionMaskGenerator() to use prefiltering mask generator implemented for face detection.
- Updated stitcher a little bit
- corrected xml parameters file management in the retina interface
- corrected xml parameters file management in the retina interface
- corrected wrong parameter sent to retina module for color saturation
- Stitching: added grid option to OrbFeaturesFinder
- Fixed bug in KeyPointsFilter::runByImageBorder; added ROI adjustment to ORB
- Fixed Android build with SDK revision 14
- dft perf test minor fix
- minor fix of inpaint perf test
- added small resolutions for perf tests
- Fixing compilation
- continuing code correction for windows warning elimination
- inpaint perf test added
- added sz2K resolution for perf tests
- created perf test for DFT
- implemented gpu::gemm via CUBLAS
- added cublasSafeCall
- Added ORB features finder into stitching module
- added WITH_CUFFT and WITH_CUBLAS flags to cmake scripts fixed gpu module error reporting added asynchronous version of some functions
- Clang compilation fixes, closes #1432
- Several improvements in performance reports
- added wrappers for BroxOpticalFlow and interpolateFrames
- fixed warnings
- warning under vs2008
- Updated optimal DFT size estimation in gpu::convolve()
- gpu module: refactored devmem2d.hpp (atomic bomb)
- Updated optimal block size estimation in gpu::convolve()
- Added filters to html perf reports generated by summary.py
- minor fix
- Made changes in the method of inserting prefilters into the CascadeClassifier class.
- bug fix
- new optimized implementation of BruteForceMatcher_GPU (~2-3x faster)
- Fixed Linux build
- unified norm computing; added generalized Hamming distance
- reenabled Tegra optimized resize
- minor change of doc
- minor change of doc
- added doc on cascade classifier training
- implemented brute force convolve for small kernel sizes
- fixed bug in ptr in optflow.cu
- added missing arithm operations to gpu module
- new, much simpler and SSE2-optimized implementation of FAST
- Fixed small bug in opencv_traincascade application: overflow sometimes happened during calculation of the number of negative samples.
- Added performance tests for cv:phase and cv::SURF
- Renamed warp of point method into warpPoint
- Added warp method into the RotationWarper interface, added find() into VoronoiSeamFinder which uses only source image sizes
- Tegra optimized FastAtan2
- Added HOG features to the traincascade module
- updated erode perf test
- added perf test for cv::erode
- fixed compilation under MSVC
- added sample on color generation and updated sample on lsvm
- added func to different colors generation
- added overlapThreshold param to sample
- Added possibility of prefiltering into CascadeClassifier. Now OpenCV users can implement their own mask generators and insert them into CascadeClassifier.
- fixed bug #1331
- exported C++ stereoRectify in Python
- minor fix
- minor fix
- fixed compile for linux
- optflow gpu compilation fix under vs2010
- improved some methods in the Directory class
- fixed include on Linux
- updated test on lsvm
- added class Directory
- Added doc on c++ version of latent svm
- fixed method clear()
- fixed tests for BruteForceMatcher_GPU::radiusMatch
- removed porting to java of latent svm
- uncommented the samples parts compiled under MSVC
- fixed bug with using not built-in ZLIB library
- Changed type of OPENCV_BUILD_3RDPARTY_LIBS variable to the INTERNAL on WIndows (see comments for #1030 ticket https://code.ros.org/trac/opencv/ticket/1030)
- added test for c++ version of latent svm and updated testdata
- added sample for c++ version of latent svm
- added c++ wrapper of latent svm
- Updated optimal block size estimation for the convolve() function
- fixed several bugs in CommandLineParser
- improved print help in CommandLineParser
- fixed multiple warnings on Windows. fixed bug #1368
- optflow_gpu compilation under ubuntu
- optical flow sample compilation under ubuntu
- Added createWightMaps function into FeatherBlender (stitching)
- warnings optical flow gpu cosmetics
- Avoid duplicated surf extraction step when same parameters are used for detection and descriptors calculation
- Updated command line arguments in performance tests
- Fixed support of translation in the GPU-based plane warper
- Updated GPU warpers interface
- Refactored warpers in the stitching module, added buildMaps function into the RotationWarper interface
- fixed several bugs in CommandLineParser
- improved print help in CommandLineParser
- Fixing ticket #1402
- fix print help
- fixed several bugs in CommandLineParser
- Added fix for removing too similar images into the stitching module
- fixed sub algorithm in CommandLineParser
- compilation under ubuntu
- eliminated shread_ptr dependency from optical flow gpu. It caused compilation errors.
- restored doc on latent svm that was lost in moving to rst
- compilation under ubuntu
- Fixed Linux build
- [+] Added Brox optical flow (implementation courtesy of Michael Smirnov)
- 1) detail source group for stitching 2) warnings
- Tegra optimized cvRound; perf test for cvRound; fixed perf test for stitching
- Disabled some unfinished optimizations.
- re-enabled 16s images in cvSobel & cvLaplace.
- Implemented the first variant of working with masks in CascadeClassifier. Probably, will be rewritten soon.
- fixed build for compute capability < 2.0
- fixed build under linux
- optimized gpu filters, added buffered version for different filters
- Fixed TBB-related bug in YUV420 to RGB conversion
- CMake scripts changed a bit: added more accurate variant of the Threading Framework support (it is a lightweight analogue of TBB for ARM-s).
- fixed bug #1364
- fixed bug #1381
- fixed resource leak in lsvmparser (ticket #1390)
- fixed bug #1368
- fixed bug #1388
- fixed bug #1389
- Minor changes in stitching module
- implemented optimized version of bf_radius_match for train collection
- Fixed bug in ROI based features finder (stitching)
- implemented optimized version of gpu::bf_radius_match
- Fixed build error (Linux)
- Minor fix in stitching_detailed
- Added handling of ROI in stitching features matchers
- Added matching mask into pairwise matcher from stitching module
- Refactored stitching module
- added performance tests for gpu::reduce
- Added support of GPU in stitching seam estimators
- Added support of vertical straightening into stitching
- Fixed GPU version of multi-band blending in stitching module
- Replaced SVD with eigenval decomposition in waveCorrect func (stitching)
- Added debug function to project back from pano to original image
- frame size specification for video sources in video.py
- Java API: fix for Subdiv2D::getTriangleList() and Subdiv2D::getEdgeList(); test for getTriangleList() is added.
- improved phaseCorrelate() performance (thanks to Will Lucas for the patch)
- fixed bug #1370
- Added BA refinement flags into stitching_detailed
- fixed problem with incorrect distance values returned by FlannBasedMatcher for hamming metric (int's were interpreted as floats)
- implemented gpu::reduce
- fixed bug in cv::reduce in reduceC_ for multi-channels source
- Applied fix from #1382
- Removed extra "," that raised GCC warnings.
- fixed compilation under ubuntu
- Added HOG features to cascade detection algorithm. Added pedestrian detection trained model for HOG cascade detection algorithm.
- Added selction of BA cost function in stitching samples (and added other BA cost func into stitching module)
- Refactored motion estimators in stitching module
- Added translation parameter into stitching module warpers. For now only PlaneWarper and PlaneWarperGpu warpers support it.
- implemented gpu::addWeighted
- implemented gpu::copyMakeBorder for all border modes
- Fixed the new version of findCirclesGrid.
- Added tests of findCirclesGrid() with the asymmetric pattern.
- Removed unnecessary variables.
- Improved robustness of the findCirclesGrid() to affine distortions.
- fix in RectSelector
- fixed bug in gpu::HOGDescriptor::getBuffer (ticket #1379)
- Tegra optimization for CirclesGridClusterFinder::hierarchicalClustering
- Changed one CLI message in stitching_detailed.
- RectSelector in common.py
- Fixed warper selection bug in stitching_detailed. Removed estimation of aspect ratio in BA in stitching to avoid stretching of input images. Did minor refactoring.
- Fixed some cmake 2.6 compatibility issues.
- Removed countNonZero call from CirclesGridClusterFinder::hierarchicalClustering
- Updated bundle adjustment in stitching module: 1) it minimizes reprojection error now, 2) it minimizes error over focal, aspect, p.p.x, p.p.y parameters. Refactored and updated warpers.
- Perf tests: added option to set affinity mask on Android platform
- Removed unnecessary comparison from CirclesGridClusterFinder::hierarchicalClustering
- wrapped FlannBasedMatcher (and extended DescriptorMatcher wrapper) updated feature_homography.py sample to use new features
- fixed compilation errors in TeX
- fixed problem in rst files changed OpenCV version to 2.3.2
- python DescriptorExtractor.compute now returns filtered keypoints wrapped StarFeatureDetector and GridAdaptedFeatureDetector
- Perf tests: linux version of adb search
- Perf tests: fixed some bugs with adb tool search
- minor
- Tegra-optimized minMaxLoc/minMaxIdx
- replaced "unsigned int" -> "unsigned" to make Python/Java wrapper generator work correctly
- always initialize the output values in LSH-based k-nearest search (patch by Alex Mordvintsev)
- OpenCVConfig.cmake is updated to export OpenCV_SOURCE_PATH when used without "make install"
- minor gpu module refactoring: split big .cu files, disabled unnecessary template instantiation
- Since there is no a standard functions cv::min and cv::max which has cv::Scalar argument, removed the performance tests, calling the functions cv::min and cv::max with cv::Scalar argument. Instead of them two performance tests were created which call the functions cv::min and cv::max with 'double' argument.
- Added fix for 0 found features in stitching matcher
- Perf Tests: default stitching scenario.
- work on #1360 (custom LshIndex params fixed)
- Added performance tests for findCirclesGrid and solvePnP
- Fixing ticket #1366
- Fixing include defines
- corrected formula formatting in phaseCorrelate docs (thanks to the author for the patch)
- minor
- fixed bug in SURF_GPU (memory access error)
- Bug in multiply was fixed (by Vlad Vinogradov)
- added check if src.size() == dst.size() to gpu::resize
- implemented gpu::resize for all types
- optimized gpu::multiply
- added padded performance tests for gpu module
- Fixed fullscreen window mode on Windows.
- Reverted some unnecessary changes in GPU module
- Added TODOs into GPU module
- added support of 8UC4*32FC1 multiply into GPU module
- Perf tests: improved reporting when test fails because of exception
- Perf tests reports - added output format with embedded styles
- Small modification in test parameters.
- Fixed modules order in OpenCVConfig.cmake
- Added handling of stitching module into OpenCVConfig.cmake.in
- Fixing static libs build on Windows
- Perf tests: method ::perf::TestBase::getDataPath made public static; added base CUDA detection into run.py script
- Perf tests: fixed some issues
- Fixing Windows build
- Fixed perf target on Windows.
- Made perf test for CascadeClassifier (LBP frontal face cascade).
- Neon Optimized Resize added
- touch stitching app, test/verify svn access
- fixed bug in gpu perf. test
- added performance tests for gpu module
- Fixing Windows build
- Perf Tests: updates to cvtColor() & integral() perf tests
- refactored features finders in stitching module
- Perf tests: minor fix in chart.py
- minor refactoring of stitching
- added first version of public stitching API, added simple sample which uses that API, old sample renamed to stitching_detailed
- fixed Java API build (not sure if features2d is wrapped correctly now)
- handling Ptr<> arguments and return values in Python wrappers partially wrapped features2d framework added feature_homography.py sample
- Perf tests: fixed some bugs in scripts
- Gpu functionality in stitching module is excluded from Android build
- put all old stitching API into detail namespace
- fixed bug in stitching in GpuSurfFeaturesFinder (missing upright parameter)
- Performance testing branch is merged back into trunk
- fixed bug in gpu::remap under win32
- minor fixes in stitching module
- fixed stitching module link error on Windows
- cvtColor: dst channels number default is set to 4 for RGBA/BGRA cases; added new codes for yuv420 to RGBA/BGRA.
- added bicubic interpolation to gpu::remap
- warnings
- refactored stitching module
- turned opencv_stitching application to module and sample
- fixed build under windows (replace M_PI with CV_PI)
- minor changes in opencv_stitching
- minor changes in opencv_stitching
- optimized gpu::remap (use texture memory)
- added phaseCorrelate function by Will Lucas.
- optimized gpu::remap (use texture memory if possible), added stream support to gpu::remap
- added GpuFeature assertion to gpu::Canny
- added assertion for small image sizes to SURF_GPU (ticket #1323)
- fixed CudaMem::createMatHeader (ticket #1353)
- fixed build under linux
- memory safety test added
- Updated retina access methods and OpenEXR image tone mapping demo cleaned
- Updated retina access methods and OpenEXR image tone mapping demo cleaned
- opt_flow.py sample fixed
- Android port is updated for NDK r6b
- Fixed native_camera library build for Androids having version in x.x format
- obj_detect.py sample removed
- modifed minimum required cmake version for ios
- - add documentation for LshIndexParams
- switched to gpu::pyrDown and gpu::pyrDown in opencv_stitching
- added BORDER_REFLECT and BORDER_WRAP support to gpu module switched to gpu::remap in opencv_stitching
- removed problem with duplicated CV_OUT InputOutputArray parameters (ticket #1348)
- lk_homography.py sample added
- implemented gpu::remap for all types
- lk_track.py description
- minor update of device layer
- minor update of device layer
- optimized memory usage in BruteForceMatcher_GPU_base::knnMatch when k==2
- update gpu docs
- fixed gpu::pyrUp implementation
- refactored gpu::BruteForceMatcher (moved some utility functions to device layer)
- fixed bug in gpu::matchTemplate (added normalization routine to make the GPU version consistent with the CPU one), added test cases from the ticket #1341
- typo is fixed
- added missing cv::moveWindow & cv::resizeWindow
- mser.py sample added
- camshift.py description
- fixed some more hybrid tracker build problems on Windows
- Java API: generator script whitespace cleanup, adding statistics gathering code
- Java API: test for Highgui.imencode() is added
- fixed hybrid tracker build problems on Windows
- fixed declaration of imencode to make it usable in Python etc.
- removed irrelevant pyc file
- added hybrid (feature-based & meanshift-based) tracker (by Pushkar)
- Added the declaration of the type ConcurrentDoubleVector for TBB case.
- 1) ticket #1332 2) device layer utility
- optimized gpu pyrDown and pyrUp
- modified capturing building ligic for iOS
- modified highgui and ts modules and cmakelists for ios cross-compiling, added ios toolchains, added ios build tutorial
- enhanced input image format support
- enhanced and more robust image input management
- Added theory to a rst Tutorial in tracking motion (Harris corner)
- all video processing samples use camera as default source (and fallback to synth in case of capture error)
- Added the "Camera calibration With OpenCV" tutorial. Extended with a few global links the conf.py file. Corrected an error in the linux_install.rst and one in the cascade_classifier.rst file.
- optimized some gpu::cvtColor functions
- replaced non-available in MacOSX' numpy deg2rad in motempl.py
- fixed 2 bugs in python samples (crash in camshift and running samples from within the demo)
- running demos with enter key
- waiting for optimisation at Retina::_convertCvMat2ValarrayBuffer
- updated default parameters, more contrast by default
- updated retina modules : minor misakes correction & changed pixel format to float instead of double to keep some memory, precision is almost sufficient, check for residual mistakes
- updated retina modules : minor misakes correction & changed pixel format to float instead of double to keep some memory, precision is almost sufficient, check for residual mistakes
- applied patch #1326
- work on demo.py: sample running
- demo description url parsing
- work on demo.py shell
- updated GUI photoreceptors sensitivity parameter management
- updated GUI photoreceptors sensitivity paramaer management
- Attempt to fix a build problem (ambiguous PixelType error when compiled on Mac x86)
- Ticket #1240 resolved.
- merged latest fixes from 2.3 branch; since 2.3.1 is out, the version in trunk is bumped to 2.3.2
- Added the "How to write a tutorial for OpenCV?" tutorial. Made some corrections to the feature2D TOC tree. Small visual improvements for the video-write.rst file. Deleted a definition file that served no purpose.
- fixed bug in gpu::cvtColor
- added TransformFunctorTraits, optimized some functions that use transform
- fixed multi-scale Hough transform (ticket #1320)
- disabled fast-math by default.
- added flann matching to find_obj.py
- fixed crashes in parallel HOG detector; avoid use of new POPCNT instruction in ORB (to make it compatible with older CPUs).
- updated opencv_ffmpeg build instructions
- refactored opencv_stitching
- updated opencv_ffmpeg binaries, headers and libs to ffmpeg 0.8.2
- fixed bug in opencv_stitching (added handling of homography evaluation failure)
- fixed Ximea constructor call
- enhanced basic error management when input image could not be loaded
- fixed bug #1306 (Vec assignment); added tests for Vec & Matx multiplication
- added openexr sample file
- added CameraInfo class into opencv_stitching
- refactored opencv_stitching, added possibility to turn off BA
- implement optimized version of gpu::BruteForceMatcher::knnMatch when k == 2
- updated saving matches graph in opencv_stitching
- minor changes in opencv_stitching
- added saving of matches graph into opencv_stitching (in DOT format)
- Documentation: fixed CvSlice and FeatureDetector descriptions.
- Fixed Android build.
- implemented rotating-only cameras calibration
- Slight update in objdetect...still to put Theory
- Fixed more broken links from previous tutorials
- Fixed more broken links from previous tutorials
- camshift.py sample small cleaning
- Updated broken links of tutorials in core and fixed weird-looking bullets (error of mine)
- Commit rst tutorial for Cascade Classifiers
- Modified sample for object detection with LBP in tutorial_code
- Added sample for object detection with LBP in tutorial_code
- Added to the tutorials the "Support Vector Machines for Non-Linearly Separable Data" contributed by Fernando Iglesias García. Corrected a mistake in the gpu-basics-similarity.rst file.
- fixed tickets #1301, #1303, #1305
- Sample code simplified for object Detection
- Added the "Similarity check (PNSR and SSIM) on the GPU" tutorial. Corrected an highgui TOC tree mistake.
- nicer default parameters set
- added CV_OUT to CvANN_MLP::predict python cv2 MLP sample done
- work on MLP sample in letter_recog.py (in progress...)
- added more explicit titles on figures and cleaned std output
- Documentation: fixed references for C++ operators
- added comments/contacts link
- added comments/contacts link
- Documentation: fixed "template<class T> const T" case for ".. ocv:function::" macro
- Documentation: fixed about 100 cross-referencing errors.
- adding openexr images tone mapping demo
- optimised input image management
- optimised input image management
- Added the How to create videos with OpenCV Tutorial. Made some corrections to the feature2d, to get rid of some documentation build errors.
- work on camshift.py
- use default HOG people detector minor cleaning
- * Fixed cross-referencing in reference manual (except C++ operator() ). * Fixed display of struct and class definitions (except classes with base class specified). * Fixed formatting and referencing errors in several documentation files.
- Added base tutorial for using FlannBasedMatcher with SURF detector + descriptor in rst
- Added tutorial for features2d using homography to find a planar object (Based on the well known find_obj.cpp
- added cv.py micro-module for backward compatibility with existing Python scripts using prev-gen Python API.
- Corrected a commit error -- Added the images for the detection tutorial
- Added Features2D descriptor tutorial + drawMatches in rst
- Added rst  Tutorial for Feature Detection with SURF and drawKeypoints
- another attempt to fix #1299
- fixed Matx33 * Point3 and Matx22 * Point operators (ticket #1299)
- made retina code compile with VS2005/VS2008
- improved list formatting in opencv refman. Updated PDFs.
- Java API: generated test stubs for 2 new functions
- export HOGDescriptor::getDefaultPeopleDetector() to Python (ticket #1298)
- Fixed search in html documentation (ticket #1232)
- Added SURF_Homography sample codee
- comment
- peopledetect.py sample added (TODO: use builtin svm data instead of people_hog.txt) some old cv api use cleaning
- Added code for SURF using FLANN Matcher and drawMatches options
- preserve alpha channel in PNG, when imread(..., -1) is called (ticket #1107)
- fixed kmeans center initialization in the case of huge matrices (ticket #1291); fixed warinings in libtiff.
- another attempt to fix IPP detection on x64 (ticket #1294)
- fixed building retina code on Windows
- raised threshold in ORB test; temporarily disabled always failing Opponent SIFT test
- fixed retinaDemo compile errors
- added retina model, by Alexander Benoit
- Added two sample code for features 2D - SURF descriptor and detector
- Html documentation: fixed text wrapping for sidebar
- added support for Ximea cameras (missing parts in the prev. commit)
- added support for Ximea cameras (patch by Marian Zajko), fixed GCC warnings in MOG2 background subtractor.
- fixed default maxSize case in cvHaarDetectObjects (ticket #1296)
- avoid infinite loops when 0-area image is filtered (ticket #1295)
- fixed IPP detection on 64-bit Windows (ticket #1294)
- Added a video input tutorial with PSNR and SSIM.
- Fixed libraries order in Android.mk (thanks to Anush Moorthy for the report)
- Java API: Removed meaningless tests
- fixed compile errors in samples
- Update samples using cmd parser
- Java API: generated test stubs for recently added functions/classes
- Java API: Fixed bug in Mat port; fixed/implemented all java tests for core module
- updated openni finding by cmake  (#1190, #1252); updated doc on kinect
- Changed tabulation.
- Java API: fixed input List<List<smth>> arguments
- multilib support added (ticket #363)
- added size check to static Mat::diag()
- Added new tests written by Hussein Abdinoor; Added support for new classes in features2d and imgproc
- Updated using new cmd parser
- fixed OpenCVConfig.cmake for statically built OpenCV on Mac
- added remap test, fix compilation error
- fixed cmake status of openni
- fixed compile error on ubuntu64
- fixed compile errors and warning on ubuntu64
- added registerPageLocked/unregisterPageLocked functions added convert functions to BruteForceMatcher_GPU other minor fixes
- Updated sample using new cmd parser
- Updated samples using new cmd parser
- fixed C++ implementation of Delaunay triangulation and moved it from sample to imgproc.
- experimental kernels for cuda
- Added reference to Nvidia TADP into Android tutorial; refactored both Android tutorials; fixed some rst warnings
- fixed compile errors
- experimental kernels for cuda
- added read/write methods for SimpleBlobDetector and DenseFeatureDetector; added their creation to FeatureDetector::create method (#1290)
- Updating samples using cmd parser
- Fixed some grammatical errors
- fixed memory leak in SIFT wrapper (#1288)
- minor stitching optimization (use cpu matchers instead of gpu matchers on multicore processors)
- initial (buggy) C++ version of Delaunay triangulation
- Java API: added JNI_OnLoad to eliminate jvm warnings
- added doc on supported Kinect properties (#1251)
- added CV_CAP_PROP_OPENNI_REGISTRATION property for getting
- minor stitching optimization (improve buffer reuse)
- Java API: added support for BruteforceMatcher-SL2
- Removed outdated android-opencv subproject
- Java API: corrected names of methods in Utils class; fixed bug in DMatch (thank for Hussein Abdinoor); added new utility method loadResource
- fixed compilation error without cuda
- fixed doc warning
- Updated Android tutorials
- added doc on CvERTrees
- minor
- moved GpuMat class to separate header file
- fixed gpu test failure on empty test data
- Small modifications to the scan tutorial and added the video-input-psnr-ssim sample file.
- fixed CvCapture_OpenNI constructor (removed all exceptions) (#1237)
- fixed grammar of the comment
- Updated android tutorial for native development
- added SL2 (squared L2 distance) and implemented the descriptors matching in L2 using SL2
- added buffered version of cornerHarris, cornerMinEigenVal, histEven and histRange
- fixed some warnings under win64
- minor changes
- minor improvements in cmake-file for gpu samples
- fixed some warnings under win64
- added gpu::Canny function
- Fixed mixChannels argument types
- fixed #1279
- Added the "Interoperability with OpenCV 1" tutorial.
- Java API: refactored Core tests
- Added the tutorial "Using OpenCV Android binary package to compile applications, which use OpenCV from native level".
- corrected PCA::PCA and PCA::operator () description (thanks to Adrian Kaehler)
- fixed pointPolygonTest(). Now it returns -1, 0, 1 when measureDist=false (ticket #1285)
- Java API: cleaned imgproc tests; changed signatures of several java functions
- disable implicit numpy array use in old-style Python bindings because of hard-to-fix memory leaks (ticket #1177)
- fixed KeyPoint::convert(keypoints,point2f) (ticket #1282; thanks to cooperz for the patch)
- fixed rank check in 8-point Fundamental Matrix algorithm (patch by F. Devernay; ticket #1273)
- fixed parallel block matching stereo correspondence algorithm (ticket #997; thanks to jbieger for the patch)
- added some missing declarations of the functions, noticed in the ticket ##229
- added _InputArray::_InputArray(const Scalar& s) constructor (ticket #1214)
- temporarily fixed #1279
- Java API: added ticket number to failed test
- mc
- ticket #1280
- updated lt_track.py sample - continuous feature detection - track verification by reverse tracking
- Java API: * fixed manually ported classes; * added vector<vector<Point>> support; * changed argument types for 3 functions; * finished tests for org.opencv.core.Core class.
- Java tests: fixed 1 test in core and 1 disabled
- Java tests: removed test_1
- Fixed color conversion bug
- fixed comment and doc on L2
- added check of output image in drawKeypoints()
- Java API: fixed script for coverage calculation
- Java API: new tests for Core and Imgproc from Hussein Abdinoor
- Java API: fixed problems in video and ml modules; generated test stubs for all exported functions (now we have 1701 tests).
- fixed errors in cmdparser
- new version of command line parser
- Java API: vector_vector support for KeyPoint/DMatch/char Testing: 1178/4/576
- Implemented read/write methods for FlannBasedMatcher; fixed features2d wrappers for java
- fixed CvHomographyEstimator::runKernel (ticket #1275)
- Java API:  fitEllipse arg type is changed to List<Point>, test is updated as well Testing: 1176/4/580
- Java API: (per code review) adding check (data.length % CvType.channels(t) != 0) for Mat:: put/get, adding 2 tests for them Testing: 1176/4/580
- Java API: fixed wrong JNI name for native delete()
- Implemented read/write methods for BriefDescriptorExtractor class
- Java API: added tests for SiftDescriptorExtractor and OrbDescriptorExtractor
- Added CV_EXPORTS to OrbDescriptorExtractor (ticket #1276)
- Fixed reading/writing parameters for OrbDescriptorExtractor
- Fixed bug in checkRange - integer Mats were always in range
- JavaAPI: fixed typo; some constants are moved to private section; added tests for BruteForceMatcher-Hamming
- Java API: added wrapper for GenericDescriptorMatcher
- android tutorial updated: spelling and note about spaces in path to OpenCV package
- Java API: minEnclosingCircle() fixed (float& -> float[]) Testing: 1130/0/584
- Java API: added and fixed several tests
- java tests: deleted image writing to sdcard
- java tests: updated testFillConvexPolyMatMatScalarIntInt, testFitEllipse colorWhite added
- fixed 8-point case in findFundamentalMat (ticket #1262). findFundamentalMat needs to be rewritten actually (as well as findHomography)
- Java API: calcOpticalFlowPyrLK() args types are changed to vector<> Testing: 1130/0/585
- reverted
- Java API: added tests for FlannBased DescriptorMatcher
- java tests: minor updates
- Java API: added tests for BruteForceMatcher (L1)
- Java API: added tests for BruteForceMatcher (L2)
- minor fix
- minor fix
- gpu device layer code refactoring
- Java API: fixing converters (copyData=true) and samples compilation Testing: 1079/0/592
- Fixed crash in BruteForceMatcher::clone
- java: bugfix in RotatedRect, one test fixed
- Java API: fixed bugs; added tests for SURF and BRIEF descriptor extractors
- Android.mk now automatically founds all cpp-files
- Java API: (per code review) renaming and moving utility classes Testing: 1079/0/584
- Java API: code clean-up Testing: total 1079, failures 584, errors 0.
- fixed useOptimized(); added checkHardwareSupport description (ticket #1258)
- updated libtiff to 3.9.5 (ticket #1271)
- added "inclusive" & "exclusive" adjectives to startrow, endrow, startcol, endcol parameter descriptions (ticket #1272)
- Java API: added new tests for SURF and STAR feature detectors
- Java API: Fixed typo
- Java API: adding missing class
- Fixed Android build
- Java API: new types and converters are added, jni suffixes changed
- Java API: added tests for FAST feature detector
- removed property. added automatically define number of cpus for decoding video
- java tests: addede tests for Converter and core classes by Hussein Abdinoor
- Java API: new converters, findFundamentalMat/cornerSubPix/findHomography/solvePnP/solvePnPRansac and their tests are updated
- propagated fix for EXR from 2.3 branch to trunk
- added getNumberOfCPUs() function
- Java API: string constants for features2d classes are converted to enums
- fixed compile warnings in FLANN about too long integer constants
- Java API: added support for read/write functions in features2d
- Java API: class KDTree is added to ignore list, JNI funcs names for renamed classes are fixed
- added gpu::equalizeHist function
- Java API: tests are updated after randu/randn args types changes
- Java API: added class pointer ret type support, CV_EXPORTS_AS(x) support for classes, vector<T> as ret type support, randu/randn params type changed to double
- fixed property for ffmpeg
- Minor bugfix.
- Java API: Added more classes from features2d.
- added gpu::calcHist function
- Java API: Added base port of features2d.DescriptorMatcher class
- fixed Vec*scalar operations, fixed minEnclosingCircle Python interface.
- doc: added maxSize parameter to CascadeClassifier::detectMultiScale
- added buffered version of pyrDown and pyrUp added stream support to downsample, upsample, pyrUp and pyrDown
- fixed doc bug in gpu/introduction (ticket #1260)
- Java API: updated Mat port
- fixed build ffmpeg v0.8.1
- added EMD to ch7 hist sample, fixed bug with cv::min/cv::max (ticket #1270), fixed mixChannels description
- java tests: added some new asserts, and new tests by Hussein Abdinoor
- minarea.cpp sample reformatted
- fixed build with ffmpeg 0.5.X
- minor fix
- Java API: tests for polylines() and goodFeaturesToTrack(), fix of GFTT corners arg type
- minor fix for ffmpeg
- adding arg name (to fix doc reference and wrappers consistency)
- Made additional internal header modules/objdetect/src/cascadedetect.hpp, and moved some internal classes and template functions from cascadedetect.cpp to this header. This will allow to make a child class for such classes as LBPEvaluator, etc. Also made all "private" fields in LBPEvaluator and HaarEvaluator to be "protected".
- added support new ffmpeg (0.8.X)
- Fixed regex bug in script for java tests coverage calculation
- Java API: star detector is covered by tests
- Java API generator changes randu/randn/inRange args to Scalar; Java tests are updated.
- Java API: Finished SURF tests.
- converted part of ch12
- Java API: added more tests
- Java API tests are added: fillConvexPoly, mixChannels, drawContours
- Java API: typo in converter is fixed
- fixed floodfill with mask parameter when no mask is passed
- Java API: converter for vector<KeyPoint> is fixed; test for inRange() improved
- Java API: KeyPoint::toString() is added
- Java API: converters vector<> to/from Mat are fixed
- Java: fixed Mats comparison; added resahpe mathod to core.Mat; fixed test resources extraction.
- 2 'findContours(...)' tests are added
- corrected OpenEXR status in CMakeLists.txt
- fixed flow matrix dimensionality in EMD
- added minEigThreshold parameter to calcOpticalFlowPyrLK to filter out bad points earlier.
- Added the "Mask operations on matrices" tutorial (with its sample). Plus modified some other core tutorials.
- Added missed import
- Added some new tests for Java API
- Added vector_Point3f_to_Mat converter and some java API tests
- Java API generator: KeyPoint converters from/to Mat
- Added vector_Point2f_to_Mat converter
- Added some tests; Added assertion for comparing Mats with epsilon.
- Java API generator: pointers handling fixed, KeyPoint manual port added
- TEGRA optimized add8u, sub8u and logical 8u operations
- converted live camera calibration sample
- Added several Android tests
- Added the File Input and Output using XML and YAML files tutorial.
- added java tests for imgproc by Hussein Abdinoor
- class & funcs ignore list support is added
- Make build log of Android samples and tests less verbose
- added stub java tests
- Fixed module detection in gen_javadoc.py script
- new tests stubs
- Added Android tests coverage calculation into build
- statistic report improved
- Fixed dependencies for Android projects
- Fixed pch support on linux
- Specifying correct parameter types for cv::flann::GenericIndex and cv::flann::Index_
- a couple of new smoke tests; Mat.java code clean-up
- Removed outdated stuff from Android build scripts
- Fixed install terget for Android examples
- Fixed camera output format handling
- script to find Java API methods that not covered by auto-generated JUnit stubs
- Fixed camera libs setting in Android.mk
- Fixing native camera for Android
- Finished the DFT tutorial for the core section.
- bugfix in cmake for java api
- Fixed Android build on linux
- Added Fernandos first tutorial regarding SVMs. Extended the global links (conf.py). Corrected the author names. Minor modification to the dft tutorial.
- Fixed precompiled headers support for opencv_test_gpu
- Fixed precompiled headeds for non-windows systems.
- Fixed build of Android samples and tests
- Fixed precompiled headers support (fixed formatting, fixed dependencies generation)
- fixed priors usage in ertrees
- fixed and improving formatting in opencv2refman.pdf. added support for n-channel mask in Mat::copyTo() and n-channel images in cv::compare(). fixed 2 compile warnings in opencv_python.
- converted book samples from ch4; fixed potential alignment problems in QTKit video capturing module
- Refactoring of native camera implementation
- Sample files for image scanning, basic Mat, file I/O. Added Victors removed tutorials back in the system. Some typo fixing.Expanded conf.py with new global links.
- making CV data type to be int
- Fixed Android package build
- java tests: imgproc test cleaned
- fixed warnings in generated Java code (accurate imports)
- Fixed android samples; fixed cmake files
- compilation
- 
- Refactored CMakeLists.txt for java module
- fixed several typoes and errors in the refman (ticket #1203)
- java api: fixed ctor in RotatedRect, added 114 tests by Hussein Abdinoor
- classes/files renaming, some code refactoring
- fixed trim_weights in boosting (thanks to frankman for the patch; ticket #1231)
- fixed printing Mx0 matrices (ticket #1247)
- added mk files for NDK-builder of opencv_java project
- renaming the class and file to Tiltle case to meet Java conventions
- renaming the class and its file
- renaming the class and file to Tiltle case to meet Java conventions
- Errors from javadoc generator are redirected to log file.
- Added option to automatically move constants to private list
- Added cmake dependency on version.hpp. From now cmake will automatically rerun if version.hpp file is changed.
- Minor android.toolchain.cmake enhancement
- fixed Xcode 4.1 compile errors in png codec in highgui
- Fixed typo
- Java API generator: refactored manual const and funcs handling, collected real 'import' needs for java classes (to eliminate eclipse warnings in java classes)
- put the smaller opencv_tutorials.pdf to SVN
- fixed 2 typos in linux_eclipse tutorial
- Aded setPreviewDisplay call to java camera samples
- added an ability to make push_back to the empty matrix
- added cv::gpu::pow, ticket #1227
- edited another way of using eclipse using cmake
- fixed xcolor warnings when building opencv_tutorials.pdf
- Restored corrupted images in Android binary package tutorial.
- Ok, now optimized the tutorial size for real. Made JPG/PNG optimization for all the images. Modified some tutorial files to follow these size optimizations. Now the tutorial PDF generated is 3.95MB, so enjoy!
- added missing header
- Fixed image positioning in tutorial
- Fixed list formatting
- Added Android binary package tutorial
- 1) Converted all images to JPG to reduce size. 2) Added a raw Latex page break directive after each TOC tree. (For the PDF tutorial look). 3) Two finished tutorials:    a) one describing how the Mat data structure works and its output capabilities (format function) (demonstration YouTube video included).    b) one describing image scanning operations plus the LUT function (demonstration YouTube video included).    c) a basic filtering approach (plus multi row image scanning demonstration) in the work.
- Allowed to build html documentation without pdf documentation.
- Removed debug print form cmake
- Fixed Android samples; Fixed bugs in cmake (java module).
- Java API generator: updated CvException class path
- Java API generator: class properties support added
- java tests: adopted for the new package structure
- Added Java packages support to cmake
- Java API generator: fixed consts generation
- Java API packages restructured (require further changes in CMake part to work)
- fixed just introduced compile errors on Mac
- added COVAR_ and SORT_ enums to core.hpp; fixed many, many VS2005, VS2010 and MinGW (GCC 4.5.2) warnings
- java tests: COLOR_RGB2GRAY used instead of CV_BGR2GRAY
- Fixed Android samples; updated black list of enums.
- java tests: added tests for calcHist, calcBackProject, Mat.size() method renamed
- fix by Vadim in calcBackProject: additional case is considered
- Added FPS measurement to some Android samples
- Added face datection Android sample
- Java API: added int64 and Vec3d support; small code refactoring performed
- Changed labels for some android samples
- Fixes
- Checking for already defined proprocessor macros
- Fixing ticket #1230
- java tests: split test, minor improvements
- eliminated opencv_extra_api.hpp (all the functionality is moved to the regular OpenCV headers)
- Added image-manipulations android sample, other samples are updated; added Mat.size method to java API.
- Java API: fixed bug in converter vector<Mat> <-> Mat
- Java API: added missing converter vector<Mat> <-> Mat
- Java API: added pointers support (Point*, double*)
- java tests: added test for OFLK, FD, other improvements
- added COLOR_... enumeration to imgproc.hpp and EVENT_... enumeration to highgui.hpp
- Java API: fix in Mat::put(r,c,double[]vals) method
- Android samples: class SampleViewBase which uses native camera is renamed.
- Java API: fix in Mat::put methods, general improvements
- fixed broken python cv2.cpp build after rev.6089
- adjust cosine threshold in squares.py
- Fixing ticket #1228
- Android: * Added manual port for getTextSize; * Fixed bugs in "native camera" sample; * Added 15-puzzle sample.
- math.pi -> np.pi squares.py sample added
- Fixed bug in modules/java/src/cpp/Mat.cpp Removed some debugging insertions. Added test for face detector. Allowed tests to write on sdcard.
- Java API generator: implementation of vector<> fixed
- Added lbp cascade to the tests res/raw folder
- Added functions required for Java API wrappers generating converting Mat-s to/from vectors.
- java tests: bugfix in hconcat
- java tests: commited tests by Hussein Abdinoor
- fixed "import cv" in the new python samples. corrected Python bindings to match the documentation and vice versa (NOTE: in cv2.stereoCalibrate the parameter ordering has been changed)
- Java API generator: implementation of vector<Point> support
- Java API generator improvements: - fixed return of complex types (Scalar, Point, etc) - partial implementation of vector<> support (empty stubs for CPP-side converters)
- java tests: avoided copy and paste
- commented off print (due to the report from the mailing list)
- Finished Android samples renaming
- Continued Android samples renaming
- Added Java functions, converting vectors to Mats and Mats to vectors.
- Android samples are renamed
- Headers are included into opencv_java build
- partial vector<> support in Java API generator
- Added native camera Android sample; Added manual port of VideoCapture class.
- Changed
- Added setters to Java API
- updated some java tests
- Refactored Android samples
- Refactored Android sample (1-java)
- fixed parser bug. fixed TBB version in LatentSVM. example works ok.
- Fixed android sample
- Fixed bug in the function of search of Android applicvation path.
- Fixed Android build.
- added improved version of the variational stereo correspondence algorithm by Sergey Kosov
- - partial 'vector' support in Java API generator - const ignore mask list added for Java API generator
- fixed mixed-type arithmetic operations (ticket #1224)
- Added class TermCriteria.
- added haarcascades for ears detection (by Modesto Castrillón Santana)
- java tests: found a reason of crash (addWeighted bug #1224), some tests cleaned and added
- repaired Python bindings for functions using InputOutputArray
- Modified Android samples
- samples C/C++: fixed compilation problem on Ubuntu
- Modified Android Samples
- ok. enabled TBB in LatentSVM, but need to check if it works
- temporarily switch off TBB
- fixed opencv_flann (with flann 1.6) compile errors on Windows (VS2005 & VS2008)
- Minor Android samples fix
- Fixed Android packaging script
- Android samples are included into the Android package
- Andoid build fixed
- Added the function minMaxLoc to JavaAPI as a manual ported function. Added test for the function.
- class ignore list added for Java API generator
- funcs ignore list added for Java API generator
- Fixed Android compilation on Windows
- Fixed Android build
- upgraded to FLANN 1.6. Added miniflann interface, which is now used in the rest of OpenCV. Added Python bindings for FLANN.
- Added reST tutorials for Contours (6 in imgproc) and for Corner Detection (4 in features2D) + links in conf.py
- added ability to reset view point of depth generator to normal one (#1195)
- Allowed spaces in path to OpenCV (tested only Android build)
- Allowed spaces in Android NDK path
- partial implementation of complex out args in Java wrappers
- Improved ANDROID_SDK_TARGET detection; improved NDK detection in android.toolchain.cmake
- Fixed findCirclesGrid for the case of working with 'square' asymmetric patterns.
- Added to Java API classes Range and CvSlice.
- fixed opencv_video tests
- Fixed Android SDK searching
- Fixed Android SDK searching
- fixed memleak in Python bindings (ticket #1219)
- a few minor fixes in Python samples
- Added moments_demo.cpp
- Added pointPolygonTest_demo code for tutorials
- - 'c_string' support added to Java API - improved CV_IN_OUT/CV_OUT handling for generated Python/Java wrappers
- Added generalContours_demo2.cpp
- Added hull_demo.cpp code for tutorials
- Added generalContours_demo1.cpp tutorial code
- refactoring latentSVM
- Added sample code for tutorial findContours_demo.cpp
- Android toolchain default NDK path is updated for version r6
- Fixed bug in the operator of cv::Ranges-s intersection (operator &).
- Fixed bug with ARM_TARGET caching
- Added option INSTALL_ANDROID_EXAMPLES (default off); Added option for choosing SDK platform for Android tests and samples.
- fixed typo in the license (ticket #1211)
- Added the class RotatedRect to Java API. Added tests for the class.
- java tests: added 2 tests for calib3d, implemented assertMatNotEqual
- java tests: added a chessboard image
- org.opencv.utils renamed to org.opencv.android
- adding runtime Android logging in Debug
- Added packaging script for Android
- embeded cv Python module into cv2.
- java tests: Mat.inv and Mat.cross implemented, almost all Mat tests finished except put, get and dispose
- minor cmake corrections
- Added cornerDetector_Demo.cpp sample for tutorial of cornerMinEigenVal and cornerEigenValsAndVecs
- optimized sparse LK optical flow (tickets #1062 and #1210)
- Added cornerSubPix_Demo.cpp tutorial sample code
- Added goodFeaturesToTrack_Demo.cpp code for tutorials
- Added Harris corner detection sample tutorial
- native exception handling added
- java tests: added stubs for calib3d, features2d classes, some other updates
- Improved rst_parser and javadoc generation scripts
- Improved javadoc comments generation scripts; fixed some typos in documentation
- - added missing loadLibrary for inner classes - added zero check for pointers in utils.cpp
- help message printing
- sobel -> Sobel
- faster detection and timing in facedetect.py
- 'clib3d' support added
- command line option for avi output in turing.py
- made boundingRects argument of segmentMotion CV_OUT updated documentation
- lk_track.py window renamed
- motempl.py sample works
- contours.py sample added
- work on motempl.py sample
- fixed BFM GPU test compile-time error on ubuntu x64 in debug mode
- Some tutorial extending of the Windows install and usage. Display Image retouching.
- use Euler font for the formulas in the online docs too.
- re-added the opencv_flann documentation
- - fixed SetTo tests for GPU (a problem in test code) - minor refactoring
- fixed SIFT when keypoints vector is empty (#1162)
- Javadoc comments genearion is integrated into the Java API build
- fixed timeScale formula in CvCapture_FFMPEG::setProperty(... CV_CAP_PROP_POS_...) (ticket #1207)
- Improved rst_parser; added javadoc comments generator; added javadoc markers to handwritten .java files
- added lk_track.py sample (currently as a comparison between flow tracker implementations)
- finalize() added to ported classes; javadoc anchor added to ported funcs
- fixed PyramidAdaptedFeatureDetector (when mask is not empty) (#1206)
- updated whitelist
- removed debug func. call
- added support of old CC into GPU mean shift routines
- removed -static-libstdc++ flag for compatibility with old MinGW version
- removed CPack added target package_source (tar or zip)
- fixed memory leak in CvKNearest::train() and the constructor.
- Fixed few more bugs in rst_parser. Fixed small typos in documentation.
- commented off debugging print in cap_libv4l.cpp (ticket #807)
- probably fixed parallel face detector (i.e. built with TBB), ticket #1185. Thanks to mengw for the patch
- Disabled -ffast-math in the case of GCC 4.6.x (ticket #1201)
- facedetect.py sample works
- fixed #1204
- added centerPrincipalPoint=false to getOptimalNewCameraMatrix (ticket #1199)
- corrected css style - use the same background color for all text elements.
- fixed a few more typos in the docs.
- opencl module is not ready for trunk yet
- ocl folder contains the gpu implementations
- Fixed bugs in rst_parser.py; added parsing of 'seealso' blocks
- renamed gpu to ocl
- OclMat implementation
- work on facedetect sample
- Update OclMat to match GpuMat. Include ref counting, opearators, Scalar initialization. Tested for Intel OCL SDK.
- - 'String' (that is synonym of std::string) is added - report generation added (<module>.txt)
- Improved rst parser; fixed bug in hdr_parser; some small fixes in documentation
- java tests: split into packages, tests for VideoCapture implemented
- some more bugfixed in 2.3 propagated to trunk
- Fixed C functions parsing in rst parser
- Improved RST parser; fixed small typos found by new parser
- opt_flow.py demo
- work on optical flow sample
- Added histogram comparison tutorial in reST
- Initial classes support, improved generated java & cpp code formatting.
- Added BackProjection reST tutorial
- Java tests: commited some core tests (to be cleaned)
- Fixed small inconsistency in sample code calcBackProject_Demo2.cpp
- Added matchTemplate reST tutorial
- Added calcHist tutorial in reST
- Corrected(re-added) and extended the ImgProc Tutorial TOC entry.
- Added Equalized Histogram reST tutorial + corrected Smoothing tutorial (images reduced and fixed link)
- Added the OpenCV with Visual Studio tutorial. Enhanced, extended the Windows Installation one. Some minor CSS changes to avoid unnecessary large spaces inside enumerations in the tutorials.
- Added tutorial for BackProject in cpp (demo 2) - tutorial code
- Added initial version of rst_parser script
- java tests: merged with new CvType, implemented half of the tests for Mat
- More code review feedbacks addressed: Mat c-tor and setTo uses Scalar, Java Mat::dispose() calls C++ Mat::release().
- Some of code review feedbacks addressed: CvType moved from Mat, new Mat c-tor, samples updated.
- java tests: now only OpenCVTestRunner contains android specific stuff
- Fixed typo in features2d doc
- JavaAPI: implemented Mat.dump method (analog for C++ stream <<)
- removed duplicated compiler flags assignment
- Added calcBackProject_Demo1.cpp for tutorial sample code
- Added compareHist_demo.cpp code
- Added MatchTemplate_Demo.cpp to tutorial sample code
- merged the latest fixes in 2.3 to trunk
- use addWeighted for blending
- java tests updated: now they independent from android, test methods are sorted alphabetically
- Fixed 'Undefined control sequence' error in recently added tutorial
- Turned off android camera and java wrappers for low Android API levels (android-8 is required for these components)
- Removed unnecessary variable disclosures from version config
- little simplification
- turing.py sample added
- Reformatted the TOC tables in tutorials to look just as good in PDFs as in HTML. Updated the default.css_t too for this. Added the "Windows Install" tutorial (with videos).
- lena added
- some tests for highgui java added
- find_obj.py sample added
- Instroduced separate option for Android examples - BUILD_ANDROID_EXAMPLES
- Fixed Android tests and samples build
- Added calcHist_Demo.cpp tutorial code
- Added tutorial sample code: EqualizeHist_Demo.cpp
- distrans.py sample added
- floodfill.py sample added
- Fixed several cross-compiling issues. Fixed cmake status report.
- several java tests added
- inpaint.py sample added
- cv.Line -> cv2.line
- python Sketcher utility class
- #863: typo fixed, minor changes in cpp generator
- #863: default Mat() c-tor, minor improvements
- watershed.py sample added
- we do not need strmiids.lib anymore
- added some tests to core module
- HelloAndroid sample is moved to samples/android
- Fixed versioning bug: FIND_PACKAGE( OpenCV ) errors if no version specified
- implemented static Mat.eye method
- Modified cmake status report
- got back to the old DLL naming scheme (opencv_core230_vs2001_64d.dll => opencv_core230[d].dll)
- some more corrections from Gabor
- #863: sample text color changed from Green to Red.
- #863: 'string' args support added
- propagated fixes in docs and cap_dshow to trunk
- morphology python sample
- added gpu::buildWarpPlaneMaps and gpu::buildWarpCylindricalMaps functions, integrated into stitching
- Reverted change from r5802 (it breaks install target for Android platform)
- added tests for pyrDown and pyrUp (gpu)
- - make sure we don't crash for an empty image
- Version modifications.
- minor edits to cmake.
- Adding namemangling to the opencv.pc file.
- Merged name suffixes for windows (from 2.3 branch)
- Fixed compilation problem when building without CUDA
- fix for capture
- Fixed Android target name for Android samples and tests
- added several tests for java/core module
- fix for GPU module compile time (VS2010) error (from 2.3 branch)
- GPU: updated upsample, downsample functions, added pyrDown, pyrUp, added support of 16S filtering; put spherical warper on GPU (from opencv_stitching)
- Android tests are included into cmake build
- morphology.py sample stub
- Fixed Android tests resources and settings
- Added Affine Transformation tutorial in reST
- Added cmake script to build Android samples
- :ocv:function => :ocv:cfunction for some old API
- autogenerated JUnit stub tests added
- propagated some more fixes from 2.3 branch to the trunk
- opencv_test package renamed to opencv.test
- opencv_test package renamed to opencv.test
- Updated the TOC tree of the imgproc tutorial section.
- initial commit of JavaAPI unit tests
- Added Remap tutorial in reST
- Modified version section to read version number from version.hpp; Added search for ant and Android SDK (needed for Android tests and samples).
- Mixed up the linux_eclipse.rst file in the previous commit. Correcting it.
- Some reST syntax correction. Now the PDF documentation builds correctly under Windows using MIKTEX. Some update on the tutorial structure. Some CSS syntax correction. Windows Install Tutorial v0.4.
- propagated some more fixes from 2.3 branch to the trunk
- propagated some more fixes from 2.3 branch to the trunk
- propagated some more fixes from 2.3 branch to the trunk
- propagated some more fixes from 2.3 branch to the trunk
- Edit load and save to load, modify and save
- bump version to 2.3.1 in the header too (ticket #1178)
- Added 02 cpp sample files for tutorials: remap and Geometric Transformations (warpAffine and Rotation2D)
- fix #1169
- Android samples fixed - line endings are converted to unix style; autogenerated folders are added to ignore list
- Fixed native camera support in Android.mk
- Added new Android sample (Java API + Native)
- Added one more Android sample (using OpenCV from native)
- added CUDA version info to gpu tests
- added OS info to gpu tests
- fixed gpu tests
- fixed build under linux
- refactored gpu module tests
- Added second sample for Android Java API
- Fixes for path mangling feature
- Android sample is refactored according to Google code style guidelines for Android developers
- Added Hough Circle Tutorial in reST
- Added Hough Lines Tutorial in reST
- Fix for SSE swapping bug
- Added 02 tutorials for Hough Lines and Circle detection in tutorial_code -- based on code existent
- More work on the mangling of install paths.
- fix version in version.cmake
- First pass at name mangling based on version number, to support side by side installs of OpenCV2.3.0 OpenCV2.3.1 OpenCV2.4.x, etc...
- Added base Android Java sample
- Fixed windows compatibility problems in Android.mk
- Fixed Android.mk file generation
- Minor bugfix
- Fixed compiler options in Android build (Windows)
- Numerous small fixes in CMakeLists.txt
- propagated fix for Matx(Matx::diag_type) constructor from branch 2.3 to trunk
- removed the obsolete tests from the trunk as well.
- Added Laplace and Canny reST tutorials and corrected a small bug in Canny sample code
- Fixed OpenCVConfig.cmake generation for windows
- Eliminated cmake warning for case when python is not found.
- * Install path share/opencv is renamed to share/OpenCV. * Fixed zlib search. * Fixed compiler/linker flags caching bug. * Fixed OpenCVConfig.cmake generation (currently tested only on Unix).
- Updated conf.py with the latest added external links for tutorial docs
- Added reST tutorials for copyMakeBorder, Sobel Operator, updated links in conf.py
- Minor python search improvements
- Added rst Tutorial for Filter 2D
- Added Laplace, Canny and Sobel samples in tutorial cpp code
- added stereo_match.py sample
- Added two new sample files for copyMakeBorder and filter2D
- propagated fix for ticket #1168 to trunk
- - fix a bug if the descriptor is used for images of different size
- Modified install layout for Android
- Trunk: moved contructors implementations from .hpp to .cpp
- Trunk: moved contructors implementations from .hpp to .cpp
- Added video.hpp header (for convenience with other modules); added option to specify list of headers for Java API generator
- Updated build scripts for better Java module support
- Merging back 2.3 cmake changes.
- Corrected the place of accent in the name of Ana Huamán.
- New structure (following the documentation) for the tutorials. Normalized image sizes for TOC display.
- Cleaning up the doc/tutorials folder in preparation to add thew new structure.
- Added new module for Java API
- propagated some more changes from 2.3 to trunk
- propagated some more changes from 2.3 to trunk
- propagated some fixes from 2.3 to trunk
- added missing bdatypes.h
- fixed 2 bugs in reference manuals
- Fixed numpy search on Windows x64
- Fixed output paths for Android build
- Main CMakeLists.txt merged with 2.3 branch
- Removed SWIG from Android toolchain; always search for python; find_program/find_package cmake functions wrapped for case of cross-compiling.
- Added  tutorial for threshold in reST and fixed broken links from previous ImgProc tutorials
- Added Threshold.cpp in samples/cpp/tutorial_code/ImgProc
- Added reST tutorial documentation for Pyramids and added a few links to conf.py
- Added Pyramids.cpp sample tutorial code
- fix for ticket #1153 propagated to trunk
- Added tutorial in reST for Morphology 2
- Reorganized code and added Morphology 2 cpp code
- Deleting old tutorial files and put them in folders
- Folder Intro
- (trunk) Do not use prebuilt Android camera libs for armeabi hardware target
- Added generation of OpenCV.mk file for Android development with ndk-build tool
- Minor doc fix
- Added destroyAllWindows and docs (ticket #957).
- Qt: fixed signal of a clicked push button (patch #786)
- Qt minor doc enhancement
- temporarily reverted to FLANN 1.5 (FLANN 1.6 is put to a separate branch FLANN_1.6 until it's stabilized)
- Qt doc: specified an image type in the addText function (ticket #1144)
- added dummy symbol to flann to make OpenCV compile on Windows
- fixed errors and warnings when building with MSVC
- Bringing get_param and print_params into cv::flann namespace.
- Updated FLANN
- fixed formula in cvIntegral/integral description
- fixed problem with non 4:3 cameras (ticket #142)
- use original image type (8-bit grayscale or 24-bit RGB) in the case of RAW video (ticket #782)
- fixed positioning in ffmpeg wrapper (thanks to mike_at_nrec for the patch). Added frame positioning feature to laplace demo to test the feature
- fixed positioning in ffmpeg wrapper (thanks to mike_at_nrec for the patch). Added frame positioning feature to laplace demo to test the feature
- added explicit Mat_<T>::Mat_(const MatExpr&) (resolves ticket #996)
- Purpose: 2nd review cycle.
- fixed memory leaks in fromarray (thanks to Matthew Baker for the patch!)
- work on obj_detect.py added square_size cmd line param for calibrate.py added _coverage.py script to compute cv2 api coverage by samples (just for interest, may be removed later)
- Added tutorial in reST for Morphology 1
- Purpose: 2nd review cycle - see ?? .
- Purpose: 2nd review cycle - see ?? . wrong syntax format
- Morphology code 1 added to tutorial-code/Image_Processing
- Purpose: 2nd review cycle.
- Fixed a small link error in documentation
- Added Smoothing tutorial in reST and links to the code in  samples/cpp/tutorial_code
- use "-O2 -DNDEBUG" in release by default in the case of MinGW
- fixed warnings in gbt; added insertChannel() and extractChannel(); made the code "rand{u|n}(arr, <number>, <number>)" work properly.
- removed serveral CV_EXPORTS_AS() to make Python function names in cv2 the same as in C++.
- Purpose: 2nd review cycle.
- Purpose: 2nd review cycle.
- Purpose: 2nd review cycle - see ?? .
- fixed calibrateCamera API (ticket #1143)
- fixed crashes in camshiftdemo (ticket #875)
- New basic filter sample added
- corrected estimateAffine3D parameter name: outliers=>inliers (ticket #1141)
- added reduce(..., CV_REDUCE_MIN/CV_REDUCE_MAX, ...) for 16u/16s (ticket #1145)
- work on obj_detect.py sample (in progress...)
- fixed potentially incorrect memory access in cv::transform
- Added sample code for tutorial - cpp
- set default compiler flags to "-O2" in the case of MinGW
- improved build of installer package for windows
- Added cmake file to compile Android native camera wrapper if Android source tree is available
- fixed #1140 and made some other updates of features2d docs
- fixed typo in opencv_stitching
- turned off Python support for Windows in Debug mode
- fixed compilation on Linux in static case
- modified output stream
- completed doc on MLData
- updated check_docs script and whitelist
- Fixed Android install target
- removed old data
- uncommented Opponent descriptors test, fixed descriptors mat size
- Added doc on CvMLData
- minor refactoring of CvMLData interface
- Qt: fixed keyPressEvent (ticket #803)
- work on obj_detect sample
- removed trailing backspaces, reduced number of warnings (under MSVC2010 x64) for size_t to int conversion, added handling of samples launch without parameters (should not have abnormal termination if there was no paramaters supplied)
- Updated NDK default paths for version r5c
- Added Android native camera module
- A "Hello World" like tutorial to assure that I have submit rights to the tutorial section.
- Qt: fixed destroyAllWindow crash (patch #794)
- Fixed MacOS GPU Compilation for i386
- added missing audevcod.h
- added missing errors.h
- Qt: fixed using of OpenCV in another Qt app (patch #919)
- introduced new RST/Sphinx domain ocv.
- Qt: fixed resizing of maximized window (patch #858).
- minor change (moved methods implementation from hpp to cpp)
- tabs
- little fix: "and" => "AND"
- another small correction to build cap_dshow.cpp in highgui
- added missing evcode.h; made videoinput optional (ticket #1142)
- fixed "bitrate tolerance too small for bitrate"
- bugfix in warpAffine, correct buffer size should be used
- videoInput is now integrated into highgui and built from sources
- brief gbt documentation added. some sample fixes made. code updated.
- Purpose: 2nd review cycle: many links in this topic are broken (don't know why). The table in the very beginning includes two functions only. what about the rest?
- fixed gcc dwarf2 check
- turned off WITH_VIDEOINPUT for mingw with dwarf2
- use cv2 function added color_histogram.py sample work on VideoSynth (chessboard)
- minor formating
- fixed compilation error on MCVS in descriptors.cpp
- QT: fixed exceptions (ticket #901)
- some more corrections in the docs
- fixed OpponentColorDescriptorExtractor (#1109)
- added variational stereo correspondence (by Sergey Kosov) and polynomial fitting (by Onkar Raut)
- fixed gpu::cvtColor
- fixed erasing class_id and  response members in sift (#1130)
- minor
- Fixed wheel zoom with QT (ticket #733)
- default cuda target flags changed cuda support is on by default
- Modified conf.py. Added extlinks for the tutorials
- Added a extlinks section for external links to the OpenCV cpp reference
- Added two more drawing tutorials
- [*] Approach to the bug with integral image calculation on SM_2.0 (Fermi)
- Saving the first batch of tutorials: Short installation guide and a few tutorials for beginners
- python helper routines (common.py) added
- fixed test_precornerdetect, test_findstereocorrespondence, test_calchist
- fixed compilation on Mingw64
- removed DOT implementation
- work on calibration sample
- fixed multiple GCC warnings on Ubuntu 11.04
- minor fix
- added __forceinline__ to device functions fixed BFM warning ("cannot tell what pointer points to")
- fixed bayer pattern picture in cvtColor() description; corrected formula in getGaussianKernel()
- fixed #768 ticket renamed OPENCV_SOURCE_DIR to OpenCV_SOURCE_DIR
- fixed #768 ticket
- fixed ellipse orientation in fitellipse.py
- added new version of ffmpeg binary for compilation on Mingw64/MSVC64
- removed MultiGpuManager from docs
- fixed csbp test under linux
- fixed csbp test for CC 1.x
- applied patch from ticket #801
- added missing highgui wrappers (ticket #1040)
- applied patches from #1005
- Purpose: 2nd review cycle - check ?? - problems with the output in the syntax sections.
- return Py_None for an empty mat (should fix #1120)
- calibrate.py added (broken) work on video synth
- fixed ticket #983
- fixed ticket #983
- renamed sum() to sumElems() in Python/Java bindings (ticket #902)
- extended Mat::setTo() to support multi-channel arrays; fixed bug #1095
- Purpose: 2nd review cycle - check ?? - problems with the output in the syntax sections.
- Purpose: 2nd review cycle - merged eng and tw versions.
- added progress output to the long-time tests (for buildbot)
- changed uint to unsigned int
- fixed problem with norm in opencv_test_core
- fixed a few warnings and bugs, including ticket #1079
- switched from argparse to getopt for compatibility with Python 2.6
- ~40 warnings under VS2008 HAVE_CONFIG_H -> HAVE_CVCONFIG_H
- data_mov_utils.hpp
- Minor doc fix
- Added documentation of segmentMotion from cvSegmentMotion doc
- fixed tickets #1117 and #954
- Copied docs of Kalman Filter from source code to documentation
- Minor doc fix
- Minor doc fix
- make type registration ordering in cv2.so consistent with the declaration order (fixes the class hierarchy; see ticket #1113)
- added implementation of CvHaarFeatureParams::read() in traincascade application (#1061)
- reverted broken opencv_test_core launcher
- fixed cascade detection on images of size equal to feature size (#1070)
- Minor.
- Copied docs of background/foreground segmentation from source code to documentation
- multiple cameras and frame saving in video.py
- Minor doc change
- fixed ticket #892
- next attempt to fix ticket #1121
- fixed RNG::uniform(double,double) (ticket #1131)
- updated matches checking in opencv_stitching
- continued cleaning up the docs and fixing hyperlinks (".. index:: <name>" and ".. _<name>:" are not needed anymore)
- fixed #916
- Documented the SimpleBlobDetector class.
- Minor change of SimpleBlobDetector
- Reduced logs count in Android camera
- reverted samples with new command argument parser. will be continued after OpenCV release.
- added support of several kinects (#1105)
- temporary commit before samples revert
- Removed unnecessary function from SimpleBlobDetector
- Simplified SimpleBlobDetector to make it simple)
- changed temporary filename and aligned RGB data with XYZ data (#867)
- reverted wrong commit for one of gpu samples
- fixed bug in opencv_stitching (corrected resize images step), added matches checking (both 1->2 and 2->1 must be presented)
- Delete unnecessary comments
- Help and parsing command line were updated in next samples: chamfer
- Help and parsing command line were updated in next samples: camshiftdemo, calibration_artificial
- minor fix
- fixed gpu::cvtColor according #5324 changes
- removed cv_config
- video synth uses cv2.randn for noise -- much faster than np.random.normal
- Update sample: change help and added CommandLineParser using
- Some warning fix. Initial multicast get property support
- Added doxygen doc to getBackgroundImage
- a lot of small corrections to bring down the number of undocumented functions, reported by the script; added em.cpp sample
- a lot of small corrections to bring down the number of undocumented functions, reported by the script; added em.cpp sample
- some more core functions documented + minor fixes and rearrangements
- added "whitelist" capability to the documentation check script
- improved convertPointsHomogeneous documentation. added convertPointsTo/FromHomogeneous (ticket #1011)
- handle empty YAML's correctly (ticket #1127)
- Fixed cv namespace boldface (from ticket #991)
- Fixed matchTemplate doc (ticket #1045)
- Fixed coefficients order in solvePoly doc (ticket #1060)
- fix and some enchantments for matching_to_many_images sample (#869)
- Fixed mistakes in help
- Fixed python AbsDiffS doc (ticket #1097)
- Fixed createButton brief doc (ticket #785)
- Updated CvSparseMat doc (ticket #679)
- optimized retrievePointCloudMap (#1106)
- Little fix for multicast (we'll testing in a real multicast environment in the next days)
- Updated docs of findCirclesGrid()
- Specialization for 'get' method with bool type was added, help and constructor were updated too
- Added the EMD function description (ticket #696)
- Added documenation of the Earth Mover Distance (C++ interface, ticket #696)
- added upright mode to SURF (#825)
- renamed "None()" to "noArray()" to avoid conflicts with X11 (ticket #1122)
- Notification messages about bad parameters in command line were added in CommandLineParser. Update sample, using parser
- started work on API & doc synchronization (in particular, Mat& => Input/OutputArray in the descriptions)
- python cv2: simple video capture and synth framework stub edge detection sample
- Fixed comparison methods in cvMatchShapes (ticket #1012)
- Used literal blocks instead of the LaTeX verbatim environment
- removed constraint to max_iter in CvANN_MLP (#1110)
- Fixed the RGB2HSV formula (ticket #868)
- replaced M_PI by CV_PI
- Asked users to pass two operation flags tothe sort() function (ticket #315)
- Fixed Mat::channels() brief documentation (ticket #1064)
- class CommandLineParser was updated according new requirements
- excluded "-B" flag for better compatibility with old Python.
- added CvEM read/write (#1032)
- Minor change to contourArea example
- python cv2 sample: coherence enhancing
- added one more SIFT::CommonParams constructor
- Attempting to add support for openni depth registration.
- added CV_CAP_PROP_PVAPI_MULTICASTIP property (thanks to Stefano Fabri for the patch)
- fixed VS2010 compile warnings and errors
- replaced "const InputArray&" => "InputArray"; made InputArray and OutputArray references. added "None()" constant (no array()).
- added some constants to python cv2 api
- removed duplicated check
- added BUILD_WITH_STATIC_CRT option for static linking with CRT on MSVC
- Android native camera is updated to support RGBA output
- python cv2 sample: hi-res image browse
- python cv2 sample: GMM expectation-maximization
- added python cv2 port of letter_recog sample
- YUV420i to RGB conversion is added to cvtColor
- updated cheatsheet; fixed a few typos
- added CV_64F support to cv::remap (ticket #650)
- The samples were updated through CommandLineParser class
- added 16-bit support to Bayer2RGB & Bayer2Gray (ticket #686); fixed bug in cv.CreateHist() when no ranges are passed (ticket #990)
- Added missed method declarations. Fix for r5343
- The samples were updated corresponding a single standart for <help>
- added 16-bit support to Bayer2RGB & Bayer2Gray (ticket #686)
- minor formatting
- Added displaying of the mean background image in the bgfg_segm sample (ticket #317).
- Added computing of the mean background image in the BackgroundSubtractorMOG2 model.
- fixed incorrect output of resize(...scalex, scaley, INTER_NEAREST) when scalex and scaley are even integers (ticket #1013)
- Fixed Android build
- added several new highgui tests
- fix compilation for macos
- added check input data
- - fixed the grayscale case
- - make sure we deal with a grayscale image
- - fix potential crash if the first scale level is not 0
- converted all highgui tests to the format of google test system
- Removed direct tiff writing to in-memory buffers if libtiff is used
- fixed drawing test
- added begin/and with Thrust iterators for Device classes
- Added reading of floating point tiff data: 32- and 64-bit (ticket #955)
- fixed error in gcgraph which led to problems in opencv_stitching GC seam finder, added check for duplication in matches (opencv_stitching)
- improved CV_RGBHSV_FULL accuracy (ticket #938)
- commented several tests because it's very slow
- converted drawing tests to the format of google test system
- fixed problem with static compilation of highgui_tests on Windows
- fixed ticket #675
- added a test on read/write images
- Added writing of compressed tiffs using libtiff library (patch #1080, thanks to Pieter-Jan Busschaert)
- minor fix in highgui tests
- Quiet the errors from the circlesgrid pattern detector. These were really verbose.
- very first version of the documentation checking script
- Placed the if in the wrong place.
- Fix misspelling of a logical block endif.
- - fix a memory leak
- Wrapping the tests in an if guard. Fails to build if the BUILD_TESTS flag is not enabled.
- minor fix
- fixed bugs for windows. added 2 tests for ffmpeg
- compilation for macos
- compilation for macos
- added opencv_test_highgui
- mac worlaround
- fixed logging function in opencv_stitching
- make scalar and SSE versions of minEigenVal & cornerHarris give [almost] the same results (ticket #811)
- proper fix for reduce with op=CV_REDUCE_AVG and ddepth==CV_8U
- added \n into help message (opencv_stitching)
- fix bilateral filter behavior when color_sigma == 0 and/or spatial_sigma == 0 (ticket #469)
- Removed using of homogeneous coordinates in cvProjectPoints2 (ticket #845)
- fixed compilation problems with new SIFT on Android
- Fixed cluster centers returning in cvKMeans2 (ticket #706)
- added resetDevice function, removed MultiGpuManager
- Fixed reading of the user class from *.xml (ticket #840).
- compilation for windows
- Added support of the CV_64F depth to solvePnP (ticket #835)
- minor
- - serialize/deserialize the edge threshold too
- - make sure we rescale the input keypoints
- - hide the patch size from the user (only one is used now as training was only done at that scale) - enable a border_threshold just like for SIFt so that calling ORB, or descriptor after feature gives the same number of features
- Fix # of features in orb.
- fixed compilation problems with new SIFT on Windows
- fixed compilation problems with new SIFT on MacOs
- reverted the floating-point number formatting (exception in ml tests)
- removed ddepth from matrix (after Vadim's commit, it generates problem with core and ml tests) returned the new floating-point number formatting
- replaced SIFT implementation (Some default parameters can be changed in the near future)
- commented opponent descriptor test (temporarily)
- added SSE compiler flags under Windows+MSVC (ticket #371)
- resolved ticket #1104 (processing of transposed numpy arrays)
- removed evaluation testbetch to sample
- fixed multi-channel 1x1 array construction (ticket #1103)
- reverted the floating-point number formatting
- fixed build on GNU/Hurd (ticket #761)
- Added support of the 1 width element in morphology (ticket #1099).
- always build ffmpeg_opencv as a shared lib (ticket #687)
- added KeyPoint::hash() (ticket #1100)
- removed OPENCV_BUILD_SHARED_LIB in favor of BUILD_SHARED_LIBS removed one more OPENCV_BUILD_SHARED_LIB flag
- fixed warning from GCC
- resolved tickets #904 (nicer floating-point formatting) and #816 (reduce with CV_REDUCE_AVG on 8-bit arrays)
- Made small optimization: for some processors using float accumulator gives speedup.
- removed OPENCV_BUILD_SHARED_LIB in favor of BUILD_SHARED_LIBS
- modified according to CUDA 4.0 API updates
- updated help message in opencv_stitching app
- Making the install and lib, bin directories consistent.
- Purpose: 2nd review cycle - see ??. added index entries
- Update CommandLineParser class: move method's definition from header to source
- fixed sample
- Fixed #727
- updated default params for preview mode (opencv_stitching)
- fixed problem with VideoInput on Windows when OpenCV compiled statically (ticket #573) added ignore linker flags for opencv2_python
- fixed problem with VideoInput on Windows when OpenCV compiled statically (ticket #573)
- Tegra optimization of cv::threshold
- added optional encoding parameter to cvOpenFileStorage() and FileStorage::open() (ticket #976). moved some implementation parts of CommandLineParser to cmdparser.cpp.
- minor change
- added --blend_strength parameter into opencv_stitching
- fixed drawKeypoints (keypoint orientation)
- Fixed #797.
- Fixed #886
- updated help message (opencv_stitching)
- Added drawing of a new image for debugging of the SimpleBlobDetector class.
- Fixed #1063
- updated --help message (opencv_stitching)
- removed confusing CvCapture::queryFrame(); rewritten cvQueryFrame() (ticket #235)
- update help corresponding single format and update some samples through using CommandLineParser class
- Fixed windows build scripts in HelloAndroid sample.
- Updated build scripts for HelloAndroid sample.
- minor refactoring of opencv_stitching
- added block-based gain compensator (opencv_stitching), added --preview flag.
- update help according single standart for it
- Update CommandLineParser class
- refactored exposure compensators (opencv_stitching)
- fixed mat.push_back(mat) (ticket #1091)
- compile cv2.so also as a shared library
- Adding a default constructor to ORB that initializes. Had segfaults on non initialized orb detector.
- cv.so library always compiled as shared library
- use FindZLIB(), FindJPEG() etc. on MacOSX as well to avoid possible conflicts with MacPorts.
- removed test output
- renamed WITH(HAVE)_EIGEN2 to WITH(HAVE)_EIGEN, fixed compilation error if eigen3 is used (#805)
- added GC_COLOR_GRAD cost function type into opencv_stitching
- minor changes in opencv_stitching
- fixed crash in cv2.findHomography() (ticket #1094)
- Purpose: 2nd review cycle - see ??. added index entries
- Purpose: 2nd review cycle
- added some comments into multi-band blending code
- updated default parameter in opencv_stitching
- replaced brute force matcher with flann based one (opencv_stitching)
- minor changes in opencv_stitching
- made datamatrix build on Windows; fixed unresolved symbols
- added number of bands cropping in multi-bands blending
- fixed some bugs in opencv_stitching
- added gain compensation into opencv_stitching
- fixed bug in SURF_GPU (compute descriptors, tid < 25)
- fixed bug in SURF_GPU (reduce_sum25)
- - set the right comparison distance for ORB
- - fix the test for ORB (it's a binary feature)
- - fix a possible crash when only asking for features and not descriptors
- adding c++ interface to the datamtrix codes of j.
- Reverting the boost::python bindings, moving dev to out of trunk.
- Implemented 4 missing Mat::ptr methods
- Small change in the SURF algorithm to be sure that without TBB the template parallel_for is not used (the reason: the parallelization in the SURF algorithm conflicts with ThreadingFramework, which is a temporary substitute of TBB for ARMs)
- added exposure compensation base class into opencv_stitching
- fixed formatting a bit
- do not use system is<alpha|alnum|space|...>, because of the different implementations (and in OpenCV we assume english names of the identifiers etc)
- fixed vector resize in the ORB detector
- improved jSVD accuracy
- added TBB optimization to DOT
- reduced memory requirements for multi-band blending
- minor optimization of SURF_GPU (orientation calculation, changed block size to 32x4)
- updated focal estimation again (opencv_stitching)
- updated focal estimation (opencv_stitching) + refactoring
- Adding python default install path for debian vs mac. changing site-packages -> dist-packages. See python help for site. Also ticket #1087.
- Purpose: 2nd review cycle
- Purpose: 2nd review cycle
- - fix possible crash introduced by cvRound
- Applying patch mentioned in ticket #1085
- minor SURF_GPU optimization (descriptor calculation, change block size to 6x6)
- Initial pass at some boost python bindings.
- minor changes in opencv_stitching
- fixed 2 bugs reported by exvan (ticket #799)
- avoid crash in the case of multiple pyramid levels
- switched float with short in blending step (opencv_stitching)
- minor memory optimization in opencv_stitching
- implemented images pairwise matching via TBB (opencv_stitching), added procomp.hpp
- minor fix
- minor optimization of SURF_GPU (reduce memory transfers, use structure of arrays instead of array of structures)
- fixed features2d (ORB) compile errors on Windows
- updated usage message (opencv_stitching)
- fixed bug in graphcut seam estimation (opencv_stitching)
- added scaling of images before seam estimation (opencv_stitching)
- fixed several typos, including the old ones from ticket #854
- Use INVALID_DISP_SCALED instead of INVALID_DISP in validateDisparity (ticket #1007)
- replaced #include <some_opencv_hdr> with #include "some_opencv_hdr" (ticket #719)
- return NULL in the case of incorrect camera index (ticket #710)
- - assign some members outside the header (fixes #1081)
- bugfix for Windows x64, Visual Studio 10
- made number of bands in blending parameter
- more refactoring of opencv_stitching
- some samples updated according to new CommandLineParser class
- updated poor pairs filtering in opencv_stitching
- memory optimizations in opencv_stitching
- refactoring in opencv_stitching
- changes blenders interface in opencv_stitching
- allow lower-case utf-8 encoding specification as well
- one more fix with encoding when reading/writing XMLs
- - add missing tests for ORB - remove useless code for 2.3
- - adding ORB
- fixed reading/writing of utf-8 strings
- Tegra optimization for calcOpticalFlowPyrLK
- removed duplicated output, added the print of first and last points always
- fixed sample
- minor changes of recall-precision output
- refactored opencv_stitching
- added number of bands estimation in opencv_stitching
- added histograms comparison into opencv_stitching
- fixed #1069  (cvflann::set_distance_type - Unresolved external under VS2008)
- alter the read stage.threshold to match traincascade behavior (ticket #1071)
- fixed top-right and bottom-right corners filtering in the case of constant border (ticket #1058)
- Tegra optimization for yuv420i to rgb conversion
- added time measurements into opencv_stitching
- fixed bug with possible memory corruption in CvMat m = iarray.getMat(); expressions (ticket #1054)
- minor changes in opencv_stitching
- reduced memory requirements in opencv_stitching
- added parameters controlling resolution into opencv_stitching
- fixed bug with crash in HoughCircles & HoughLines when no circles/lines are detected (ticket #1066)
- compilation under mac
- fixed OpenCV_DIR
- added the link in doc on kinect
- modified focal estimation function in opencv_stitching
- minor fix
- minor refactoring in opencv_stitching
- added leaveBiggestComponent function into opencv_stitching
- GpuMat::setTo optimization (call cudaMemcpy2D if possible)
- removed debug print statement from cvMixChannels()
- copied helper modules from doc to modules/python/test
- fixed a few warnings on Windows; fixed critical bugs in cvMixChannels and AutoBuffer<>.
- fixed a few warnings from VS2010 express
- minor changes in opencv_stitching
- fix build problems on Windows
- - extra spaces are removed - static class member modifier processing is fixed (moved from 'rettype' to 'func_modlist')
- solution folder flag disabled by default
- solution folder flag disabled by default
- added missing #include for compatibility with VS2008
- changed default args values for opencv_stitching app
- minor bugfix
- Parallel version of YUV->RGB conversion for Android camera
- fixed #808 and #848
- update gpu docs (SURF and BruteForceMatcher)
- added support of Hamming distance to BruteForceMatcher_GPU
- refactored opencv_stitching
- Purpose: updated the feature2d chapter
- command line parser added. Leonid Beynenson is original contributor of the class. Class will be used in samples for convenient (and unified) work with command arguments.
- Purpose: completed the calib3d chapter
- Purpose: completed the objdetect chapter
- Purpose: completed the ml chapter
- some renames
- added missing #include "ctype.h"
- removed "#include "windows.h"" from core headers
- removed unnecessary #include "windows.h" from "highgui_c.h"
- Small Android build fixes
- made "filestorage << vector<Mat>" work properly.
- disabled creation of hdr_parser.pyc
- cv:threshold optimization for Tegra
- make ubuntu 11.04 compile with libv4l
- Fixed Android build
- reviewed ? marks in features2d
- Removed outdated build instructions
- Added simple command line sample for Android
- small updates to bundle adjustment implementation
- Removing auto-generated file
- Fixing build for Android
- formatting
- minor
- fixed pch for non-windows
- [+] added use_folders cmake feature if cmake version is greater then 2.8.0 [~] fixed warning in featuers2d under windows (can't generate assignment operator)
- restored 2 methods (for backward compatibility)
- extended the constructor parameters of  AdjusterAdapter's inheritors
- fixed DynamicAdaptedFeatureDetector
- fixed paths to demo python scripts
- minor
- problem with the supported data matrices types is fixed minor fixes in CvGBTrees, its test and sample
- added lightweight class DeviceBuffer to matrix_reductions.cpp
- fixed LUT (ticket #1057)
- reduced memory requirements for multi-band blending
- converted user guide & tutorials from tex to rst; added them into the whole documentation tree; added html_docs target.
- Final version of scripts for Android cross-compilation on Windows.
- fixed save/load of dot; added data for the sample
- fixed gpu::meanStdDev and gpu::norm under CUDA 4.0 fixed compilation under Win64
- Made changes in Android camera classes: now we can get list of possible preview resolutions of Android camera (as string). Also now work of Android camera is more accurate in the case when the size of grabbed frame buffer does not consist with the expected frame size.
- changed the dot
- fixed gpu projectPoints and solvePnPRansac tests
- fixed bug in cv::Scharr and cv::Laplacian (ddepth < 0)
- fixed bug in cv::Sobel (ddepth < 0)
- fixed bug in cv::LUT (multi-channel source array and single-channel table) added missing cudaSafeCall
- Updated Android cross-compilation on Windows.
- made ptrdiff_t visible to GCC 4.6 compiler
- repaired opencv refman & refman1 build
- moved the new docs from docroot to doc
- moved the new docs from docroot to doc
- moved the new docs from docroot to doc
- moved the new docs from docroot to doc
- moved the new docs from docroot to doc
- moved the new docs from docroot to doc
- moved the new docs from docroot to doc
- moved the new docs from docroot to doc
- moved the new docs from docroot to doc
- moved the new docs from docroot to doc
- updated conf files to use the blue theme
- removed obsolete docs
- Purpose: completed the feature2d chapter
- Purpose: completed the feature2d chapter
- Purpose: updated the feature2d chapter
- Purpose: updated the feature2d chapter
- Purpose: updated the feature2d chapter
- more warnings fixed. +some warnings in examples
- fixed compilation WITH_TBB
- fixed ~300 warnings under windows (had to hack gtest a bit)
- Added missed CMakeCache.android.initial.cmake to windows build scripts
- Purpose: updated the feature2d chapter
- change state of pipeline to NULL before freeing.
- Removed excess l
- fixed warning: can't generate assignment operator
- Fixed Android API level detection for toolchain build
- Added extra argument for BlobDetector in findCirclesGrid
- Refactored NEON optimization usage
- fixed #1048
- do not include DLLMain into core when it is a static library (thanks to aglinarth for the patch)
- restored img_proc_test main() call; removed windows.h from ml.hpp
- Added a fast algorithm for the symmetric circles grid detection
- refactored opencv_stitching
- now BA in opencv_stitching uses only geometrically consistent matches
- added wave correct support into opencv_stitching
- added --ba_thresh key into opencv_stitching CLI
- fixed BA error calculation in opencv_stitching, added draft version of waveCorrect
- fixed problems indicated with ? marks
- opencv_stitching refactoring
- fixed some tests in gpu module
- fixed #1046
- fixed #1044
- fixed generation of Python wrapper cv2.
- Purpose: updated the feature2d chapter
- added missing Python wrappers for OpenCV 1.x
- changed GBT parameters in sample
- fixed #1025
- added image stitching module
- fixed #1038
- fixed bug in BruteForceMatcher_GPU::knnMatch (allDist buffer reuse)
- Purpose: updated the feature2d chapter
- fixed artifacts in warpPerspective (ticket #1024)
- separated opencv 1.x and opencv 2.x wrappers. moved tests/python/* to modules/python/test
- removed comments in Russian
- corrected angular difference check in MSER test (thanks to Pieter-Jan Busschaert for the patch)
- Fix a litte bug on matrix subtraction
- added aligned memory allocation to CudaMem (if allocation type is ZERO_COPY) fixed bugs in gpu::cvtColor
- Android cmake toolchain file is included into OpenCV
- fixed typo in fitellipse err message (ticket #365)
- updated OpenCV version to 2.2.9; added missing cv::convertPointsHomogeneous for backward compatibility; fixed bug #952
- Purpose: updated the video chapter
- Purpose: updated the highgui chapter
- fixed #887
- minor
- make CMAKE_INSTALL_PREFIX available on Windows as well
- added the filtering of keypoints having zero size (#877)
- fixed opencv-ffmpeg compile bug with MinGW (thanks to takacsd for the patch)
- minor changes
- fixed several warnings from Xcode 4 LLVM compiler; fixed bug #920
- added new ML models to points_classifier sample
- fixed CvGBTrees
- fixed CvBoost
- added new sample on ML models
- Purpose: updated the highgui chapter
- Purpose: completed the imgproc chapter
- Purpose: completed the imgproc chapter
- Purpose: completed the imgproc chapter
- Purpose: completed the imgproc chapter
- Purpose: completed the imgproc chapter
- Purpose: completed the imgproc chapter
- Purpose: completed the imgproc chapter
- Fixed output paths for some libraries and executables. Added option to force disable precompiled headers.
- Fixed tests compilation issue with low Android API levels. OpenCV successfully compiles for API level 3 and above. Enable tests for Android by default.
- Conditional for the module ts, depending on whether tests are being built.
- Dissable tests for android by default.
- Changed algorithm of Android camera synchronisation --- added "auto-grab" mode.
- fixed #932
- fixed #982
- fixed bug in solvePnPRansac test (thanks to Pieter-Jan Busschaert) test was refactored
- fixed #832
- Merged the branch /branches/opencv_pthread_framework/opencv into the trunk. The branch contains changes, concerning adding ThreadingFramework -- temporary lightweight decision for ARM instead of Intel TBB. Also some changes in Android highgui camera class were made.
- fixed bug in knnMatch method
- fixed bug in knnMatch method
- made the samples compile on Windows
- fixed couple of integral-related bugs
- added extra check to avoid crashes
- corrected the output euler angle on y axis in RQDecomp3x3 (thanks to Lasve for the patch)
- fixed compile errors on Ubuntu 11.04
- removed duplicated directory
- corrected badarg test of findchessboardcorners (thanks to Pieter-Jan Busschaert)
- fixed bug with misaligned data access (on Windows & Linux)
- fixed typo
- fixed corners emptiness check in drawChessboardCorners (thanks to thomask)
- fixed failing GPU projectPoints and solvePnPRansac tests
- fixed highgui build on Windows
- fixed libpng build on Windows
- moved image codecs' headers to the respective subdirectories; allow the user to use system zlib.
- moved image codecs' headers to the respective subdirectories; allow the user to use system zlib.
- fixed compile errors on Ubuntu
- started to integrate DOT detector
- fixed typo in cv::erode description
- do not define CVAPI_EXPORTS when OpenCV is built statically (thanks to Mika Fischer for the patch)
- made png codec in highgui compatible with libpng-1.5 (thanks to wiz for the patch)
- make sure filter2D does not use uninitialized buffers (thanks to flkleber for the patch)
- fixed repeated allocation of RNG on each theRNG() call (thanks to barjenbr for the patch)
- bugfix for highgui crash on Windows in debug mode (ticket #752) has been propagated from branch 2.2 to trunk
- simple mean for decode
- restore data matrix
- removed obsolete tex docs in order to avoid possible confusion
- datamatrix
- do not use Lapack anymore
- do not use Lapack anymore
- [~] Updated GPU module install target to copy NCV.hpp and NPP_staging.hpp to the package include directory
- [~] Added nppStSetActiveCUDAstream and nppStGetActiveCUDAstream to the export table
- added 16-bit support to TiffEncoder (restore after #4919)
- fixed jump over initialisation bug.
- fixed compile-time bug under Ubuntu
- [~] Minor refactoring, clean-up [+] Added 128-bit transpose
- Purpose: updated the imgproc chapter
- If a pipeline is specified manually, this has to be done in full now, ending with appsink. For example:
- removed private copy of gstappsink because appsink is now part of gstreamer base.
- fixed compile error (ubuntu64)
- added overloaded variants of findHomography & findFundamentalMat for backward compatibility
- * added property CV_CAP_GSTREAMER_QUEUE_LENGTH * removed unnecessary memcpy * fixed minor memory leak
- - make sure the code compiles with gcc 4.6
- class MeanshiftGrouping replaced from objdetect.hpp to cascadedetect.cpp
- A little fix in haar cascade
- moved precomp.hpp before all other headers (to repair PCH mechanism). moved tables from the header to datamatrix.cpp
- Added ROC-curve calculating to the cascade detection algorithm
- fixed linker errors by adding CV_EXPORTS to the exported DataMatrix functionality;
- some more minor fixes in datamatrix: warnings eliminated, replaced MMX intrinsics (which are not recommended to use on x64) with SSE2.
- #1018: predicate on SSE2
- temporary fix for problem with compilation sse intrinsics on Windows
- Android compatibility fix: avoid regex.h include to be able to build OpenCV for platform android-5
- removed compiled hdr_parser.py
- added 16-bit support to TiffEncoder
- datamatrix
- datamatrix test image
- datamatrix
- small correction to the previous patch (also by Konstantin Krivakin)
- Fixed remaining Android compatibility issues: added compiler flag to interpret char as signed char.
- Fixed #1004
- Fixed #998 and #999: OpponentSIFT and OpponentSURF regression tests failure on Android
- Tutorials
- integrated parallel SVM prediction; fixed warnings after meanshift integration
- The bug was fixed
- fixed ?? marks; fixed missing highlighting in some of the sections
- Added to objdetect module: meanshift grouping (groupRectangles_meanshift(...) for input rectangles); new pedestrian detection model, trained on the Daimler base (getDaimlerPeopleDetector(...) ). Some changes in the HOGDescriptor class interface(objdetect.hpp) (added useMeanShiftGrouping parameter to the detectMultiScale(...) function)
- fixed build issues related to changes in IPP calls.
- minor changes: removed trailing spaces in some files
- fixed OutputArray::create, which resolves several failures in opencv_test_core
- fixed crash in test_core
- fixed build problems on Windows
- corrected the errors in the python's tests
- Android compatibility fix for r4885: __kernel replaced with filter_kernel
- Android native camera: added BGR output format; added methods to configure output frame size.
- Purpose: updated the imgproc chapter
- a big patch; use special proxy types (Input/OutputArray, Input/OutputArrayOfArrays) for passing in vectors, matrices etc.
- moved Python bindings source code into src subdirectory; preparing to add python/doc and python/test subdirectories
- fixed build issue (MSVC2010, x64)
- Added checks for incorrect results in the circles grid pattern detection.
- Implemented new algorithm for asymmetric circles pattern detection. Use flag CALIB_CB_CLUSTERING.
- removed obsolete tests
- removed obsolete swig-based python & octave wrappers
- removed obsolete tests
- normal bayes classifier has been parallelized using TBB; letter_recog sample updated to demosntrate knearest & bayes classifiers (thanks to Konstantin Krivakin for the patches)
- When opening a file with GStreamer: * if the filename looks like a URI, it is opened in non-blocking mode, cvQueryFrame() could skip frames or grab one frame more than once * if the filename looks like a filename, it is opened in blocking mode. cvQueryFrame() grabs consecutive frames * otherwise the filename is interpreted as a gstreamer pipeline as used with gst-launch. The last element of the pipeline has to have the property name=to-opencv
- Test system included into Android build
- fixed gpu::downsample and gpu::blendLinear compite-time bugs under Ubuntu
- Purpose: updated the core chapter
- Purpose: updated the core chapter
- Purpose: updated the core chapter
- added downsample function into gpu module, refactored it a little bit, added guard for CUDA related include in cascadeclassifier_nvidia_api.cpp
- added blendLinear into gpu module
- Bugs in the test for LatentSVM were fixed.
- Purpose: updated the core chapter
- [~] Refactored, cleaned up, and consolidated the code of GPU examples (cascadeclassifier and cascadeclassifier_nvidia_api)
- no Window named "Object SURF" has ever been created, shouldn't destroy such one.
- - make sure the code compiles under gcc-4.6
- A few scripts to each making the sample.
- Merged android-experimental branch back to trunk.
- improved tree_engine.cpp sample (added train file data specification; print sorted variable importance table)
- refactored FaceDetection GPU sample
- [*] Fixed #974 ("GPU CascadeClassifier fails with some training files"): Moved IsNodeLeaf bit from NodeDescriptor to FeatureDescriptor for both left and right nodes, therefore from now on max number of rects in a feature is 31
- patched spilltree for better compatibility with multi-threaded apps (thanks to Kevin Keraudren)
- beta cmake file for cuda4.0 (requires "cudafe", Mar 24 2011 22:01:27 or latter)
- Purpose: updated the core chapter
- added documentation on LatentSVM algorithm
- to test buildbot (1)
- to test buildbot
- removed duplicated comments
- tbb search improvement
- extended libdc1394 backend (the patch is by Michael Joachimiak)
- restored several tests on features2d after moving on google tests
- knearest training has been threaded (thanks to Konstantin Krivakin)
- minor changes in gpu performance sample
- Purpose: updated the last section of chapter 10
- fixed bug in complanarity check in cvEstimateRigidTransform (thanks to Luca Del Tongo)
- minor bug in hog (unbind texture)
- added ROI support for HOG_GPU
- fixed remaining ??
- do not enumerate subsections (individual functions and classes)
- fixed extra memory allocations.
- Purpose: updated the last section of chapter 10
- corrected grammar (done by Elena)
- corrected grammar (done by Elena)
- fixed SURF_GPU bug (features count > max dimension of grid) minor gpu docs fixes
- minor
- - speed up the Hamming distance
- fixed setProperty
- fixed gpu::meanShiftSegmentation docs
- fixed gpu::graphcut preconditions
- fixed gpu module HOG test failing on x64 OS
- fixed gpu docs (broken links, missing description, etc)
- adding better support for asymmetric patterns.
- #include cstdarg because va_list is used
- parallel training of a neural net using TBB (thanks to Konstantin Krivakin)
- Modified integral calculation function, know it can build float integral by float source matrix
- added upright parameter to SURF_GPU
- temporarily comment off installation of the PDF documents during "make install"
- fixed some warnings in surf.cu
- Applying fix described in ticket #910. sift was not being built for arm...
- fixed mask calculation in SURF_GPU
- fixed surf.cu compilation on CC 2.0
- some includes moved to precomp.hpp for gpu module
- updated SURF_GPU docs
- - add support for the popcnt instruction (useful for the Hamming distance, soon to come in BRIEF and FLANN)
- - replace the linear search in a sorted list by the appropriate algorithm
- minor (fixed log message)
- made GPU version of SURF more consistent with CPU one
- added docs for gpu::solvePnPRansac
- further docs cleanup
- make GPU version of solvePnPRansac more consistent with CPU one
- updated solvePnpRansac performance test
- Fixed build errors in MSVC when building without CUDA.
- fixed Python reference title
- added pictures for OpenCV 2.x reference manual; fixed some build problems and done some more cleanup work
- added OpenCV 1.x documentation
- 
- added solvePnPRansac method
- added command line args parsing into gpu performance sample
- some more doc cleanup
- removed test whether z is negative in gpu::solvePnpRansac (there is no need in this for tests passing)
- refactored gpu::solvePnpRansac a bit
- added performance sample for solvePnpRansac + refactoring
- fixed some warnings
- added distortion coefs support into gpu::solvePnpRansac
- utility to clean up converted from TeX rst docs
- the first round of cleaning up the RST docs
- parallelized hypotheses evaluation cycle in gpu::solvePnpRansac
- added gpu::solvePnpRansac
- fixed a bug in boost.calc_error and added more documentation
- fixed the fast branch of INTER_AREA resize (ticket #921)
- added IPP dot product functions. Only 32f data type supported for now (there are accuracy issues in 8u/16s/16u/32s functions which will be fixed in IPP 7.0.3)
- added 16u support in calcHist & calcBackProject; added image type checks (ticket #856)
- cleaned RST formatting a bit
- removed duplicated SIFT points (reported by Luca Del Tongo)
- Replaced few methods to virtual in CascaseClassifier class (objdetect.hpp)
- Replaced private methods to protected in CascaseClassifier class (objdetect.hpp)
- Command line python tools for generating patterns, may be incomplete.
- Added a printable asymmetric pattern of circles
- OpenCV reference manual (C++ part only for now) is now produced directly from RST, not from TeX.
- OpenCV reference manual (C++ part only for now) is now produced directly from RST, not from TeX.
- OpenCV reference manual (C++ part only for now) is now produced directly from RST, not from TeX.
- temporarily disabled compute descriptor kernel for new cards (some problems with threads synchronization), old version of kernels is used.
- added asynchronous versions of transform- and projectPoints into the GPU module, added docs
- minor refactoring
- added performance test for gpu::projectPoints function
- added projectPoints and transformPoints into GPU module
- added check into opencv_test_gpu: whether OpenCV was compiled with CUDA or not
- adding cap_images.cpp to android build, may fix link error, but not really address issue of reading video files on android
- added test data for NVidia's FD tests
- enabled nvidia's tests
- *applied patch from NVidia (nppstTraspose bug) *fixed some warnings *finished gpu test port to gtest framework
- temporily excluded cv::Algorithm
- added missing "#include <functional>"
- forgot to run bitiwise tests
- replaced alloca() (a.k.a. cvStackAlloc) with AutoBuffer or vector() everywhere. cvStackAlloc() is still defined, but we do not need alloca() anymore to compile and run OpenCV (fixes #889 and may be some others)
- replaced alloca() (a.k.a. cvStackAlloc) with AutoBuffer or vector() everywhere. cvStackAlloc() is still defined, but we do not need alloca() anymore to compile and run OpenCV (fixes #889 and may be some others)
- replaced alloca() (a.k.a. cvStackAlloc) with AutoBuffer or vector() everywhere. cvStackAlloc() is still defined, but we do not need alloca() anymore to compile and run OpenCV (fixes #889 and may be some others)
- fixed gpu/CMakeLists.txt
- removed unnecessary code from gpu/CMakeLists.txt
- removed CMakeLists.txt from gpu/test folder to avoid precompiled header associated warnings under Ubuntu
- fixed mirror property of kinect
- refactored GPU performance sample, added filter suport
- added NVIDIA tests (disabled because doesn't work under Linux)
- ported GPU test to GTest framework
- removed check_and_treat_gpu_exception function
- now GPU stereo_bp test prints error mesage and test system continues execution
- fixed colorizing disparity
- fixed memory corruption in cvtest::copyMakeBorder (thanks to Pieter-Jan Busschaert)
- fixed incorrect device id in multi_gpu sample (checked both multi GPU samples work correctly with new multi GPU API)
- removed catch from GPU stereo_bp test as --gtest_catch_exceptions flags exists (but err msg isn't printed in case when there is no GPU)
- created GPU new-style test project, ported StereoBP test
- Updated doc
- Prefixed constants in flann with FLANN_ to prevent clashes with constants from other includes, closes bug #890
- default target arch modified
- update docs minor fixes and refactoring of GPU module
- Removing 'using namespace std' from header files, closes bugs #730 and #846
- minor + warnings
- added docs for MultiGpuManager
- renamed GpuFeature into FeatureSet and updated docs
- refactoring of GPU module
- fixed some warnings GPU: TargetArchs -> added FEATURE_SET prefix.
- added init() function into MultiGpuMgr, added samples
- fixed multi GPU API, added driver_api prefix to multi gpu samples
- fixed descriptor calculation in SURF_GPU
- fixed errors in gpu on old video cards (SURF_GPU, BruteForceMatcher_GPU, min/max, setTo, convertTo) added assertion after all kernels calls
- fixed warnings in GPU samples
- fixed GPU samples and MultiGpuMgr
- removed debug output from tests
- fixed GPU minMaxLoc test, updated docs
- GPU: In strcut _scanElemOp dummy type pass by value
- 
- added draft version of MultiGpuMgr (it isn't tested on multi GPU machine yet)
- fixed GPU meanshift segmentation test under Ubuntu
- added output camera id if it fails
- just added frame saving
- fixed warpAffine and warpPerspective under Linux
- changed a little NVIDIA Staging test framework to handle failed tests correctly
- Fixes build for android, mentioned in ticket #873
- Linking order for android.
- minor chnages in GPU samples
- fixed waitKey delay for the GPU FD sample, it didn't work under Linux
- removed check disabling GPU face detection under Linux, i've checked -- it works
- temporarily disabled PyramidUp test (it crashes)
- fixed build errors on Linux + fixed Farneback optical flow sample
- .pyc files should not be in the repository
- fixed build on Windows with MSVC2010
- added missing ts internal header
- the combined cxts + gtest
- 
- the combined cxts + gtest
- fixed bugs in CartToPolarToCart test
- reworked nearly all of the OpenCV tests (except for opencv_gpu tests) - they now use the Google Test engine.
- renamed gpu::DeviceInfo::has into gpu::DeviceInfo::supports
- fixed block size calculation in SURF_GPU (fasthessian_gpu and nonmaxonly_gpu kernels)
- Parallel version of Latent SVM.
- fixed build under ubuntu, but FS is still disabled
- uncomment building of samples
- fixed SURF_GPU (fails on empty data) added test for SURF_GPU and reprojectImageTo3D
- fix compilation under win32 with gpu
- Added test for the asymmetric pattern detection
- Added documentation for asymmetric pattern detection
- Modified the calibration sample to work with asymmetric pattern
- Added detection of asymmetric circles' pattern
- Minor fix to pop count based hamming distance. Being consistent with type.
- fixed some compilation under ubuntu
- removed MS specific from FD code
- added messages to CMake log; fixed sample
- 1) NPP_staging as sources. Binaries removed. 2) NVidia tests for GPU 3) FD sample that uses NVidia's interface.
- fixed CvBoost
- refactored OpenNI integration
- added perf test for gpu::erode, fixed docs, refactored perf. sample
- updated docs
- fixed some warnings and errors under g++
- fixed docs
- added stereo_multi_gpu sample, cosmetic changes in multi_gpu sample
- moved an include dirs setting to the root cmake file
- fixed doc
- intro fix in gpu module
- moved flannIndex to protected section again
- fixed warpAffine and warpPerspective tests
- fixed gpu image resize test
- added docs for gpu::GpuFeature
- added cvtColor performance test, small fix of BruteForceMatcher performance test
- fixed gpu::sum* on CC1.0, updated some tests
- forgot to commit cvconfig.h.cmake
- moved flannIndex to public section (temporarily)
- updated performance sample
- added CUDA_ARCH_FEATUERS define (for correct handling of BIN(PTX) cases)
- fixed gpu minMax tests under linux
- replaced source type 32F with 32FC4 in gpu::norm perf. test
- added buffered version of norm, updated performance sample and docs
- implemented gpu::norm via absSum, sqrSum, and minMax (removed norm_diff call), added support of other data types
- minor changes of user guide (Kinect section)
- added bigger images for SURF performance test (it shows better results on them)
- English corrected
- changed border type to float
- changed border type to float
- fixed #772 (added empty implementation of SIFT class methods throwing exception if ARM)
- fixed #841
- added docs for absSum function
- forgot to commit in the last time
- added absSum function
- added empty() method to common features2d classes; fixed #831
- removed linear_filters_beta.cu as its functionality was moved into filters.cu
- fixed gpu tests (BruteForceMatcher_GPU, divide, phase, cartToPolar, async) minor code refactoring
- added buffered version of gpu::integral function and updated performance test (it still works too slow)
- fixed ticket #823
- minor changes
- removed obsolete file
- added docs for the DeviceInfo class
- fixed GPU docs
- Fixing check in NativePreviewer for supported modes, and a little auto formatting
- Adding a few settings to the camera driver for android.
- fixed documents errors for GPU module
- minor changes in multi_gpu sample
- added images for gpu samples
- updated code in case of the compilation without CUDA
- reafactoring: replaced query device props functions with the DeviceInfo class
- added results check into multi_gpu sample
- added performance tests for mulSpectrum, resize, Sobel
- added performance tests for log, exp, add, magnitude
- finished multi_gpu sample
- added HAVE_CUDA, HAVE_TBB handling into multi_gpu sample
- fixed TargetArchs implementation in case when HAVE_CUDA=false, added initial structure for multi_gpu sample
- added help on Kinect usage to user guide
- replaced has* methods in the GPU module with the TargetArchs monostate
- removed old unnecessary files from doc
- fixed parsing GPU archs in BIN(PTX) format
- changed returned value of unsupported property
- added bib link to the article in GPU docs (for HOG)
- fixed BruteForceMatcher_GPU (fails if input data is empty) updated BruteForceMatcher_GPU test
- update BruteForceMatcher_GPU performance test
- added BFM perf. test
- added SURF perf. test, added working dir field (can be changed via CMD args)
- minor user output change
- added ability to get and set some Kinect params
- fixed compilation
- more GPU perf. tests refactoring, added singular maps into remap test
- added more GPU perf. tests, refactored
- GPU docs. introduction, data structures.
- added error handling into GPU perf. tests
- added initializers into GPU perf. tests
- updated cmake file to allow specifying GPU archs in BIN(PTX) format
- fixed bug in performance test matrix generation
- added GPU memory allocation performance test
- added minMaxLoc, cornerHarris, remap and dft performance tests
- added minMaxLoc performance tests
- #586: exceptions on invalid element access
- #489, leaking cvarrmat test and fix
- replaced own point cloud computing by OpenNI ConvertProjectiveToRealWorld()
- revert the hamming distance to use unsigned long, on 64bit machines, using size_t with __build_popcountl doesn't return correct number of bits. the ll version should work, but for simplicity, locking it down to long for now.  TODO add a unit test for the Hamming distance.
- refactoring of gpu perf. tests
- minor refactoring of gpu perf. tests
- added first version of gpu performance tests
- added synchronization after NPP calls
- added gpu threshold.
- Fix for #791: MatchShapes
- added Kinect support (initial version without settings configuration yet) and sample on usage
- minor fixed
- added link to HOG describing paper into gpu docs
- documented data structures, cascade classifier GPU
- fixed FindNPP.cmake Apple-aimed part
- forgot to rename namespace
- fixed errors under MacOS
- warning fixed
- removed compile warning in GPU module
- minor changes in gpu docs
- 
- b
- fixed some bugs in GPU matrix reductions, removed <functional> into precomp.hpp
- fixed some GPU tests failing when compiled for 1.1(no doubles) and run on 1.3(with doubles)
- fixed parsing of CC in gpu module
- updated gpu initialization functions, added compile-time error on CC 1.0
- fixed GPU switchable tests, changed default CC's for gpu module
- cosmetic changes
- updated main CMakeLists.txt gpu module section, now user can manage binary and intermediate code versions of the gpu module image added more functions to check version of gpu code in runtime
- fixing bug related to using the hamming distance on descriptors whose length is not divisible by sizeof(size_t).
- added IPP Sobel and Sharr filters. Also some minor changes.
- #674, fix leaks in CreateHist
- fixed minor bugs
- updates protected code testing for gpu HOGDescriptor
- refactored gpu module
- refactored gpu module
- Fixed leak of dims in MatND creates
- Test case for #674
- Better tests for ticket #759
- #818, Propset Rev
- #759.  memtrack comments, sealed the numpy MatND leak
- Added features2d section
- added checkPtxVersion into gpu module
- added ensureSizeIsEnough into gpu module, updated reduction methods
- added hasPtxFor and isCompatibleWith functions into gpu module, added docs for them
- fixed some mistakes in gpu docs, added docs for gpu stereo.
- fixed some mistakes in gpu docs
- minor (possibility to change, font scale, min neighbors)
- Moving all user guide sources to a single folder
- updated gpu docs (monowidth font for types)
- gpu docs minor changes
- gpu face detetcion: 1) fixed bug with error codes (enum NppStStatus) shift. 2) added some asserts
- gpu morphology sample
- updated gpu image filtering and image processing docs
- finished gpu module docs for matrix operations
- finished gpu module docs for matrix reductions
- finished gpu module docs for per-element operations
- restructured gpu modules docs
- documented all functions from GPU initialization section
- updated gpu module docs
- updated gpu module docs
- updated gpu module docs
- fixed writing video in HOG sample
- updated gpu module docs
- updated gpu module docs
- updated gpu module docs
- updated gpu module docs
- added docs for GPU Filter Engine
- First version of CascadeClassifier_GPU. Only for VS2008 now. Sample for it. new NPP_staging for VS2008 only
- updated gpu module docs
- updated gpu module docs
- added docs for SURF_GPU and BruteForceMatcher_GPU
- updated gpu module docs
- Memory management and primitive operators
- Memory management and primitive operators
- Added a section on accessing matrix elements
- doc'd gpu bitwise, meanShift code
- added docs for gpu::HOGDescriptor
- fixed CvBoost
- fixed compile error
- fixed FernDescriptorMatcher (#765)
- cosmetic changes in gpu module, decreased matchTemplate test running time
- removed unnecessary code from gpu::matchTemplate
- fixed collisions between std::transform() and cv::transform() (#781)
- OpenCV user guide prototype
- fixed compile problems when Makefiles are used
- updated the new arithmetic tests
- replaced adding constant in normalization with taking max
- updated normalization routine in the matchTemplate to avoid division by zero on black images (ticket #798), added test
- fixed mistake in integration of IPP Sub functions. Added IPP min/max/absdiff/and/or/xor functions.
- add IPP Sub operations to arithm.cpp for 8u, 16u, 16s, 32s, 32f, 64f data types.
- add IPP Add operations to arithm.cpp for 8u, 16u, 16s, 32s, 32f, 64f data types. Added print of IPP info in test log files
- Bug fix in flann wrapper
- Renaming log constants, fixes bug #792
- increased "inf" constant in the true distance transform algorithm to handle high-resolution images
- fix issue in IPP search algorithm (when no IPPROOT available in system and IPP is installed)
- added OpenCVFindIPP.cmake script, which will look for IPP installation at CMake configuration time. First, IPPROOT environment variable will be tested, if not found script will look at default install places. The script should support IPP from 5.3 up to 7.x versions (although tested on Windows for IPP 6.1 and IPP 7.0 versions only)
- added OpenCVFindIPP.cmake script, which will look for IPP installation at CMake configuration time. First, IPPROOT environment variable will be tested, if not found script will look at default install places. The script should support IPP from 5.3 up to 7.x versions (although tested on Windows for IPP 6.1 and IPP 7.0 versions only)
- video writing via cmd args in hog sample added
- fixed incorrect sign of the result of the convolution with normalized asymmetric kernels (ticket #779)
- swapping features2d with calib3d for linking order, rerun cmake in android to update your android-opencv.mk file.
- updated gpu hog sample
- refactored hog, added camera support into hog_sample
- test commit emails
- some more fixes in background/foreground subtraction; converted bgfg_segm.cpp sample to C++
- fixed some build problems
- added background/foreground segmentation algorithm with shadow detection (by Zoran Zivkovic)
- moved gtest to modules; added some gtest-based tests
- added missed include (for MSVC 2010)
- merged fix for x64 MSVC compile errors in highgui into trunk
- added buffered version of gpu::convolve
- another attempt to fix findHomography
- Moved BlobDetector to features2d
- simplified gpu::columnSum test, it doesn't fail on Quadro anymore (when seed is 000001af5a11badd) after BFM test, but something definitely wrong with NPP_Staging's transpose
- Moved PlanarObjectDetector to the objdetect module
- refactored gpu::dft
- fixed MatConstIterator<> (ticket #776)
- minor warning fixed
- minor refactoring in gpu module
- now single row GPU matrix is continuous one, added aux. functions, updated dft and matchTemplates
- minor changes in gpu module (comments and warnings)
- added support of scaling into gpu::dft, refactored gpu::convolve
- cosmetic changes, removed trailing spaces
- cosmetic changes
- cosmetic changes, removed trailing spaces
- cosmetic changes, removed trailing spaces
- cosmetic changes, removed trailing spaces
- cosmetic changes, removed trailing spaces
- cosmetic changes
- cosmetic changes, removed trailing spaces. Added ippGetCpuClocks if IPP is available (important for 64-bit build)
- cosmetic changes
- cosmetic changes
- test svn access
- updated test for gpu::dft, updated dft for handling continous source
- fixed bug in gpu::dft
- added gpu::dft implemented via CUFFT
- added tests for gpu::mulSpectrums
- added mulSpectrums functions into GPU module
- moved crossCorr (as NPP_Staging wrapper) into public GPU module part from the internal matchTemplate files
- moved sqrIntegral (NPP_Staging wrapper) into public GPU module part from matchTemplate.cpp
- added matcher_simple_gpu sample
- added CUFFT errors handling into GPU module
- fixed some warnings under linux
- added gpu transpose and integral based on NPP Staging. added mask support to SURF_GPU.
- Fixed documentation
- Fixed some warnings under Windows
- Fixed compile errors under Windows
- warningx fixed under vs2008
- minor changes in the gpu stereo sample
- Used Poitn2f instead of KeyPoint
- fixed comment
- added convert into gray and prefilter Sobel controls (for gpu stereo sample)
- Changed the camera calibration sample to support circles' grid pattern
- Added documentation for cirlces' grid detection
- Added a regression test for a circles' grid detection
- Added detection of cirlces' grid pattern
- added more controls into gpu stereo sample
- fixed compiler error under linux
- added first version of stereo match sample on gpu
- enable #include "cvconfig.h" in highgui on Windows. That should fix camera capture.
- added SURF_GPU. added support of CV_32FC1 type to gpu copyMakeBorder.
- gpu hog sample: added support of writing video
- refactoring: moved gpu reduction-based functions into separated file
- refactoring: made gpu bitwise operations inline
- gpu module refactoring: moved per-element operations into separated file
- added host code for gpu::matchTemplate (as NPP_staging was integrated)
- updated gpu bitwise operations
- renamed constantspacebp -> stereocsbp line all other algs created element_operations and matrix_reductions files for farther refactoring
- temporary added NPP_staging, functionality from the library will be moved to NPP with next release.
- fixed traincascade
- updated other gpu's bitwise operations
- reimplemented gpu::bitwise_not operation, refactored gpu module
- refactored bitwise operations in gpu module
- fixed link time error in gpu module
- added support of CCOEFF_NORMED for multichannel images (8U) into gpu::matchTemplate
- added support of multichannel images into gpu::sqrSum
- added support of multichannel images into gpu::matchTemplate for CCOEFF method
- added support of remaining image number of channels into gpu::sum
- refactored gpu module, added vec math operators for uint, added support of 2 channel images into gpu::sum (removed support of double)
- fixed minor bugs in gpu module
- compilation warning fixed
- added support of multichannel images into gpu::matchTemplate (all methods except CCOEFF based), refactored
- bug #762 fixed
- CascadeClassifier refactored. Most of the members and methods are private now.
- fixed bug in matchTemplate when template size is (1,1), refactored
- refactored matchTemplate.cu
- added CUDA kernel for CV_TM_CCOEFF_NORMED matchTemplate method
- added CUDA kernel for CV_TM_CCOEFF matchTemplate method
- Export CV_PI explcitly, #758.
- one more fix in the recently rewritten copyMakeBorder
- added some gpu::matchTemplate kernels (other parts after NPP Staging integration)
- fixed some warning under Ubuntu in gpu module
- replaced 8x6 pattern with 9x6, which orientation can be determined without any ambiguity
- added gpu::sqrSum function
- fixed errors in StereoBeliefPropogation under linux
- fixed bug with prefilter_xsobel preset.
- fixed minor bug in gpu::sum
- added tests for gpu::sum, it supports all data types, but single channel images only
- fixed compile error under linux
- fixed bug in gpu filter engine (incorrect buffer type) and in vector's saturate_cast. changed buffer type in linear filters to float. added support of 1 channel image to linear filters. added support of BORDER_REFLECT101, BORDER_REPLICATE and BORDER_CONSTANT border type to gpu linear filters. minor fix in tests. update comments in gpu.hpp.
- improved naive bayes robustness in the case of singular data
- fixed cv::CHAIN_APPROX_* definitions (ticket #755)
- rewrote copyMakeBorder (to support other border types and fix some bugs)
- fixed Mat::Mat(Vec|Matx|vector) constructor (ticket #747)
- fix opencv-highgui build with old versions of libpng (< 1.4.x)
- some files rename
- Fixed serious kernel crash IN StereoBM_GPU for some parameter. Will more rework for the code farther.
- fixed border processing bayer2rgb & bayer2gray; made the test "color-bayer" pass; renamed CV_Bayer*2Gray -> CV_Bayer*2GRAY for consistency
- possibly improved findHomography accuracy (reported by Luca Del Tongo)
- SSE2 optimization for Bayer->RGB; added Bayer->Gray with SSE2 optimization; corrected some bugs noted in the yahoogroups forum
- moved failed tests to blacklists "em",        //ticket 754
- minor refactoring of gpu module
- fixed minor bug in gpu module, added first version of sum
- refactored gpu module
- added support of CV_8U & CV_TM_CCORR into gpu::matchTemplate
- improved accuracy of determinant(), invert() and solve() on 3x3 matrices (ticket #749)
- fixed compile error in multicascadeclassifier
- code cleaning of cascade classifier
- facedetect code cleaned. added new multicascadeclassifier sample, duplicating facedetect right now.
- added missing #include <iterator>
- added opencv/include/CMakeLists.txt to the install package for Windows
- make the floodfill test parameters more discrete, to avoid weird rounding errors
- added test for gpu:columnSum
- added gpu::columnSum, fixed compile error (if there is no cuda), refactored
- added support of CV_32F & CV_TM_SQDIFF into gpu::matchTemplate
- added support of CV_TM_CCORR (via FFT) into gpu::matchTemplate (versions both with block and without blocks)
- replicated the fix for Ptr<CvCapture> bug
- added support of 4-channels images to StereoConstantSpaceBP. refactored transpose_gpu, made it non template function.
- added support of 4 channels images to StereoBeliefPropagation, minor code refactoring.
- removed test from black list (#737)
- updated test threshold
- fixed total FPS evaluation in the GPU HOG sample
- moved failed tests to blacklists "descriptor-opponent-sift",       //ticket 737 "_3d-rodrigues",                  //ticket 435
- fixed compile-time warning under g++
- minor refactoring of gpu module
- fixed GBTrees build on NetBSD & Android; fixed GPU brute force matcher test build on MacOSX
- module reorganization: added folder with pure device functions, cuda_shared.hpp renamed to internal_shared.hpp
- added assertion on Compute Capability >= 1.1 to BruteForceMatcher_GPU_base::radiusMatch
- added first version of gpu::matchTemplate, currently it works only with 8UC1 images and SQDIFF method
- added BruteForceMatcher_GPU
- refactored border interpolation in gpu module
- revert to using fixed RNG in EM, otherwise the algorithm becomes non-deterministic and the test fails sometimes. in the meantime, EM needs to switch to more robust cv::kmeans instead of CvEM::kmeans.
- turn off SSE2 optimization in cv::exp & cv::log in the case of GCC <=4.1 (not no Mac, where a patched GCC 4.0 is used)
- added per-element min/max to gpu module. fixed compile error in transform.
- misprint
- added sipport of BORDER_REPLICATE mode into gpu::corner* functions
- include 3rdparty/lib/* into the source package for Windows
- turn off SSE2 optimization in cv::exp & cv::log in the case of VS2005 or earlier versions, because of missing _mm_cast* intrinsics (ticket #729)
- some more fixes for the static library configuration
- opencv_zlib renamed back to zlib; make static libs work on Windows
- make OpenCVConfig.cmake usable in the case of static libs
- starting to fix CMake scripts for the proper OpenCVConfig.cmake behavior
- updated version number; removed unnecessary index.html and ChangeLog.htm
- a few more little fixes in read_csv
- fixed several typos in docs; make MLData capable of reading csv files with much more columns than before
- fixed compile errors in cap_qt.cpp (ticket #391)
- fixed OpenCV build on NetBSD (ticket #726)
- little change in flann save_value. Likely does not affect anything
- make watershed demo work correctly
- fixed crash in cvDrawContours when abs(maxLevel) is too big
- fixed mouse painting in Qt bindings (to make watershed & inpaint demos work); increased the font in the detailed pixel image display.
- added check for the board size
- fixed unresolved RotatedRect::boundingRect() error (ticket #725)
- revamped
- revamped
- revamped
- revamped too
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamped
- revamp
- remove interfaces from installation; remove opencv/utils dir completely
- doc output
- added cvSave(contours) to the contours demo; added rational model demonstration to stereo_calib; fixed formatting in imgproc/types_c.h
- fixed crash in gbtrees test on Windows
- converted Kalman sample to C++
- updated BrdReflect101 in gpu module
- replaced global memory reads with texture memory reads in GPU's corner detectors
- fixed meanShiftSegmentation test in gpu module
- fixed meanShift test in gpu module
- added data for CC2.0 in gpu meanShiftProc test
- added support of gamama_correction parameter into gpu::HOGDescriptor, updated tests
- fixed minor bug, doc'd
- doc'd
- doc'd
- updated test for gpu::HOGDescriptor
- replaced filter (from the nearest to linear) mode when resizing image in gpu::HOGDescriptor
- oops, typo corrected
- updated docs
- documented use
- documenation and output added
- docs
- docs
- slight bug fix, docs
- established and doc'd the call
- docs
- running documentation
- teek
- created parameter description doc and output
- Created output doc help() file.
- returned maxDepth argument
- fixed traincascade (#554)
- sigms's second patch with fix in install rules.
- docing the use of SURF+FLANN for planar object detection
- fern docs
- added description output
- added help
- minor fix in gpu's header
- added support of BORDER_REFLECT into gpu::cornerHarris and etc, added support of border extr. int linear filters
- put in a remark
- added an example call
- put in a bunch of checks, outputs and docs
- fixed some gpu tests
- fixed bug in gpu::cornerHarris and gpu::cornerMinEigenVal
- updated tests thresholds
- added help function
- cascade converstion output
- created docs
- added gpu transpose for CV_8UC4, CV_8SC4, CV_16SC2, CV_16UC2, CV_32SC1 and CV_32FC1 types
- put doc comments on top
- tweek
- added to and moved comments to top
- added help and help on error
- print help on error
- print on error
- allowed top docs to print out
- added docs and minor program changes
- add docs to feature matching
- Added lang to sphinx template, linked py to cookbook and cpp to cheatseet, #723
- undo the latest change in SURF
- temporarily turn off TBB threading when computing SURF descriptors (as the parallel version seems to produce different descriptors on each run)
- fixed compilation errors on Windows
- updated test threshold
- fixed bug in ms segmentation
- added better threads configuration estimator for the minMax, minMaxLoc, countNonZero functions in gpu module
- make cv::calibrateCamera, cv::stereoCalibrate and their C counterparts return the standard RMS error.
- extended cv.KMeans2 API in Python (ticket #414; thanks to hogelog). fixed failures in the opencv python tests.
- added missing images for C++ samples
- added min eigen val based corner detector into gpu module
- added Harris corner detector into gpu module
- help function added
- added chamfer matcher code and sample (contributed by Antonella Cascitelli, Marco Di Stefano and Stefano Fabri)
- described
- editing the camerasettings text
- added help docs
- fixed recent failures in shape-convhull & shape-minarearect
- fixed severe bug: CV_RANSAC != CV_FM_RANSAC, CV_LMEDS != CV_FM_LMEDS
- added flag to treat input file as a videofile (patch by Ethan Rublee; ticket #392)
- added the optional balanced cross-validation in SVN::train_auto (by arman, ticket #314)
- applied patches by sigma (ticket #644)
- bug with negative class labels is fixed
- put 64-bit constants to CV_BIG_INT() macros to avoid warnings with old compilers
- moved estimateAffine3D declaration from imgproc to calib3d, where it is really implemented (ticket #705)
- added CV_CALIB_RATIONAL_MODEL for better backward compatibility
- unified the coordinate interpretation in RotatedRect (ticket #425)
- fixed convexHull description; updated cvHaarDetectObjects description (maxSize parameter).
- added some protection against some singular cases in solvePnP/cvFindExtrinsicCameraParams2
- fixed allocation bug in SVM training (ticket #511)
- removed obsolete headers from opencv.hpp, fixed 2 gcc warnings and bug in SVBackSubst().
- forgot commit this file
- limited rng seed choice by 5 values in dtree, boost, rtrees, ertrees tests; hope this make them more stable.
- refactored gpu tests a little
- made random generators of MLL classes depended on default rng (theRNG) (#205).
- moved to cpp directory
- converted houghlines to C++
- added masks support into gpu::minMaxLoc
- fixed sift descriptor
- removed duplicated data for samples (it is now in samples/cpp)
- rewrote stereo_calib in C++
- improved test build time
- added is_signed into numeric_limits_gpu, fixed incorrect min max finding for floating values
- refactored gpu::minMaxLoc
- added mask support into gpu::minMax
- added to DescriptorMatcher test the check of match methods on empty data
- fixed #517; uncommented ertrees test and moved it to black llist
- fixed compile errors from gcc
- adding include of "jni.h"
- docs
- moved GPU's global counter reset from caller to the kernel's end
- replaced one-threads tail reduce with one-block tail reduce in functions gpu: minMax, minMaxLoc
- updated docs
- updated docs
- updated docs
- updated comments
- removed double support (gpu: minMax, minMaxLoc, countNonZero) for CC which doesn't have native double support
- added gpu::count_non_zero version for CC1.0, refactored gpu module a little
- optimizing calibration for android
- optimizing calibration for android
- fixed crashes in camshiftdemo sample
- removed duplicated letter_recog sample
- converted some more samples to C++
- GPU module: disabled compilation for CC 1.0
- temporary removed VERSION_VAR (because this requires cmake 2.8.3)
- adding the start of a neon based yuv2rgb routine - very ugly and rough
- Adding optimization for brief and android using NEON SIMD intrinsics
- removed garbage from the image sample
- several small fixes; added overloaded variant of cv::drawChessboardCorners
- converted some OpenCV C samples to C++
- fixing a small error in the armeabi selection
- fixing a small error in the armeabi selection
- CameraTemplate compiles... not sure if it runs.
- Bringing the CVCamera up to speed with new changes to android-jni - added settings and centered the camera.
- Adding color as default for CameraConfig, and updating the README.txt
- Adding a few comments to the readme for android.
- conforming the calibration sample to the new refactor of android-jni
- Refactoring the image_pool for android, and adding some common utils for camera configuration.  Also experimenting with optimization - grayscale preview is way faster than color right now.
- Clarifying the findChessboardCorners and drawChessboardCorners documentation as per the tickets: #712 and #713
- Fixing missing header compilation problems
- Fixing a missing header compilation problem
- fixed warnings and errors reported by VS2010
- update the old and the new-style headers after moving some old stuff to the legacy
- use the new-style headers in the samples to improve OpenCV build time.
- moved some old stuff to the legacy module; merge "compat_c.h" headers and moved to the legacy as well. moved implementation of many non-critical/obsolete inline functions and methods to .cpp to improve Opencv build time
- 1) gpu test refactoring. 2) fixed gpu bm test fail 3) CMAKE_MINIMUM_REQUIRED(VERSION 2.8.3)
- added first version of gpu::countNonZero for all data types, it doesn't support compute capability 1.0 yet, also fixed some little bugs
- restored version check (VERSION_VAR)
- updated test thresholds
- remove spurious VERSION_VAR (fixes #711)
- fixed warnings of gcc
- minor addition to SURF doc (#188)
- made MaskPredicate safer (#419)
- fixed warnings under win32
- minor changes of f2d tests log
- added support of buffers into gpu::minMaxLoc, reduced memory requirements, refactored
- fixed the ordering of parameters in PyArg_ParseTupleAndKeywords, added correct Ptr<CvDTreeSplit>::delete_obj() (ticket #406)
- updated installation package for Windows
- deleted obsolete scripts
- fixed problem with missing minMaxIdx (ticket #703)
- update features2d documentation after changes create functions and DynamicAdaptedFeatureDetector
- fixed multiple warnings from VS2010.
- added tests for some detectors; made features2d object create functions as static classes methods; fixed OpponentColorDescriptorExtractor, BriefDescriptorExtractor (on rgb); renamed DynamicDetector
- fixed compile time errors in gpu module (if one compiles without CUDA)
- include gpu tests in dally build
- renamed PooledAllocator::malloc to PooledAllocator::allocateBytes, Matrix::free to Matrix::release to avoid conflicts with VisualStudio
- cuda+npp version check at configure time.
- fixed 2 warnings from VS2010 64-bit
- added buf support into gpu::minMax
- fifixed compile problem on VS2010 64-bit. fixed L1 and L2 distances
- optimized memory requirements for gpu::minMax's buffers, added support of compute capability 1.0
- fixed compile error under win32
- npp version check
- clarified docs
- created help function, added more docs
- renaming the filestorage_sample - getting rid of redundant _sample postfix
- renaming the cvout_sample.cpp to cout_mat.cpp
- adding two simple templates
- renaming cvstarter and breaking it appart
- added user mode selection (thanks to tito for the patch, ticket #563)
- pass the correct rgb->gray coefficients to PNG decoder, to match cvtColor's.
- added version detection for NPP
- Adding the simplest opencv starter.  This may be a good template or turn into a good template for people to start quickly with image lists and video processing
- adding a check for if the first arg is an image - annoying if it overwrites your files if you put in the wrong params.
- added to DetectorExtractor test the check of compute() on empty data. Added test for BRIEF.
- added to FeatureDetector test the check of detect() on empty data
- added minMaxLoc function into gpu module
- fixed canny test; fixed mhi-global test & implementation (hopefully, for the last time); added sse 4.1 & 4.2 support (not working in Xcode for some reason); moved splineInterpolation to color.cpp; fixed a few bugs in documentation
- 1) more convenient naming for samples gpu 2) added mask support to device 'transform' function 3) sample hog gpu: waitKey(1) -> waitKey(3), in other case image is not displayed.
- just for more convenient naming
- optimized gpu::minMax a little
- added support of multichannel matrices in gpu::minMax
- added support of all data types into gpu::minMax
- fixed bug in StereoConstantSpaceBP - missing load max_data_term to constant memory
- Explaining the << cv::Mat out capabilities
- find and drawContours doc
- described
- working on the dynamic detectors documentation.
- Docs for using BRIEF in features2d
- added and moved docs
- Fleshed out file docs for train and test on PASCAL VOC. This sample need simplification
- Adding a .tex document for the dynamic feature detectors
- Continue to refeactor the dynamic stuff - may have broken build on last commit. Fairly certain that it builds now.
- refactoring dynamic detectors
- updated documentation on features2d; minor features2d changes
- Adding stubb of documentation for the Dynamic feature detectors
- added hconcat & vconcat functions for joining matrices; moved some inline functions out of the headers; fixed several bugs in documentation; removed MatND from docs
- moved failed tests to blacklists: mhi-global                   //ticket 457 canny                          //ticket 702
- now opencv_tests_gpu takes path to tesdata from OPENCV_TEST_DATA_PATH
- fixed compile errors
- deleted NPP_VERSION and NPP_HAVE_COMPLEX_TYPE macros, because last NPP supports complex types under linux
- forgot to escape after 'help'
- minor docs and help code at top
- added more documenation
- fix little warning - opencv2/imgproc/types_c.h:235: warning: comma at end of enumerator list
- Adding some dynamic feature detectors...
- patch from ticket #699 added
- added type selection in the Kalman filter (thanks to Nghia Ho for the patch; see ticket #693)
- refactored features2d and sample on matching to many images
- added 64f support in cv::resize
- integrated multi-threaded version of SURF (thanks to imahon and yvo2m for the patch; see ticket #275)
- fixed compiling bug under g++ in gpi HOG sample
- fixed compile bug under g++
- fixes bugs #624 and #625 (thanks to chaene!)
- fixed background image reader (thanks to albertzeyer for the patch - ticket #651)
- fixed scaling in gpu HOG
- add protection against EAGAIN error in the streams (thanks to vrabaud for the patch - ticket #553)
- another fix on the ticket #518 - ignore all the circles with radius outside of the specified range
- decreased the lower canny threshold in HoughCircles, helps to detect some circles in low-contrast images (ticket #518)
- added masks support for bitwise operations on GPU
- added 16-bit tiff support, enabled LZW codec in tiff (tickets #588, #590)
- probably fixed the bug in ANN::calc_output_scale with update_weights=true (ticket #558)
- avoid use of writable global variables in V4L capturing module (thanks to fjmadrid for the patch! - see the ticket #384)
- Adding two samples that deal with FileStorage - useful for creating image lists
- fixed compilation error and warnings under ubuntu
- fixes Mat::empty() and Mat::create() in the case of zero sizes (ticket #691)
- in the case of GCC always build jcdctmgr.c with "-O1" (ticket #519)
- removed memset in cv::pyrMeanShiftFiltering (ticket #664)
- incorporated several critical fixes in EM implementation from Albert G (ticket #264)
- added flann
- raised error threshold in filter-generic test. re-enabled mhi-global & filter-generic tests
- yet another fix in mhi-global test (ticket #457)
- fixed some GCC 4.4 warnings
- doc what cvout_sample does
- Updated for building in latexsphinx directory
- moved failed tests to blacklists filter-generic - ticket 690 mhi-global - ticket 457
- added support of different descriptor formats into gpu HOGDescriptor
- added bitwise operations into gpu module
- Added description, fixed missing >
- LANCZOS4 interpolation constant added to C interface
- extended cv::convertPointsHomogeneous to handle 4D input. corrected documentation
- DataType::generic renamed to DataType::generic_type (ticket #681)
- added getDescriptors support into gpu HOG, also added commented test for this feature
- added max window size parameter for cascade classifier
- added getDescriptors function (draft version)
- added different win_stride values feature into gpu HOG, refactored gpu HOG sample
- refactored hog GPU
- added gpu HOG sample
- added getPeopleDetector_48x96 into gpu HOG
- added operator != for some basic structures (ticket #678)
- fixed wrapper generation
- updated some included headers
- updated user prompt and included headers
- fixed linker error undo mingw (#657)
- removed unnecessary fix
- added default detector for winSize(64,128) for hog on gpu
- minor fix
- fixed big in gpu::HOGDescriptor, added property into CPU's HOGDescriptor
- fixed duplicated external symbols in the static version of OpenCV
- keep the SURFPoint.laplacian as KeyPoint.class_id (ticket #341)
- mapstep type was also changed to ptrdiff_t (ticket #157)
- try to make a more elegant workaround for the incorrectly generated code in Canny (ticket #157)
- added range check in the keypoint interpolation in SURF algorithm (ticket #497)
- removed cv prefix
- small brief edit, was trying to allow user to pass integral image but this introduced some bugs, so no longer doing this... for now.
- Fixing a small error in compilation for gpu - anatoly should review.
- extended out << mat/vec operators; added opencv license
- fixed error reporting in GPU module (exceptions in destructors, etc)
- fixed compilation error under nvcc
- fixed some bugs, added tests for gpu::HOGDescriptor
- added HOGDescriptor on GPU
- fixed compile error undo win32 (due to int32_t using)
- some device layer utility functions
- fixed gpu linear filters
- adding samples for brief and the cout << cv::Mat functions.
- adding the Brief descriptor, associated hamming distance functors for bruteforce matching.  Also adding cout << cv::Mat functions in core.
- fixed uninitialized variable use in writeGraph (reported by valgrind when running opencv_test_core)
- fixed buffer allocation for constant-value borders in the filter engine (ticket #524)
- fixed member initialization in the sparse bundle adjustment code (ticket #385)
- fixed initialization of the border interpolation table in the filter engine (ticket #161)
- Updated user prompt in the generic_descriptor_match sample
- fixed some more failing tests
- switched from 8-point kernel to 7-point kernel in the fundamental matrix estimator (fixes some corner cases; see ticket #434)
- rewrote matchTemplate in C++; added border awareness to crossCorr (ticket #557)
- rewrote matchTemplate in C++; added border awareness to crossCorr (ticket #557)
- fixed latentsvmdetector test (ticket #661)
- fixed transparent border handling one more time (tickets #572 & #575)
- minor
- modified grabCut test to stable verification
- moved failed tests to blacklists: warp-affine                     //ticket 572 warp-perspective            //ticket 575 segmentation-grabcut    //ticket 666 _3d-fundam                     //ticket 434 posit                               //ticket 430
- added CV_EXPORTS to OpponentColorDescriptorExtractor
- Fixed a build problem in windows
- modified grabCut test slightly; updated test data due to latest grabCut() fix (#666)
- fixed SURF::operator() (#423)
- fixed MserFeatureDetector
- minor (compilation fix)
- modified grabCut: noise is added only if covariance determinant = 0
- moved segmentation-grabcut test to blacklist (#issue 666)
- fixed sparse histogram update (ticket #526)
- fixed remap with transparent border (ticket #582)
- further improved accuracy of Delaunay triangulation (ticket #433)
- fixed infinite loop in FileStorage::open when reading incomplete XML's (ticket #663)
- increased number of points in optflow-estimate-rigid test, because in the presense of noise there should be enough points for robust transform estimation
- some utility for GPU module internal purposes
- fixed grabCut: moved to double precision and added the noise to avoid zero determinant of covariance matrix
- replace include file in sample
- moved failed tests to corresponding blacklists (issues #433, 454, 661, 662)
- Making highgui build for android
- changing the names of the opencv libraries for android, all except 3rd parties have opencv_ prepended
- put extra check to cv::findChessboardCorners (ticket #648)
- fixed crash in color-luv when OpenCV is built using GCC 4.1
- updated doc on features2d
- minor change of BOW
- disabled some gpu tests
- fix gpu module compilation under linux
- fixed cvPreprocessIndexArray (ticket #517)
- added opencv_flann to pkg-config script for opencv
- correct 2 bugs in cvSolveCubic (linear and quadratic cases: tickets #525 and #364)
- excluded some tests from blacklist that now pass
- made calcBackproject slightly more robust.
- added workaround for a weird Mingw 4.5.1 bug
- a few small fixes in Matx operators
- fixed some more tests on Windows; changed inheritance Matx -> Vec to Vec -> Matx
- fixed most of the failures in opencv_test
- moved hist-backproj and projectPoints-c tests to blacklist (#issues 579, 652)
- Latent SVM detector test was added
- Fixed a compilation problem when the DEMO_MIX_API_USE is not defined
- fixed several GCC warnings; fixed crash in kmeans test (because of cv::swap(Mat&a, Mat&b)) (ticket #616)
- fixed possible overflow in getThreshVal_Otsu_8u (ticket #602)
- fixed failure in rand test (ticket #449)
- fixed building Python wrappers when Numpy is not available
- updated doc on common interfaces of features2d; added some method for GenericDescriptorMatcher
- minor changes
- modified mhi-update test to avoid rounding problems (ticket #639)
- almost finished Python wrappers
- Fixed problem with conflicting filenames in the online documentation
- fixed compilation under gcc
- compilation errors
- Fixed a minor bug in PtrElemStep::ptr
- Moved mhi-update test to blacklist (issue #639)
- Updated test threshold (#637)
- Made calibration a bit faster in the absense of a checkboard and trying to fix a crash with the libv4l capture code
- Brute force implementation had issues with the type of distances it was storing. Rectified this, hopefully.
- compilation errors under GCC
- added PtrStep PtrElemStep structures. Refactored name spaces,
- fix gbtrees test
- moved descriptor-matcher-flann-based test to blacklist (issue #637)
- fixed compile error on Win
- added possibility of matcher filtering to sample
- extended Python bindings; not merged into cv.cpp yet; and many of the helper functions, like pyopencv_to_*, pyopencv_from_* etc. are still missing
- extended Python bindings; not merged into cv.cpp yet; and many of the helper functions, like pyopencv_to_*, pyopencv_from_* etc. are still missing
- modified features2d interface; added algorithmic test for DescriptorMatcher; added sample on matching to many images
- moved stereogc to blacklist (issue #439)
- renamed rectify3 to rectify3Collinear
- added more helper macros to the function declarations, to assist the Python wrapper generator. Fixed memleak in Mat::operator()(Range,Range) and the related functions (Mat::row, Mat::col etc.)
- Reverting, release beahviour was changed. Investigating on deallocate() issue
- Linking doesn't find deallocate()
- moved gpu::cvtColor from imgproc_gpu.cpp to color.cpp
- moved CvGBTrees_test test to blacklist (issue 630)
- fix unnecessary memory allocation in gpu::magnitude and gpu::phase
- adding an include director to android cmake <opencv2/opencv.hpp> should work now
- adding a copy of the wiki entry for android build
- define expl as exp on android - may break things. opencv/modules/ml/src/gbt.cpp
- Fixed wiki links in flann in the online documentation
- fixed CascadeClassifier::detectMultiScale when TBB
- Fixed flann linking
- Fixed missing semicolon
- fixed crash in color-lab (ticket #627)
- moved cascade-detector test to blacklist (issue #432)
- Implemented dynamic loading of the Wiki in the online documentation.
- updated test threshold
- remove failed test (see issues #449, 627, 502)
- Fixing a problem with SURF detector crash due to large keypoint sizes
- correct spelling of my email address..
- removed detector-surf test from black list (ticket 578)
- fixed fail of descriptor-surf-test (ticket 568)
- fixed fail of descriptor-sift test (ticket 567)
- fixed fails of cascade-detector and hog-detector tests (tickets 428, 432)
- fixed crashes in color-luv & color-lab when gcc 4.2 on x64 is used (tickets #502, #627)
- added PtrStep structure to pass in __global__ functions
- moved color-lab test to blacklist (issue #627)
- added "-ggdb3" to GCC flags in Debug configuratin. Hopefully, it will solve problems with tracing code with debuggers
- fixed MatConstIterator::operator *()   (the bug caused "operations" test failure; ticket #613)
- fixed bug with Mat::dataend initialization. Now morph-ex test passes; Also fixed CV_Assert() implementation
- fixed several gcc 4.1 warnings
- two small fixes in the recently added stuff
- the blacklist is sorted in alphabetical order; several tests that should now pass have been commented off
- added assert to MatConstIterator::pos()
- rand test is returned back
- re-added color-lab test
- re-added filter-general test; fixed failure in several calibrate* tests
- modified wiki link name
- change at<double> => at<float>, since the histogram is cv_32f, not cv_64f
- ok, try to handle matrices with size (0,0)
- force each histogram dimension to be >= 1
- cleared the test blacklist in opencv_test_core. all the problematic tests now pass
- fixed ds-graphscan test to make sure that the memory block size is large enough to fit at least the graph header and the sequence block header (ticket 504)
- fixed test failure in matrix-dotproduct test (by increasing the desired accuracy threshold) (ticket #447)
- fixed small matrix inversion using Cholesky algorithm (ticket #536)
- Inserted links to wiki in documentation.
- Adding back MatConstIterator_::pos implementation
- add missing #include <stdarg.h>
- Renamed header include sentinels to fix compile problem when used together with standalone flann
- change int to char so that keys are registered properly, maybe this breaks others though
- some fixes due to the changed policy in DataType & DataDepth handling
- added vecmath to gpu module.
- Fixing a problem with conflict of ROS and opencv flann
- fixed bug with CV_ASSERT
- fixed several warnings; modified size comparison: m1.size() == m2.size() => m1.size == m2.size
- fixed several warnings; modified size comparison: m1.size() == m2.size() => m1.size == m2.size
- Updated opencv.pdf with new modifications
- added to gpu module linear filters for int and float source types. refactored gpu module.
- remove failed tests (issues #618-620)
- Move failed tests to corresponding blacklists
- the path to "opencv/opencv_extra/testdata" can now be set using OPENCV_TEST_DATA_PATH. Filter pattern can now start with ">" or ">=" symbols, meaning - run all the test, beginning from the particular one - convenient for resuming tests after fixing crashed tests
- Documentation fix
- Minor fixes in documentation
- fixed a few bugs in: Mat::reshape, Mat(CvMat*) constructor, element access, copying nd array etc.
- Reorganized documentation to be consistent with modular structure
- undone experimental modifications in findExtrinsicCameraParams2.
- refactored mssegmentation.cpp
- fixed PDF generation
- remove failed tests (issues #612-616)
- added gpu version of magnitude, magnitudeSqr, phase, cartToPolar, polarToCart
- fixed cast of Mat to vector<Mat> (leads to compile error now)
- fixed a couple of warnings and 2 possible bugs
- added Mat::push_back, pop_back and related operations; enabled reading/writing/creating/copying matrices with zero dimensions.
- renamed filterObject -> CvLSVMFilterObject, position -> CvLSVMFilterPosition etc.
- bugfix: incrorrect argument order in cvRodrigues2 call
- bugfix: wrong command line argument used
- GBT train/test was added to tree_engine sample
- added helper macros to the function declarations
- added opencv_flann to OpenCVConfig
- Added error handling in latentsvmdetect sample
- made FLANN (and dependent on it code) build fine on Windows. Most of the changes are added CV_EXPORTS' into the class declarations and extern variables are turned into external functions (as a nice side effect the variables are now read-only)
- Gradient Boosting Trees (CvGBTrees) added to opencv mll. Test for all CvGBTrees public methods added.
- accidentally commited a ROS patch of the test.py a few -r3716
- minor fixes
- refactored mean shift segmentation a little
- added magnitudeSqr and rectStdDev to gpu module. added supports of CV_32SC2 source to gpu scalar arithm and float source to gpu::histRange. minor fix of gpu tests.
- added gpu::cvtColor for RGB <-> HSV and RGB <-> HLS
- implemented mean shift segmentation with elimination of small segments, added tests
- added dependency on the new module flann (now with opencv_flann lib)
- added dependency on the new module flann
- fixed some more build problems after renaming the headers
- Updated FLANN to version 1.5
- re-added missing _lsvmparser.h
- the header parser for the extended OpenCV Python bindings
- removed obsolete matrix expression implementation
- small fix in DefaultRngAuto class for easier parsing with Python wrapper generator
- renamed internal headers to avoid conflicts with system header files
- united cv::Mat and cv::MatND
- united cv::Mat and cv::MatND
- united cv::Mat and cv::MatND
- fixed gpu filters (deriv filter and source roi calculation)
- added histograms calculation to gpu module
- working on cleaning up the android port - trying to fix the distortion coefficients bug
- adding samples to the android apps directory
- fixed some warning under VS2008
- added test data for mean shift procedure
- changed mean shift procedure a little
- added min/max filters to gpu module. added supports of 4-channels image to gpu::minMax and gpu::cvtColor for RGB <-> YCrCB, RGB <-> YUV and RGB <-> XYZ color conversion.
- Russian comments was removed. Error code was added as returned value inLatentSVM parser.
- Integration object detection using Latent SVM. Sample was added.
- fixed area computing
- _S happens to be a bad variable name for android
- fixed compile error (with TBB)
- added sample on BOW usage to image classification (training and testing is on Pascal VOC dataset)
- added Filter Engine to gpu module. disabled gpu::sum, gpu::minMax, gpu:Canny until fix crash.
- fixed gpu module build system (in case when WITH_CUDA is set, but CUDA Toolkit is not found)
- #593 add ConvertImage
- fixed warnings under VS2010 about 'implicit conversion from double to float'.
- fixed FernDescriptorMatch; optimized keypoint regions matching in detector/descriptor evaluation; added CalonderDescriptorExtractor to evaluation tests
- possible fix for ticket 380 (should not hurt camera calibration engine, as the fix only affects non-planar objects)
- added Sobel, GaussianBlur, Canny to gpu module. minor fix of matrix_operations.cpp.
- much faster exp() and log() with SSE2
- some more fixes in rectify3 and 3calibration (corrected disparity ratio etc.)
- fixed 3calibration sample
- added Eigen3 support
- fixed detector evaluation test
- added calib3d dependency of highgui, to visualize checkerboard detector work, and probably other algorithms
- fixed detection of the checkerboards in some extreme cases (ticket #298)
- back to previous default params
- Updated a recall curve construction in descriptors evaluation
- added BOWTrainer::add()
- added gpu 1d window sum, convertTo, based on NPP. added RGB <-> XYZ color conversion. gpu morphology minor fix.
- fixed some compile-time problems (under Ubuntu)
- fixed gpu morphology: anchor and iterations
- fixed short and float reading/writing in gpu::cvtColor
- fixed gpu morphology: now kernel in gpu is passed to npp functions. warnings in cxcore added graphcut wrapper
- added gpu::cvtColor for RGB <-> YCrCb and RGB <-> YUV
- added gpu::magnitude for complex source vector (two channels float). added gpu::cvtColor for BGR5x5 <-> BGR and BGR5x5 <-> Gray.
- updated StereoBP docs & comments
- added gpu add, subtract, multiply, divide, absdiff with Scalar. added gpu exp, log, magnitude, based on NPP. updated setTo with new NPP functions. minor fix in tests and comments.
- added copyright for split_merge files
- added gpu::LUT for CV_8UC3 type, added gpu::cvtColor for BGR2BGR5x5, minor fix in tests.
- added black list for gpu tests
- giving the android jni a start up function OnLoad
- gpu test refactoring
- refactoring npp tests
- fixed grammar error
- added DenseFeatureDetector
- modified according to NPP for CUDA 3.2 API updates.
- FindNPP.cmake: added support of NPP 3.2
- search in env var CUDA_NPP_ROOT
- fixed if condition syntax: ! -> NOT
- fixed compile errors with MSVC2010
- remove #include <Eigen/Core> from eigen.hpp
- added bag of words; did some renaming
- adding setup for some sample applications that use OpenCV on the android platform - nothing concrete yet - but soon.
- split descriptors.cpp
- added OpponentColorDescriptorExtractor
- include Eigen2/3 headers optionally, for greater flexibility
- fixing a bug in the local.env.mk setup, and correcting the readme's
- improved matrix expressions efficiency in some cases & simplified the code
- adding some functionality to the android-opencv shared library
- added gpu version of LUT, integral, boxFilter and cvtColor (RGB <-> YCrCb), based on NPP. minor refactoring of GPU module and GPU tests, split arithm and imgproc parts.
- fixed problem with surrogate splits in decision trees training
- woops, broke cmake for a bit...
- removing the duplicated zlib for android - seems to build and link fine with the old one ...
- adding some small changes to support android build, mainly cmake stuff, but in persistance the wcstombs is not supported on android, and in sift.cpp there was and ifdef that affected arm and this causes undefined symbols on android.
- modding the 3rdparty CMakeLists.txt to allow for android compilation using cmake
- adding cmake based android scripts and a reusable android library - samples to follow - haven't tested yet completely
- deleting the android - will readd momentarily
- added Google Test framework
- added Google Test framework
- fixed test of matrix operations
- moved the matrix expressions from mat.hpp to matop.cpp. That should improve build times
- remove failed tests (issues #578, 579)
- remove failed test (see issues #575, 576, 577, 567, 568)
- implemented cv::gpu::merge and cv::gpu::split functions
- updated test thresholds again
- minor refactoring of GPU module and GPU tests added gpu compare version for CMP_NE operation
- updated test thresholds
- uncommented some tests
- remove failed test (see issues #571, 572)
- remove failed test (see issue #570)
- remove failed test (see issue #536)
- GPU module: minor interface changes
- added GPU implementation of morphology functions (using NPP) and tests for it. added npp_error function added check_and_treat_gpu_exception function for tests_gpu
- uncommented fix of write/read keypoints
- remove failed tests
- removed duplicate regression test on CalonderDescriptorExtractor::compute
- merged regression tests for FeatureDetector, DescriptorExtractor from branch .features2d; renamed createDetector to createFeatureDetector
- Update doc because of typo in Qt section
- Qt fix: cvAddText ticket #561
- testing commit permission
- added nppSafeCall
- commented fix write/read keypoints temporarily
- Added implementation and test for the GPU version of warpAffine, warpPerspective, rotate, based on NPP. Renamed copyConstBorder to copyMakeBorder. Fixed warnings when HAVE_CUDA is not defined.
- merged fix of write/read keypoints from branch
- Added implementation and test for the GPU version of flip, resize, sum, minMax, copyConstBorder, setTo, based on NPP.
- added build scripts for Android, contributed by Ethan Rublee. The scripts are not quite usable yet.
- excluded from Android build
- flattened flann directory structure; patched zlib to build with Android NDK
- eliminated freeze in SVD.
- added blacklist support in the OpenCV test engine for centralized exclusion of failed tests
- fixed accuracy problem in cv::invert() (Cholesky method)
- minor (unset NPP library variables if not found)
- Added implementation and test for the GPU version of subtract, multiply, divide, transpose, absdiff, threshold, compare, meanStdDev, norm, based on NPP.
- fixed build npp for linux
- Added compilation with NPP to GPU module(FindNPP script). Tested only on win32, but it does not influence on OpenCV compilation if WITH_CUDA flag unset.
- fixed CvDTree and CvForestTree find_best_split() methods
- gpu::add now supports 8UC4 and 32FC1
- Fixed FernClassifier
- created build infrastructure for NPP linking in CMake.
- Added initial implementation and test for the GPU version of add, based on NPP. Need to implement for other depths. Also waiting NPP at CMake.
- fixed compile for linux
- added async version of postfilter_textureness and prefilter_xsobel, modified async test and added test for async version of stereobm
- added 3-camera rectification and 8-coeff distortion model
- GPU module update: _GPU suffix removed, some namespaces renamed, minor refactorings.
- GPU module code cleaning * tests do not crash without test data * test files renamed in systematic way * added Test suffix for test classes names * ts->printf used instead of some cout
- meanShiftFiltering_GPU output parameters changed to CV_8UC4. This is a start for moving from 3 channel to C4 images within GPU module.
- fixed ffopencv build with Mingw
- remove failed test (see issue #536)
- removed slamch.c/dlamch.c -specific GCC options, since the current implementation is very simple and relies on IEEE754 standard, rather than the actual machine behavior.
- fixed 2 bugs in the recently modified Lapack functions
- minor compilation fix
- fixed compile error when HAVE_CUDA is not defined
- fixed Mat(const Matx&) constructor; added SVD(Matx)
- optimized lapack' SVD for noticeably better performance on small matrices
- fixed cvtColorGPU on linux
- fixed bugs in STEREOBM (added syncs and volatiles, prevent reading from uninitialized memory)
- added cvtColor on gpu (supports conversion between RGB, BGR and GRAY)
- minor fix with tests
- added test stereo_bm and added "volatile" in constantspacebp
- fixed 3 bytes reading/writing in remap
- added remap version for 3-channels input images
- minor fix for windows
- compilation errors under win32
- added flags OpenCV_COMPUTE_CAPABILITIES, which stores the version compute capability from which it is compiled opencv now use opencv with cuda in your application  in the such way : set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS} ${OpenCV_COMPUTE_CAPABILITIES})
- added methods estimateRecopmmendedParams for StereoBP and StereoCSBP
- renamed colorizeDisp to drawColorDisp, added acync version of drawColorDisp and reprojectImageTo3D_GPU.
- Qt add byte per line information to fix a bug
- added match()
- Qt Ticket #520
- fixed bug in StereoBeliefPropagation with user allocated disparity
- uploadConstant function for gpu
- added reprojectImageTo3D_GPU
- fixed test with small size gpu memory
- Qt ticket #537 Forgot to update so code after previous fix
- added colorizeDisp, fixed DisparityBilateralFilter
- Qt weird bug with QLabel (is it really fixed ?)
- fixed bug in DisparityBilateralFilter
- Qt bug with buttons
- added DisparityBilateralFilter to gpu module
- Qt bug fixed #534
- fixed warnings added comments in gpu.hpp
- Bug in calibration.cpp sample
- 
- Qt test (some code disabled for debugging)
- fixed some warnings
- Qt Python binding -- #512
- added parallel build for visual studio
- added gpu test ConstantSpaceBP
- fixed get_first_k_initial_global
- Qt ticket #531
- added get_first_k_initial_global_init_global_cost in gpu::SCBP
- fixed bugs in page locked memory allocation avoid extra gpu memory allocation in BP and CSBP
- Fixed object recognition documentation
- Qt sample code and some fixes
- excluded cv_object_recognition.tex build (temporarily)
- added version of StereoBeliefPropagation::operator() for user specified data term
- fixed problem with parameters in constant space belief propagation with short type of messages
- rename con.png to  cones.png in test gpu
- minor changes
- fixed build without cuda
- fixed build without cuda
- GCC warning: new line at the end of file
- fixed build without cuda
- Qt bug fixed with cvWaitKey(0)
- Qt fixed bug with OpenGL, and save issue reported in #520
- a lot of refactoring
- added implement MatPL with serocopy and writecombited
- warning level switched to W3 fpr gpu module
- 
- minor fix
- added minimum disparity threshold parameter to StereoConstantSpaceBP
- added static to funcs
- gpu::StereoConstantSpaceBP:   fixed some bugs in init_data_cost on first level (added non-reduction version for first level)   optimized compute_data_cost like init_data_cost (used reduction scheme)   avoid temp matrix
- added license headers
- minor fix
- added gpu test : stereobp
- added test for gpu: meanshift
- added gpu implementation of constant space belief propagation stereo matching. some refactoring of StereoBeliefPropagation.
- minor fix
- minor fix
- minor fix
- added choise in compute capability
- Added object recognition documentation
- Added documentation for VOC dataset interface, bag-of-words and other new object recognition tools (GSoC 2010)
- meanShiftFilteringGPU: performance and bug with type conversions
- gramma ;)
- cv::gpu::CudaStream -> cv::gpu::Stream some refactoring added gpu module to compilation
- added todo for descriptors evaluation
- fixed SVM
- fixed texture binding and warning on linux
- another stdint.h -> msc_stdint.h fix
- meanShiftFiltering added (by masha) get free memory function
- stdint.h  -> msc_stdint.h
- added initWideAngleProjMap() function
- updated ffmpeg to 0.6.0
- added detector and descriptor evaluation to sample descriptor_extractor_matcher
- fixed linker errors on Win and some warnings
- replaced detector/descriptor evaluation functions from test to features2d; modified VectorDescriptorMatch constructor; removed commented calonder descriptor implementation
- Fixed bugs in BruteForceMatcher and its specialization
- added GridAdaptedFeatureDetector, PyramidAdaptedFeatureDetector and funcs to draw keypoints and matches
- repaired aspect ratio option; fixed comments
- Qt: disable KEEP_RATIO with OpenGL to avoid a blinking bug Qt: Now OpenGL rendering is ok
- Qt doc updated
- added support of 3 channels images to StereoBeliefPropagation_GPU
- minor fix
- optimized gpumat::setTo(), get rid of division operation
- fixed "undefined cvCreateCameraCapture_V4L" linker errors on some linux distros (thanks to miguelinux for the patch)
- added optimized belief propagation implementation (used short for messages)
- Qt imgRegion bug fixed Qt compilation pb with OpenGL flags fixed
- #509, patch for GetTrackbarPos
- 
- Fixed bugs on Qt
- Commented out rand test due to failure on win32
- Commenting out aertrees test due to a failure on windows 32
- fixed compile error on VS2008
- replaced KeyPoint::overlap implementation by faster version (thanks to Suat Gedikli)
- fixed Qt bug
- exclude failed test (ds-graphscan)
- renamed test
- fixed acalonder test for Win
- made MatConstIterator STL compliant
- fixed LineIterator constructor in order to make LineIterator::pos() work properly (#408)
- fixed roi handling in HOGDescriptor::computeGradient (ticket #295).
- temporarily disable 16-bit input in cap_dc1394_v2.cpp (ticket #296). thanks to sebastians for the patch!
- modified sample find_obj_calonder
- avoid crash in cvCalcEMD() when one of the histograms has only one non-zero element (ticket #396). Thanks to nburrus for the patch
- inserted missing std:: (ticket #333). Thanks to trisk for the patch!
- minor fix
- speckle filtering added
- changed StereoBeliefPropagation_GPU output disparity default type to CV_32S
- fixed compile error when HAVE_EIGEN2 (#500)
- implemented asynchronous call for StereoBeliefPropagation_GPU
- added conversion operators Mat->vector<T>, Mat->Vec<T,n>, Mat->Matx<T,m,n>
- working on OpenGL for Windows
- Qt: Fixed bug with exclusive buttons Fixed memory leaks
- added c++ interface for cvPyrMeanShiftFiltering; added sample on meanshift segmentation
- exclude failed tests (color-lab, color-luv)
- added gpu belief propagation stereo matching
- minor fixes
- updated threshold in test
- fixed compile errors on VS 2008
- added method to compute overlap for KeyPoint pair
- minor changes of test
- excluded calonder test if CV_SSE2==0
- fixed incorrect assert in RGB2Lab_b constructor
- relaxed error threshold in color-luv test
- fixed Mat::Mat(const IplImage*, bool) constructor (ticket #487). fixed the bayer demosaicing part in the new cv::cvtColor implementation
- Qt - debugging Linux and Windows
- increased err threshold in matrix-transform test (ticket #476)
- increased error threshold in matrix-solve test (ticket #496)
- increased error threshold in matrix-invert test (ticket #465)
- QT statusbar bug fixed for Windows
- rewrote color conversion functions; added sRGB<->CIE Lab/Luv conversion; added RGB<->YUV conversion; improved [s]RGB->Lab conversion speed
- fixed compile errors on VS2008
- 
- Qt on Windows -- in progress
- added test on CalonderDescriptorExtractor::compute
- replaced Calonder descriptor implementation; added windowedMatchingMask()
- commented find_obj_calonder
- optimized gpumat::copyTo()
- optimized gpumat::setTo()
- implemented asynchronous call for StereoBM()
- implemented saturate_cast on gpu; updated GpuMat::convertTo implementation with saturate_cast; minor fix of convert_to test
- minor
- fixed bug with loading to constant memory
- refactoring and minor code improvements added cuda_shared.hpp header was reorganized in order to speed up compilation
- minor fix
- fixed compiler error for win32
- implemented asynchronous call for GpuMat::upload() and GpuMat::download(). added test for asynchronous call.
- 
- implemented asynchronous call for gpumat::setTo(), gpumat::copyTo(), gpumat::converTo()
- exclude failed test (matrix-solve)
- modified FernClassifier::train(); remove old RTreeClassifier and added new implementation CalonderClassifier; removed old find_obj_calonder and added new one
- saturate_cast_gpu.hpp
- cvarrseq args attempt array conversions first
- #489, Forbid transposed matrices in fromarray()
- QT new functions:   - cvCreateOpenGLCallback: draw 3D on top of the image
- imgproc_gpu - minor refactoring
- minor fix
- ticket 490: bool not defined ? -> changed everything in int
- small modifications in tests
- Added implementation of remap on GPU. Minor fixes of convertTo. Added opencv_imgproc to gpu_test dependencies.
- grabCut fist impl and test
- QT new functions:  - add CV_RADIOBOX with exclusive mode
- QT new functions:  - cvAddButton changed to match requirement  - CV_GUI_NORMAL and CV_GUI_EXPANDED done  - context menu with right click
- minor sample changes
- -arch=sm_13
- Variable winSize for StereoBP_GPU Fixed StereoBM_GPU kernel crash Textureness threshold added
- reduced code convert_to by using templates, merged with copyTo
- added implementation copyTo() with mask and added test for this method
- modified kernel setto(), added double type, code has been improved
- added implementation GpuMat::convertTo and merged this with matrix_operations.cpp
- optimized gpumat::setTo(), ~ 30 speedup
- optimized VNG demosaicing using SSE2 (got ~3x speedup)
- fixed implementation of gpumat::setTo()
- fixed implementation of gpumat::setTo() and improved gputest
- added numerical values to the new _VNG constants' definitions.
- Added VNG Bayer enums
- added VNG demosaicing algorithm (ticket #466)
- prefilter_xsobel option added to stereobm_gpu
- exclude failed tests
- EHsc- warning fixed
- QT new functions:  - cvAddButton done  - All the "actions" of the toolbar are working  - Window properties done
- disabled W4 warnings  for GPU module.
- fixed implementation gpumat::setTo()
- added the module for testing gpu, by default turned off
- linux compiletion error
- compilation with no cuda re factored
- added implementation SetTo() with mask
- Added implementation SetTo() without mask
- removed extra dashes from XMLs to make them standard-compilant (ticket 375)
- replaced unlink() & _unlink() with more standard remove() (ticket #334)
- Added files for implementation of operations SetTo()
- fixed some more MSVC2010 warnings
- exclude failed tests
- raised the error threshold in moments-raster test (ticket #438)
- raised the error threshold in accum-runavg test (ticket #448)
- a few more warnings fixed
- do not use WIN64/_WIN64 anymore - CMake did not set it anyway. Use WIN32 + __x86_64 or _M_X64 instead. Also, make VideoInput optional (WITH_VIDEOINPUT=ON/OFF) => now Mingw-dw2 can build OpenCV
- fixed reprojection error check in the fundamental matrix test
- fixed the singular case in the rodrigues test. increased the error threshold in findFundamentalMat test
- fixed some warnings from xcode
- removed opencv_gpu from OpenCVConfig.cmake.in
- eliminated some GCC 4.x warnings
- QT new functions:  - fixed icvFindTrackbar bug
- repaired build on mac after libtiff update
- fixed VS preprocessor condition to include pmmintrin.h (which is available in VS2008 and later versions, but not in VS2005)
- added workaround for strange tmpnam() output from VS2010. turned off optimization for DCT & DFT on Win64 for VS200x (VS2010 builds it fine)
- fixed some more 64-bit related VS2010 warnings
- Fixed a memory leak
- updated 3rd party libs: CLapack 3.1.1.1 => 3.2.1, zlib 1.2.3 => 1.2.5, libpng 1.2.x => 1.4.3, libtiff 3.7.x => 3.9.4. fixed many 64-bit related VS2010 warnings
- QT new functions:  - Finished toolbar: the last icon opens an external window with the trackbars inside
- QT new functions:  - Add icons for toolbar in new folder (files_Qt) (later, will delete useless icons)
- QT new functions:  - Add toolbar  - Clean the code  - Window properties in progress
- bixed bug in cudaSafeCall
- added safe call support in cu files
- added support to build without cuda.
- fixed problem with building module gpu on linux
- fixed problem with compiled on linux
- minor changes in gpu code (initialization interface)
- First gpu code draft. Interface might be significantly changed in future. Simple implementation of StereoBM_GPU. It is excluded from compilation now.
- exclude failed tests
- Fixed crash if no chessboard problem
- added universal opencv header
- Another little fix for Monocrome frame
- Fixed a typo
- Some little fix in pvapi backend
- fixed ds-graphscan test (trac #461)
- fixed ds-graph test
- improved accuracy of the matrix determinant and matrix inversion functions (trac #431)
- disabled Qt by default (until the code is stabilized)
- use sleep instead of usleep on window
- Ticket #458
- exclude failed tests
- Changed VectorDescriptorMatch interface to add factory capabilities and changed factory functions interface (return smart pointer)
- New functions with QT GUI: - 3 new points mostly done:       - OpenGL support enabled (windows are rendered using GPU)       - Save current screen (with overlay and so on...) with shortcut CTRL+S       - Text rendering (with any system font, and possibility to set the style - normal, italic,... - the weight - normal, bold, ... - the color, the spacing between letters, and so on...)
- relaxed error threshold for matrix-dotproduct (ticket #447)
- rewrote normal RNG function to workaround the bug in gcc 3.4 (ticket #449)
- exclude failed tests
- turn off PCH support for GCC 3.x
- Partly relaxed a condition on cornersubpix error reduction
- exclude ds-graph test
- exclude failed tests
- trying to repair OpenEXR detection
- exclude MacOS failed tests
- fix build with GCC 3.3 on Ubuntu 8.04
- Fixing a win compilation problem
- exclude Ubuntu failed tests
- fix warnings about missing destructors in FeatureDetector and DescriptorExtractor classes and their derivatives
- make Qt bindings compile with any Qt 4.x
- fixed pdflatex compile error
- Qt backend development: Fixed CMake cached variables
- Fixed bug during compilation:  "error: explicit template specialization cannot have a storage class"
- New functions with QT GUI: - Save current screen (CTRL+S), with png, jpg, jpeg, bmp format support - OpenGL rendering enable (make Qt very fast)       -> working on opengl callback (done soon) - Rendering optimised (with and without openGL)
- added some quaternion operations on Scalar's.
- adjust the path in the installed dynamic libraries on MacOSX via INSTALL_NAME_DIR.
- fixed image rendering and memory leak in waitKey (thanks to Bart Nabbe and Steve Bushell)
- temporarily turned off PCH support for GCC 4.1, since it causes "undefined main" error
- fixed some MSVC2008 compiler errors & warnings
- removed embedded (obsolete) OpenEXR files; repaired OpenEXR bindings
- fixed compile problem (thanks to Pierre Moulon)
- fixed test crashes after CV_CN_MAX increase.
- Corrected Mask operator (from documentation mask must be a char matrix with non-zero values in the region of interest)
- Fixed bug ticket #416
- Added timing test for BruteForceMatcher
- Commenting out CV_CameraCalibrationBadArgTest because a crash in its constructor prevents opencv_test to run anything
- New functions with QT GUI: - fixed bug ticket #412
- Speeded up BruteForceMatcher using matrix multiplication
- New functions with QT GUI: - save/load window parameters implemented !
- changed WITH_EIGEN2=OFF to ON by default
- fixed compile errors on Ubuntu 10.04
- added Eigen2 support; fixed compile errors on Ubuntu 10.04
- added #include "cvconfig.h" to make TBB and other 3rd party libs work correctly
- added "small matrix" class Matx<T, m, n>
- fixed the output disparity at the extreme cases (minDisparity or minDisparity + numOfDisp - 1). Thanks to Patrick Mihelich for the report (trac #395)
- New functions with QT GUI: - imgregion shortcut implemented (CTRL+O)
- New functions with QT GUI: - imgregion (as with Matlab) implemented
- fixed compile error; renamed createDescriptorMatch to createGenericDescriptorMatch
- Added L1 distance code and used factory functions in evaluation framework
- New functions with QT GUI: - aspectRatio is controled by cvSet/getWindowProperty
- New functions with QT GUI: - fix CMake OpenGL compilation
- New functions with QT GUI: - fix zoom offset of 0.5 - fix CMake problem with QT detection - Code optimisation
- Added some paramter to set exposure, adaptable packet size
- Removed a debug print
- Initializaed monocrom variable on costructor
- Enable pixelformat check
- Return false if cannot adapt packed size with mtu max of network adapter
- Add support for monocrome cmos ccd Adapted mtu and packed size Some minor fixes in gstreamer because not implemented support of v4l v4l2 in the wrapper default beahvior must be v4l v4l2 or libv4l backends
- fixed memory leaks in cocoa bindings (trac ticket #253). Thanks to N. Butko
- Added algorithmic test for BruteForceMatcher
- modified default var_type values
- fixed
- squareSize renamed to square_size in the output xml/yml
- Typo in floats
- #393 SnakeImage revised Python binding
- #393, SnakeImage
- fixed case of var_type==0 (ticket 397)
- fixed computation of feature vectors in self-similarity descriptor (max->min)
- New functions with QT GUI: StatusBar with zoom/color/position information user can display infor mation in statusbar with cvDisplayStatusBar(window,text,delay_ms)
- fixed
- New functions with QT GUI: - fix c++ wrapper - fix compilation bugs
- New functions with QT GUI: - fix c++ wrapper - rename cvInformation in cvDisplayOverlay
- New functions with QT GUI: Fixed memory leak Disable QT by default
- New functions with QT GUI: Fixed bugs indicated by Vadim
- New functions with  QT GUI Shortcut for zoom (CTRL + and CTRL - for zoomin/out, CTRL Left/Right/Up/Down for panning, CTRL P for zoom = 1) Fix bug with key event
- added grabcut() call
- added dummy cvInitSystem() to Qt bindings to avoid "unresolved symbol" errors
- V4L2: removed setting device control values to initial values on capture release
- Fixed assert generation in descriptors evaluation due to many-to-many matching
- New functions with  QT GUI Mouse callback return correct value during zoom/panning Window overview in zoom mode done !
- New functions with  QT GUI Mouse callback return correct value during zoom/panning
- New functions with  QT GUI use inv matrix for Zoom in/out for better result Fix some bugs with zoom/panning
- Minor changes in descriptors evaluation
- Added distance threshold-based matching
- New functions with  QT GUI (presented in the 4th report) -Fullscreen -Change Autoresize dynamically (after windows are created) -Zoom on mouse location (with wheel) -Panning by click'ndrag posible after zooming
- Fixed plot data generation for descriptors comparison
- added parameter keypointIndexes to KeyPoint::convert, updated sample
- New functions with  QT GUI Zoom function done, working on panning now (weel enable it) Fixed mouse coordinate bugs
- added some on-screen help
- updated
- updated docs: grabcut added, PDF updated, ChangeLog: removed duplicated section
- draft version of 3d reconstruction sample (no bundle adjustment yet)
- improved the calibration and select3dobj samples
- handle the non-detected board case in cv::drawChessboardCorners.
- calibration sample rewritten using the C++ API
- working on QT change/get win property (done) Fullscreen done change autoresize dynamically done
- working on QT change/get win property (stylesheet for cvTrackBar fixed !!!)
- working on QT change/get win property (stylesheet for cvTrackBar fixed !!!)
- uprated detector test
- moved matchesMask
- renamed parameter of drawMatches (mask to matchesMask)
- Changed interface for drawMatches
- Updated documentation for drawMatches
- Fixing a bug
- Fixing a couple of bugs
- Added a simple sample for descriptor matching
- Modified a comment to DescriptorMatcher
- DescriptorMatching -> DMatch
- Moved detector and descriptor class factory functions into features2d module
- another attempt to fix cvcap_ffmpeg.cpp compile errors
- temporarily comment off the warnings about obsolete cxcore.h, cv.h etc.
- added plot data generation for detectors; removed old version of functions evaluating detectors
- updated descriptor_extractro_matcher sample to use added drawMatches function
- added drawMatches function to features2d and documentation on this
- Moved fern_params.xml to samples/cpp for generic_descriptor_match sample
- Added plot data generation for visual descriptors comparison in the evaluation framework
- working on QT change/get win property (stylesheet for cvTrackBar fixed !!!)
- working on QT change/get win property
- handle missing UINT64_C definition
- FindContours with all modes/methods, ticket 303
- FindContours on black image, ticket 303
- test_moments checks for float members
- minor fixes in CMake scripts
- accept default distortion coefficients (Mat() ~ (0,0,0,0,0))
- can now select the camera for calibration
- removed irrelevant assertion.
- avoid explicit sample enumeration in samples/{c,cpp}/CMakeLists.txt
- fix bugs
- removed keypoint_matching.cpp from samples/cpp/CMakeLists.txt, fixed some crashes in select3dobj.cpp
- will work on the trunk
- write camera pose, handle partially occluded objects
- the new 3D object selection demo
- Renamed descriptor samples
- Moving sample to cpp folder
- Added intro for detectors/descriptors interface
- modified keypoints_matching sample
- minor changes of feature2d documentation
- Added sample for GenericDescriptorMatch
- couple more fixes
- couple more hyperlinks fixed
- fixed matrix comma initializer for shorter notation
- fixed code samples
- some more samples
- added documentation on feature2d module
- some hyperrefs fixed
- Generated PDF of the cheatsheet
- shortened and extended
- fixed L2 used in BruteForceMatcher
- moved sift parameters implementation from hpp file
- Fixed FernDescriptorMatch
- added OpenCV cheat sheet
- Fixed FernDescriptorMatch and undid change of FernClassifier
- fixed assert() in BruteForceMatcher<Distance>::matchImpl()
- modified DescriptorMatcher
- Added Fern Descriptor and Calonder Descriptor to the evaluation framework
- Fixed bugs in FernDescriptorMatch and FernClassifier
- fixed sift wrapper
- continue integrating QT GUI (GoC 2010)
- Start integrating QT GUI (GoC 2010)
- avoid one possible singularity in cvFindHomography
- fixed reading of certain BMP files
- Changed params in detectors and descriptors evaluation to speed up testing
- Updated detectors and descriptors evaluation using new read/write methods
- Added read/write methods in detectors and some descriptors for XML/YAML persistence
- Speeded up descriptors evaluations using clear ()
- Added One Way Descriptor to detectors and descriptros evaluation
- Fixed a potential memory leak in OneWayDescriptorBase hierarchy.
- Storing PCA components and One Way descriptors in one yml file.
- testing commit
- testing commit
- testing commit
- testing commit
- extended highgui VideoCapture::get/set property documentation (thanks to frm)
- removed internal-use cvconfig.h from core/internal.hpp (thanks to iwamatsu)
- fixed OpenCV_INCLUDE_DIRS in OpenCVConfig.cmake (thanks to borism for the patch)
- fixed repeated calculations in cvsolve (thanks to denisstack for the fix)
- remove bash'ism in the samples build script (thanks to iwamatsu for the patch)
- now C++ classes can be read/written with cvRead/cvWrite/cvLoad/cvSave. Tested on HOGDescriptor
- added some more Doxygen comments
- build PDF out of rst docs
- fixed Latex docs for cleaner HTML output
- fixed duplicated definition warning
- fixed CvSVM
- fixed CvSVM
- #362, CvMoments fields now exposed, smoke tested by test_moments
- - Added a Warning macro compatible with GCC & MSVC to cv.h - Fixed extra text after #endif
- Added for backward compatibility
- modified the sub-pixel disparity interpolation (by K. Konolige)
- cv::cvflann -> cv::flann
- removed old sample on keypoints matching and added new one
- override clear method to VectorDescriptorMatch
- Fixing a compiler problem of a prev rev
- Fixing compiler errors for outlet_pose_estimation
- added clear method to GenericDescriptorMatch
- always create <opencv_build_dir>/doc/html to avoid CMake 2.4 error messages
- doxygenated calib3d module (C++ part only)
- doxygenated opencv_video & opencv_calib3d modules (C++ part only)
- Added deprecation warning for gcc
- doxygenated core and imgproc modules (C++ API only)
- Added a warning for deprecated headers
- Added headers for backward compatibility
- fixed a simple declaration error.
- fixed the module list in Doxygen CMake script
- renamed cv::flann to cv::cvflann to avoid name conflicts
- fixed gftt wrapper, update testdata
- fixed mixed-type exp and log functions, used in HMMs (thanks to V. Mityaev)
- minor changes of detectors test
- updated detectors and descriptors quality tests
- extended description of the error handling mechanism with OpenCV C++ API
- fixed filterSpeckles call in StereoBM (thanks to Patrick Mihelich)
- updated sift wrapper (recalculation angles mode)
- Typo
- updated OpenCV version because of the recent reorganization
- fixed source image corruption (ticket #306)
- added cv::setMouseCallback and cv::startWindowThread
- added Doxygen-based documentation (draft version for now)
- fixed wrapper of sift descriptor
- fixed the error in SURF when no keypoint detected
- updated detectors quality test, added descriptors quality test
- fixed wrapper of sift descriptor
- Make doc build work with new layout
- #301, sample code for CalcHist
- test case for #342
- test case for #342
- Tentative fix to using FIND_PACKAGE(OpenCV) from external apps after last atomic bomb commit! Fixed for OpenCV compiled whereever and NOT "make install"ed. This second case must be checked later, since I'm not sure of the pretended include dirs layout after "make install". If all include dirs go to the same target install directory, it should work as is right now.
- datamatrix sample
- Fixed typo in pkgconfig file
- added missing header
- install old headers for better compatibility with existing code
- #345, cvmat() now caught and exception raised
- renamed gstappsink.hpp->gstappsink.h
- LIBV4L: precomp.hpp include missing
- LIBV4L: fixed build failed on Linux
- fixed build on Linux
- "atomic bomb" commit. Reorganized OpenCV directory structure

